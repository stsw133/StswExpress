<UserControl x:Class="TestApp.ContractorsListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:se="clr-namespace:StswExpress;assembly=StswExpress"
             xmlns:local="clr-namespace:TestApp"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance Type=local:ContractorsListContext}">

    <DockPanel IsHitTestVisible="{Binding SaveCommand.IsBusy, Mode=OneWay, Converter={x:Static se:StswBoolConverter.Instance}, ConverterParameter=!}">
        <!-- button panel -->
        <se:StswDirectionView DockPanel.Dock="Top" CornerRadius="0" Margin="3" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Hidden">
            <UniformGrid Rows="1" HorizontalAlignment="Left">
                <se:StswSplitButton Command="{Binding RefreshCommand}" IsDropDownOpen="{Binding IsRefreshOpen}" Margin=" 0 0 6 0">
                    <se:StswSplitButton.Header>
                        <se:StswHeader Content="Refresh data" IconData="{x:Static se:StswIcons.Refresh}" IconFill="{DynamicResource StswColor.Neutral}"/>
                    </se:StswSplitButton.Header>
                    <se:StswButton BorderThickness="0" CornerRadius="0" Command="{Binding ClearCommand}">
                        <se:StswHeader Content="Clear table" IconData="{x:Static se:StswIcons.Broom}" IconFill="{DynamicResource StswColor.Neutral}"/>
                    </se:StswButton>
                </se:StswSplitButton>
                <se:StswButton Margin="0 0 6 0" Command="{Binding SaveCommand}">
                    <se:StswHeader Content="Save changes" IconData="{x:Static se:StswIcons.ContentSave}" IconFill="{DynamicResource StswColor.Modify}"/>
                </se:StswButton>
                <se:StswButton Margin="0" Command="{Binding ExportCommand}">
                    <se:StswHeader Content="Export to Excel" IconData="{x:Static se:StswIcons.MicrosoftExcel}" IconFill="{DynamicResource StswColor.Positive}"/>
                </se:StswButton>
            </UniformGrid>
        </se:StswDirectionView>
        <!-- progress panel -->
        <se:StswProgressBar DockPanel.Dock="Bottom" Margin="3" IsIndeterminate="True" State="{Binding LoadingState}" Visibility="{Binding LoadingState, Converter={x:Static se:StswIfElseConverter.Instance}, ConverterParameter='Ready~Collapsed~Visible'}"/>
        <DockPanel DockPanel.Dock="Bottom">
            <UniformGrid DockPanel.Dock="Right" Rows="1" VerticalAlignment="Top">
                <se:StswButton CornerRadius="0" Margin="3" Padding="0" Command="{Binding AddCommand}">
                    <se:StswHeader IconFill="{DynamicResource StswColor.Positive}" IconData="{x:Static se:StswIcons.Plus}" Margin="0" Padding="0"/>
                </se:StswButton>
                <se:StswButton CornerRadius="0" Margin="3" Padding="0" Command="{Binding CloneCommand}">
                    <se:StswHeader IconFill="{DynamicResource StswColor.Positive}" IconData="{x:Static se:StswIcons.ContentDuplicate}" Margin="0" Padding="0"/>
                </se:StswButton>
                <se:StswButton CornerRadius="0" Margin="3" Padding="0" Command="{Binding EditCommand}">
                    <se:StswHeader IconFill="{DynamicResource StswColor.Positive}" IconData="{x:Static se:StswIcons.Pencil}" Margin="0" Padding="0"/>
                </se:StswButton>
                <se:StswButton CornerRadius="0" Margin="3" Padding="0" Command="{Binding DeleteCommand}">
                    <se:StswHeader IconFill="{DynamicResource StswColor.Negative}" IconData="{x:Static se:StswIcons.Delete}" Margin="0" Padding="0"/>
                </se:StswButton>
            </UniformGrid>
            <TextBlock Margin="3" VerticalAlignment="Center">
                <Run Text="{Binding ListContractors.Count, Mode=OneWay}" FontWeight="Bold"/>
                <Run Text=" total rows, "/>
                <Run Text="{Binding ListContractors.Unchanged, Mode=OneWay}" FontWeight="Bold" Foreground="Gray"/>
                <Run Text=" unchanged rows, "/>
                <Run Text="{Binding ListContractors.Added, Mode=OneWay}" FontWeight="Bold" Foreground="{DynamicResource StswDataGrid.SpecialColumn.Added.Fill}"/>
                <Run Text=" added rows, "/>
                <Run Text="{Binding ListContractors.Modified, Mode=OneWay}" FontWeight="Bold" Foreground="{DynamicResource StswDataGrid.SpecialColumn.Modified.Fill}"/>
                <Run Text=" modified rows, "/>
                <Run Text="{Binding ListContractors.Deleted, Mode=OneWay}" FontWeight="Bold" Foreground="{DynamicResource StswDataGrid.SpecialColumn.Deleted.Fill}"/>
                <Run Text=" deleted rows"/>
            </TextBlock>
        </DockPanel>
        <!-- data grid -->
        <se:StswDataGrid FiltersData="{Binding FiltersContractors, Mode=OneWayToSource}"
                         FiltersType="SQL"
                         FrozenColumnCount="1"
                         ItemsSource="{Binding ListContractors}"
                         Margin="3"
                         RefreshCommand="{Binding RefreshCommand}"
                         SelectedItem="{Binding SelectedContractor}">
            <se:StswDataGrid.Resources>
                <se:StswBindingProxy x:Key="proxy" Proxy="{Binding}"/>
            </se:StswDataGrid.Resources>

            <DataGrid.Columns>
                <!-- ID -->
                <DataGridTextColumn Binding="{Binding ID}" IsReadOnly="True">
                    <DataGridTextColumn.Header>
                        <se:StswFilterBox Header="ID" FilterType="Number" FilterMode="Equal" FilterValuePath="a.ID"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>

                <!-- Type -->
                <DataGridComboBoxColumn DisplayMemberPath="Display" ItemsSource="{se:StswEnumToList local:ContractorType}" SelectedValueBinding="{Binding Type}" SelectedValuePath="Value">
                    <DataGridComboBoxColumn.Header>
                        <se:StswFilterBox Header="Type" FilterType="List" FilterMode="In" FilterValuePath="a.Type" ItemsSource="{se:StswEnumToList local:ContractorType}"/>
                    </DataGridComboBoxColumn.Header>
                </DataGridComboBoxColumn>

                <!-- Icon -->
                <DataGridTemplateColumn IsReadOnly="True">
                    <DataGridTemplateColumn.Header>
                        <se:StswFilterBox Header="Icon" FilterType="Number" FilterMode="GreaterEqual" FilterValuePath="datalength(a.Icon)"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <se:StswImage MaxHeight="32" MaxWidth="32" MenuMode="Full" Source="{Binding IconSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Name -->
                <DataGridTextColumn Binding="{Binding Name}">
                    <DataGridTextColumn.Header>
                        <se:StswFilterBox Header="Name" FilterType="Text" FilterMode="Contains" FilterValuePath="a.Name"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>

                <!-- Country -->
                <DataGridTextColumn Binding="{Binding Address.Country}">
                    <DataGridTextColumn.Header>
                        <se:StswFilterBox Header="Country" FilterType="Text" FilterMode="Contains" FilterValuePath="a.Country"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>

                <!-- PostCode -->
                <DataGridTextColumn Binding="{Binding Address.PostCode}">
                    <DataGridTextColumn.Header>
                        <se:StswFilterBox Header="Post code" FilterType="Text" FilterMode="Contains" FilterValuePath="a.PostCode"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>

                <!-- City -->
                <DataGridTextColumn Binding="{Binding Address.City}">
                    <DataGridTextColumn.Header>
                        <se:StswFilterBox Header="City" FilterType="Text" FilterMode="Contains" FilterValuePath="a.City"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>

                <!-- Street -->
                <DataGridTextColumn Binding="{Binding Address.Street}">
                    <DataGridTextColumn.Header>
                        <se:StswFilterBox Header="Street" FilterType="Text" FilterMode="Contains" FilterValuePath="a.Street"/>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>

                <!-- DefaultDiscount -->
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.Header>
                        <se:StswFilterBox Header="Default discount" FilterType="Number" FilterMode="GreaterEqual" FilterValuePath="a.DefaultDiscount"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <se:StswDecimalBox se:StswControl.IsBorderless="True" Padding="0" SeparatorThickness="1" Value="{Binding DefaultDiscount, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Stretch"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- IsArchival -->
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.Header>
                        <se:StswFilterBox Header="Is archival" FilterType="Check" FilterValuePath="a.IsArchival" IsFilterNullSensitive="True"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <se:StswCheckBox se:StswControl.IsBorderless="True" Padding="0" IsChecked="{Binding IsArchival, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Stretch"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- CreateDT -->
                <DataGridTextColumn Binding="{Binding CreateDT, StringFormat={}{0:yyyy-MM-dd HH:mm}}">
                    <DataGridTextColumn.Header>
                        <se:StswFilterBox Header="CreateDT" FilterType="Date" FilterMode="GreaterEqual" FilterValuePath="cast(a.CreateDT as date)"/>
                        <!-- Value1="{Binding Source={x:Static sys:DateTime.Today}, Mode=OneTime}" Value2="{Binding Source={x:Static sys:DateTime.Today}, Mode=OneTime}" -->
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
            </DataGrid.Columns>

            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <se:StswText Text="TEST"/>
                    <!--
                    <wv2:WebView2 Source="{Binding Pdf}">
                        <wv2:WebView2.Style>
                            <Style TargetType="{x:Type wv2:WebView2}">
                                <Setter Property="Height" Value="800"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Pdf}" Value="{x:Null}">
                                        <Setter Property="Height" Value="0"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </wv2:WebView2.Style>
                    </wv2:WebView2>
                    -->
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </se:StswDataGrid>
    </DockPanel>
</UserControl>
