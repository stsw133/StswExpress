<se:StswWindow x:Class="TestApp.Modules.Main.MainView"
               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
               xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
               xmlns:sys="clr-namespace:System;assembly=mscorlib"
               xmlns:se="clr-namespace:StswExpress;assembly=StswExpress"
               xmlns:local="clr-namespace:TestApp.Modules.Main"
               mc:Ignorable="d" Height="540" Width="900" WindowStartupLocation="CenterScreen"
               Title="{Binding Source={x:Static se:StswFn.AppNameAndVersion}}" SubTitle="{Binding Source={x:Static se:StswFn.AppCopyright}}"
               Icon="/StswExpress;component/Icons/32_users.png">
    <Window.DataContext>
        <local:MainContext/>
    </Window.DataContext>
    <!--
    <se:StswWindow.CustomControls>
        <Button Command="{x:Static se:StswCommands.Settings}">
            <se:OutlinedTextBlock Text="🔧"/>
        </Button>
    </se:StswWindow.CustomControls>
    -->
    <TabControl>
        <!-- main data -->
        <TabItem>
            <TabItem.Header>
                <se:StswHeader Text="Main data" IconData="{x:Static se:StswIcons.Profiles}"/>
            </TabItem.Header>
            <DockPanel>
                <!-- button panel -->
                <!--
                <UniformGrid DockPanel.Dock="Top" Rows="1" Margin="3" HorizontalAlignment="Left">
                    <se:StswButton Margin="3" Padding="3" ToolTip="Clear (F9)" Command="{x:Static se:StswCommands.Clear}">
                        <se:Header Padding="3" Text="Clear" Icon="/StswExpress;component/Icons/32_clear.png"/>
                    </se:StswButton>
                    <se:StswButton Margin="3" ToolTip="Refresh (F5)" Command="{x:Static se:StswCommands.Refresh}">
                        <se:Header Padding="3" Text="Refresh" Icon="/StswExpress;component/Icons/32_refresh.png"/>
                    </se:StswButton>
                    <se:StswButton Margin="3" ToolTip="Save (Ctrl + S)" Command="{x:Static se:StswCommands.Save}">
                        <se:Header Padding="3" Text="Save" Icon="/StswExpress;component/Icons/32_save.png"/>
                    </se:StswButton>
                </UniformGrid>
                -->
                <UniformGrid DockPanel.Dock="Top" Rows="1" Margin="3" HorizontalAlignment="Left">
                    <se:StswButton Margin="3" Background="{x:Static se:StswIconColors.Neutral}" ToolTip="Clear (F9)" Command="{x:Static se:StswCommands.Clear}">
                        <se:StswIcon Color="{x:Static SystemColors.WindowBrush}" Data="{x:Static se:StswIcons.Clear}" Scale="2"/>
                    </se:StswButton>
                    <se:StswButton Margin="3" Background="{x:Static se:StswIconColors.Neutral}" ToolTip="Refresh (F5)" Command="{x:Static se:StswCommands.Refresh}">
                        <se:StswIcon Color="{x:Static SystemColors.WindowBrush}" Data="{x:Static se:StswIcons.Refresh}" Scale="2"/>
                    </se:StswButton>
                    <se:StswButton Margin="3" Background="{x:Static se:StswIconColors.Modify}" ToolTip="Save (Ctrl + S)" Command="{x:Static se:StswCommands.Save}">
                        <se:StswIcon Color="{x:Static SystemColors.WindowBrush}" Data="{x:Static se:StswIcons.Save}" Scale="2"/>
                    </se:StswButton>
                    <se:StswButton Margin="3" Background="{x:Static se:StswIconColors.Positive}" ToolTip="Export to Excel" IsEnabled="False">
                        <se:StswIcon Color="{x:Static SystemColors.WindowBrush}" Data="{x:Static se:StswIcons.Excel}" Scale="2"/>
                    </se:StswButton>
                </UniformGrid>
                <!--
                <UniformGrid DockPanel.Dock="Top" HorizontalAlignment="Center" Columns="3">
                    <se:StswButton Margin="6" HorizontalContentAlignment="Left" Background="{x:Static se:StswIconColors.Designer}">
                        <se:StswHeader Text="Designer TEST" Foreground="{x:Static SystemColors.WindowBrush}" IconColor="{x:Static SystemColors.WindowBrush}" IconData="{x:Static se:StswIcons.Cake}"/>
                    </se:StswButton>
                    <se:StswButton Margin="6" HorizontalContentAlignment="Left" Background="{x:Static se:StswIconColors.Modify}">
                        <se:StswHeader Text="Modify TEST" Foreground="{x:Static SystemColors.WindowBrush}" IconColor="{x:Static SystemColors.WindowBrush}" IconData="{x:Static se:StswIcons.Cake}"/>
                    </se:StswButton>
                    <se:StswButton Margin="6" HorizontalContentAlignment="Left" Background="{x:Static se:StswIconColors.Negative}">
                        <se:StswHeader Text="Negative TEST" Foreground="{x:Static SystemColors.WindowBrush}" IconColor="{x:Static SystemColors.WindowBrush}" IconData="{x:Static se:StswIcons.Cake}"/>
                    </se:StswButton>
                    <se:StswButton Margin="6" HorizontalContentAlignment="Left" Background="{x:Static se:StswIconColors.Neutral}">
                        <se:StswHeader Text="Neutral TEST" Foreground="{x:Static SystemColors.WindowBrush}" IconColor="{x:Static SystemColors.WindowBrush}" IconData="{x:Static se:StswIcons.Cake}"/>
                    </se:StswButton>
                    <se:StswButton Margin="6" HorizontalContentAlignment="Left" Background="{x:Static se:StswIconColors.Positive}">
                        <se:StswHeader Text="Positive TEST" Foreground="{x:Static SystemColors.WindowBrush}" IconColor="{x:Static SystemColors.WindowBrush}" IconData="{x:Static se:StswIcons.Cake}"/>
                    </se:StswButton>
                    <se:StswButton Margin="6" HorizontalContentAlignment="Left" Background="{x:Static se:StswIconColors.Structure}">
                        <se:StswHeader Text="Structure TEST" Foreground="{x:Static SystemColors.WindowBrush}" IconColor="{x:Static SystemColors.WindowBrush}" IconData="{x:Static se:StswIcons.Cake}"/>
                    </se:StswButton>
                </UniformGrid>
                -->
                <se:StswProgressBar DockPanel.Dock="Bottom" Margin="3" Value="{Binding LoadingProgress}"/>
                <!-- data grid -->
                <se:StswDataGrid ItemsSource="{Binding ListUsers}" Margin="3" HeaderBackground="#348C" HeaderBorderBrush="#7777" BorderBrush="#7777">
                    <DataGrid.Resources>
                        <se:BindingProxy x:Key="proxy" Proxy="{Binding}"/>
                    </DataGrid.Resources>
                    <DataGrid.Columns>

                        <!-- ID -->
                        <DataGridTextColumn Binding="{Binding ID}">
                            <DataGridTextColumn.Header>
                                <se:ColumnFilter This="{Binding DataContext.ColumnFilters[ID], RelativeSource={RelativeSource AncestorType=Window}}"
                                                 Header="ID" FilterType="Number" FilterMode="Equal" FilterSqlColumn="a.ID"/>
                            </DataGridTextColumn.Header>
                        </DataGridTextColumn>

                        <!-- Type -->
                        <DataGridComboBoxColumn TextBinding="{Binding Type}">
                            <DataGridComboBoxColumn.Header>
                                <se:ColumnFilter This="{Binding DataContext.ColumnFilters[Type], RelativeSource={RelativeSource AncestorType=Window}}"
                                                 Header="Type" FilterType="ListOfTexts" FilterMode="In" FilterSqlColumn="a.Type"
                                                 ItemsSource="{Binding Proxy.ListTypes, Source={StaticResource proxy}}"/>
                            </DataGridComboBoxColumn.Header>
                        </DataGridComboBoxColumn>

                        <!-- Icon -->
                        <DataGridTemplateColumn Width="30">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <se:StswImage ContextMenuVisibility="Visible" IsReadOnly="False" Source="{Binding Icon}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!-- Name -->
                        <DataGridTextColumn Width="*" Binding="{Binding Name}">
                            <DataGridTextColumn.Header>
                                <se:ColumnFilter This="{Binding DataContext.ColumnFilters[Name], RelativeSource={RelativeSource AncestorType=Window}}"
                                                 Header="Name" FilterType="Text" FilterMode="Contains" FilterSqlColumn="a.Name"/>
                            </DataGridTextColumn.Header>
                        </DataGridTextColumn>

                        <!-- IsEnabled -->
                        <DataGridCheckBoxColumn Width="auto" Binding="{Binding IsEnabled}">
                            <DataGridCheckBoxColumn.Header>
                                <se:ColumnFilter This="{Binding DataContext.ColumnFilters[IsEnabled], RelativeSource={RelativeSource AncestorType=Window}}"
                                                 Header="Enabled" FilterType="Check" FilterSqlColumn="a.IsEnabled"/>
                            </DataGridCheckBoxColumn.Header>
                        </DataGridCheckBoxColumn>

                        <!-- CreateDT -->
                        <DataGridTextColumn Binding="{Binding CreateDT, StringFormat={}{0:yyyy-MM-dd HH:mm}}">
                            <DataGridTextColumn.Header>
                                <se:ColumnFilter This="{Binding DataContext.ColumnFilters[CreateDT], RelativeSource={RelativeSource AncestorType=Window}}"
                                                 Header="CreateDT" FilterType="Date" FilterMode="GreaterEqual" FilterSqlColumn="cast(a.CreateDT as date)"
                                                 ValueDef="{Binding Source={x:Static sys:DateTime.Today}}"/>
                            </DataGridTextColumn.Header>
                        </DataGridTextColumn>

                    </DataGrid.Columns>
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsEnabled}" Value="True">
                                    <Setter Property="Foreground" Value="#777"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>
                </se:StswDataGrid>
            </DockPanel>
        </TabItem>
        <!-- stats -->
        <TabItem>
            <TabItem.Header>
                <se:StswHeader Text="Stats" IconData="{x:Static se:StswIcons.Stats}"/>
            </TabItem.Header>
            <DockPanel>
                <TextBlock Text="Not yet implemented"/>
            </DockPanel>
        </TabItem>
    </TabControl>
</se:StswWindow>
