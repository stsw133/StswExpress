<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress">

    <!-- StswColumnFilter -->
    <Style TargetType="{x:Type se:StswColumnFilter}">
        <Setter Property="Background" Value="{DynamicResource StswButton.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{Binding Background, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_ColorBrightness.Instance}, ConverterParameter=?60}"/>

        <Setter Property="BorderThickness" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter=0.15}"/>
        <Setter Property="SubBorderThickness" Value="{Binding BorderThickness.Left, Mode=OneWay, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter='1 0 0 0'}"/>
        <Setter Property="Margin" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter=0.25}"/>

        <Setter Property="FilterVisibility" Value="{Binding AreFiltersVisible, RelativeSource={RelativeSource AncestorType={x:Type se:StswDataGrid}}, Converter={x:Static se:conv_Bool.Instance}, FallbackValue=Visible}"/>
        <!--
        <Setter Property="RefreshCommand" Value="{Binding RefreshCommand, RelativeSource={RelativeSource AncestorType={x:Type se:StswDataGrid}}, FallbackValue={x:Null}}"/>
        -->
    </Style>

    <!-- StswComboBox -->
    <Style TargetType="{x:Type se:StswComboBox}">
        <Setter Property="Background" Value="{DynamicResource StswButton.Static.Background}"/>
        <Setter Property="BackgroundDisabled" Value="{DynamicResource StswButton.Disabled.Background}"/>
        <Setter Property="BackgroundMouseOver" Value="{Binding Background, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_ColorBrightness.Instance}, ConverterParameter=?30}"/>
        <Setter Property="BackgroundPressed" Value="{Binding Background, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_ColorBrightness.Instance}, ConverterParameter=?45}"/>
        <Setter Property="BackgroundReadOnly" Value="{Binding Background, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_ColorBrightness.Instance}, ConverterParameter=?15}"/>
        
        <Setter Property="BorderBrush" Value="{Binding Background, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_ColorBrightness.Instance}, ConverterParameter=?60}"/>
        <Setter Property="BorderBrushDisabled" Value="{DynamicResource StswButton.Disabled.Border}"/>
        <Setter Property="BorderBrushMouseOver" Value="{Binding BorderBrush, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_ColorBrightness.Instance}, ConverterParameter=?20}"/>
        <Setter Property="BorderBrushPressed" Value="{Binding BorderBrush, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_ColorBrightness.Instance}, ConverterParameter=?30}"/>
        
        <Setter Property="Foreground" Value="{Binding Background, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_Color.Instance}, ConverterParameter=‼}"/>
        <Setter Property="ForegroundDisabled" Value="{DynamicResource StswButton.Disabled.Foreground}"/>

        <Setter Property="BorderThickness" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter=0.15}"/>
        <Setter Property="PopupBorderThickness" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter=0.15}"/>
        <Setter Property="SubBorderThickness" Value="{Binding BorderThickness.Left, Mode=OneWay, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter='1 0 0 0'}"/>
        <Setter Property="CornerRadius" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter=0.75}"/>
        <Setter Property="Padding" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter=0.25}"/>

        <Setter Property="ButtonAlignment" Value="Right"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <!-- StswDataGrid (in xaml file) -->

    <!-- StswDateBox -->
    <Style TargetType="{x:Type se:StswDateBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Background" Value="{DynamicResource StswBox.Static.Background}"/>
        <Setter Property="BackgroundDisabled" Value="{DynamicResource StswBox.Disabled.Background}"/>
        <Setter Property="BackgroundMouseOver" Value="{Binding Background, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_ColorBrightness.Instance}, ConverterParameter=?30}"/>
        <Setter Property="BackgroundFocused" Value="{Binding Background, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_ColorBrightness.Instance}, ConverterParameter=?45}"/>
        <Setter Property="BackgroundReadOnly" Value="{Binding Background, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_ColorBrightness.Instance}, ConverterParameter=?15}"/>

        <Setter Property="BorderBrush" Value="{Binding Background, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_ColorBrightness.Instance}, ConverterParameter=?60}"/>
        <Setter Property="BorderBrushDisabled" Value="{DynamicResource StswBox.Disabled.Border}"/>
        <Setter Property="BorderBrushMouseOver" Value="{Binding BorderBrush, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_ColorBrightness.Instance}, ConverterParameter=?20}"/>
        <Setter Property="BorderBrushFocused" Value="{Binding BorderBrush, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_ColorBrightness.Instance}, ConverterParameter=?30}"/>

        <Setter Property="Foreground" Value="{Binding Background, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_Color.Instance}, ConverterParameter=‼}"/>
        <Setter Property="ForegroundDisabled" Value="{DynamicResource StswBox.Disabled.Foreground}"/>
        <Setter Property="ForegroundMouseOver" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ForegroundFocused" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ForegroundPlaceholder" Value="{DynamicResource StswBox.Disabled.Foreground}"/>
        
        <Setter Property="BorderThickness" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter=0.15}"/>
        <Setter Property="SubBorderThickness" Value="{Binding BorderThickness.Right, Mode=OneWay, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter='0 0 1 0'}"/>
        <Setter Property="CornerRadius" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter=0.75}"/>
        <Setter Property="Padding" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter=0.25}"/>

        <Setter Property="Format" Value="d"/>
        <Setter Property="IncrementType" Value="Day"/>
        <Setter Property="Placeholder" Value="Wybierz datę..."/>

        <Setter Property="ButtonsAlignment" Value="Right"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    
    <!-- StswNavigation -->
    <Style TargetType="{x:Type se:StswNavigation}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StswBox.Static.Border}"/>

        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="SubBorderThickness" Value="0.5"/>
        <Setter Property="CornerRadius" Value="0"/>
        
        <Setter Property="ExtendedMode" Value="True"/>
    </Style>

    <!-- StswNavigationElement -->
    <Style TargetType="{x:Type se:StswNavigationElement}">
        <Setter Property="Background" Value="{DynamicResource StswButton.Static.Background}"/>
        <Setter Property="BackgroundDisabled" Value="{DynamicResource StswButton.Disabled.Background}"/>
        <Setter Property="BackgroundMouseOver" Value="{Binding Background, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_ColorBrightness.Instance}, ConverterParameter=?30}"/>
        <Setter Property="BackgroundPressed" Value="{Binding Background, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_ColorBrightness.Instance}, ConverterParameter=?45}"/>
        <Setter Property="BackgroundChecked" Value="{Binding Background, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_ColorBrightness.Instance}, ConverterParameter=?60}"/>

        <Setter Property="BorderBrush" Value="{Binding Background, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_ColorBrightness.Instance}, ConverterParameter=?60}"/>
        <Setter Property="BorderBrushDisabled" Value="{DynamicResource StswButton.Disabled.Border}"/>
        <Setter Property="BorderBrushMouseOver" Value="{Binding BorderBrush, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_ColorBrightness.Instance}, ConverterParameter=?20}"/>
        <Setter Property="BorderBrushPressed" Value="{Binding BorderBrush, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_ColorBrightness.Instance}, ConverterParameter=?30}"/>
        <Setter Property="BorderBrushChecked" Value="{Binding BorderBrush, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_ColorBrightness.Instance}, ConverterParameter=?40}"/>

        <Setter Property="Foreground" Value="{Binding Background, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_Color.Instance}, ConverterParameter=‼}"/>
        <Setter Property="ForegroundDisabled" Value="{DynamicResource StswButton.Disabled.Foreground}"/>
        <Setter Property="ForegroundMouseOver" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ForegroundPressed" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ForegroundChecked" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}"/>

        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="PopupBorderThickness" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter=0.15}"/>
        <Setter Property="SubBorderThickness" Value="{Binding BorderThickness.Bottom, RelativeSource={RelativeSource Self}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter=0.5}"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="Padding" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter=0.5}"/>

        <Setter Property="IconFill" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="IconScale" Value="1.5"/>
        <Setter Property="TextMargin" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter=0.3 0.1}"/>

        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <!-- StswControls -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/StswExpress;component/Controls/Styles/StswButton.xaml"/>
        <ResourceDictionary Source="/StswExpress;component/Controls/Styles/StswCheckBox.xaml"/>
        <ResourceDictionary Source="/StswExpress;component/Controls/Styles/StswExpander.xaml"/>
        <ResourceDictionary Source="/StswExpress;component/Controls/Styles/StswGroupBox.xaml"/>
        <ResourceDictionary Source="/StswExpress;component/Controls/Styles/StswHeader.xaml"/>
        <ResourceDictionary Source="/StswExpress;component/Controls/Styles/StswIcon.xaml"/>
        <ResourceDictionary Source="/StswExpress;component/Controls/Styles/StswImage.xaml"/>
        <ResourceDictionary Source="/StswExpress;component/Controls/Styles/StswLoadingCircle.xaml"/>
        <ResourceDictionary Source="/StswExpress;component/Controls/Styles/StswNumericBox.xaml"/>
        <ResourceDictionary Source="/StswExpress;component/Controls/Styles/StswPasswordBox.xaml"/>
        <ResourceDictionary Source="/StswExpress;component/Controls/Styles/StswProgressBar.xaml"/>
        <ResourceDictionary Source="/StswExpress;component/Controls/Styles/StswRadioBox.xaml"/>
        <ResourceDictionary Source="/StswExpress;component/Controls/Styles/StswRepeatButton.xaml"/>
        <ResourceDictionary Source="/StswExpress;component/Controls/Styles/StswSeparator.xaml"/>
        <ResourceDictionary Source="/StswExpress;component/Controls/Styles/StswTextBox.xaml"/>
        <ResourceDictionary Source="/StswExpress;component/Controls/Styles/StswTextEditor.xaml"/>
        <ResourceDictionary Source="/StswExpress;component/Controls/Styles/StswToggleButton.xaml"/>
        <ResourceDictionary Source="/StswExpress;component/Controls/Styles/StswWindow.xaml"/>
    </ResourceDictionary.MergedDictionaries>

</ResourceDictionary>