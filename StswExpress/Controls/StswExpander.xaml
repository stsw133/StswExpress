<Expander x:Class="StswExpress.StswExpander"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
          xmlns:se="clr-namespace:StswExpress"
          mc:Ignorable="d" d:DesignHeight="200" d:DesignWidth="200">

    <Expander.Resources>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"/>
                            <se:StswIcon x:Name="arrow" Grid.Column="1"
                                         Data="{x:Static se:StswIcons.MenuDown}"
                                         Margin="{TemplateBinding Padding}"
                                         SnapsToDevicePixels="False"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" Value="{x:Static se:StswIcons.MenuUp}" TargetName="arrow" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"/>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <se:StswIcon x:Name="arrow" Grid.Column="1"
                                             Data="{x:Static se:StswIcons.MenuUp}"
                                             Margin="{TemplateBinding Padding}"
                                             SnapsToDevicePixels="False"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"/>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" Value="{x:Static se:StswIcons.MenuDown}" TargetName="arrow" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <ContentPresenter Grid.Row="0"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"/>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <se:StswIcon x:Name="arrow" Grid.Row="1"
                                             Data="{x:Static se:StswIcons.MenuLeft}"
                                             Margin="{TemplateBinding Padding}"
                                             SnapsToDevicePixels="False"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"/>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" Value="{x:Static se:StswIcons.MenuRight}" TargetName="arrow" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <ContentPresenter Grid.Row="0"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"/>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <se:StswIcon x:Name="arrow" Grid.Row="1"
                                             Data="{x:Static se:StswIcons.MenuRight}"
                                             SnapsToDevicePixels="False"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"/>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" Value="{x:Static se:StswIcons.MenuLeft}" TargetName="arrow" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Expander.Resources>
    
    <Expander.Template>
        <ControlTemplate TargetType="{x:Type Expander}">
            <se:ClippingBorder x:Name="PART_MainBorder"
                               Background="{TemplateBinding Background}"
                               BorderBrush="{TemplateBinding BorderBrush}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}"
                               SnapsToDevicePixels="True">
                <DockPanel>
                    <ToggleButton x:Name="HeaderSite"
                                  DockPanel.Dock="Top"
                                  Background="{Binding SubBackground, RelativeSource={RelativeSource TemplatedParent}}"
                                  BorderThickness="0"
                                  Content="{TemplateBinding Header}"
                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                  FocusVisualStyle="{DynamicResource ExpanderHeaderFocusVisual}"
                                  FontFamily="{TemplateBinding FontFamily}"
                                  FontSize="{TemplateBinding FontSize}"
                                  FontStyle="{TemplateBinding FontStyle}"
                                  FontStretch="{TemplateBinding FontStretch}"
                                  FontWeight="{TemplateBinding FontWeight}"
                                  Foreground="{TemplateBinding Foreground}"
                                  IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                  Margin="0" MinHeight="0" MinWidth="0"
                                  Padding="{Binding SubPadding, RelativeSource={RelativeSource TemplatedParent}}"
                                  Style="{DynamicResource ExpanderDownHeaderStyle}"
                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    <Border x:Name="PART_SubBorder"
                            DockPanel.Dock="Top"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{Binding SubBorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                            CornerRadius="0"
                            Visibility="Collapsed"/>
                    <ContentPresenter x:Name="ExpandSite"
                                      DockPanel.Dock="Bottom"
                                      Focusable="False"
                                      Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Visibility="Collapsed"/>
                </DockPanel>
            </se:ClippingBorder>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="True">
                    <Setter Property="Visibility" Value="Visible" TargetName="PART_SubBorder" />
                    <Setter Property="Visibility" Value="Visible" TargetName="ExpandSite" />
                </Trigger>
                <Trigger Property="ExpandDirection" Value="Left">
                    <Setter Property="DockPanel.Dock" Value="Left" TargetName="ExpandSite" />
                    <Setter Property="DockPanel.Dock" Value="Right" TargetName="HeaderSite" />
                    <Setter Property="Style" Value="{DynamicResource ExpanderLeftHeaderStyle}" TargetName="HeaderSite" />
                </Trigger>
                <Trigger Property="ExpandDirection" Value="Right">
                    <Setter Property="DockPanel.Dock" Value="Right" TargetName="ExpandSite" />
                    <Setter Property="DockPanel.Dock" Value="Left" TargetName="HeaderSite" />
                    <Setter Property="Style" Value="{DynamicResource ExpanderRightHeaderStyle}" TargetName="HeaderSite" />
                </Trigger>
                <Trigger Property="ExpandDirection" Value="Up">
                    <Setter Property="DockPanel.Dock" Value="Top" TargetName="ExpandSite" />
                    <Setter Property="DockPanel.Dock" Value="Bottom" TargetName="HeaderSite" />
                    <Setter Property="Style" Value="{DynamicResource ExpanderUpHeaderStyle}" TargetName="HeaderSite" />
                </Trigger>
                <DataTrigger Binding="{Binding IsMouseOver, ElementName=HeaderSite}" Value="True">
                    <Setter Property="Background" Value="{Binding SubBackgroundMouseOver, RelativeSource={RelativeSource TemplatedParent}}" TargetName="HeaderSite" />
                    <Setter Property="BorderBrush" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainBorder" />
                    <Setter Property="TextElement.Foreground" Value="{Binding SubForegroundMouseOver, RelativeSource={RelativeSource TemplatedParent}}" TargetName="HeaderSite" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsPressed, ElementName=HeaderSite}" Value="True">
                    <Setter Property="Background" Value="{Binding SubBackgroundPressed, RelativeSource={RelativeSource TemplatedParent}}" TargetName="HeaderSite" />
                    <Setter Property="BorderBrush" Value="{Binding BorderBrushPressed, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainBorder" />
                    <Setter Property="TextElement.Foreground" Value="{Binding SubForegroundPressed, RelativeSource={RelativeSource TemplatedParent}}" TargetName="HeaderSite" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsChecked, ElementName=HeaderSite}" Value="True">
                    <Setter Property="Background" Value="{Binding SubBackgroundChecked, RelativeSource={RelativeSource TemplatedParent}}" TargetName="HeaderSite" />
                    <Setter Property="BorderBrush" Value="{Binding BorderBrushChecked, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainBorder" />
                    <Setter Property="TextElement.Foreground" Value="{Binding SubForegroundChecked, RelativeSource={RelativeSource TemplatedParent}}" TargetName="HeaderSite" />
                </DataTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{Binding SubBackgroundDisabled, RelativeSource={RelativeSource TemplatedParent}}" TargetName="HeaderSite" />
                    <Setter Property="BorderBrush" Value="{Binding BorderBrushDisabled, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainBorder" />
                    <Setter Property="TextElement.Foreground" Value="{Binding SubForegroundDisabled, RelativeSource={RelativeSource TemplatedParent}}" TargetName="HeaderSite" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Expander.Template>
</Expander>
