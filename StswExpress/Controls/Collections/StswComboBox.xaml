<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswComboBox}">
        <Setter Property="Background" Value="{DynamicResource StswButton.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Static.Border}"/>
        
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerClipping" Value="True"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="SeparatorThickness" Value="2"/>

        <Setter Property="Errors" Value="{Binding (Validation.Errors), RelativeSource={RelativeSource Self}}"/>
        <Setter Property="HasError" Value="{Binding (Validation.HasError), RelativeSource={RelativeSource Self}}"/>

        <Setter Property="Focusable" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>
        
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="se:StswPopup.Background" Value="{DynamicResource StswPopup.Static.Background}"/>
        <Setter Property="se:StswPopup.BorderBrush" Value="{DynamicResource StswPopup.Static.Border}"/>
        <Setter Property="se:StswScrollView.CanContentScroll" Value="True"/>
        <Setter Property="se:StswScrollView.IsDynamic" Value="True"/>
        <Setter Property="se:StswScrollView.PanningMode" Value="VerticalFirst"/>
        <Setter Property="se:StswScrollView.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="se:StswScrollView.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswComboBox}">
                    <Grid x:Name="OPT_TemplateRoot">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <!-- button -->
                        <se:StswToggleButton x:Name="OPT_MainButton"
                                             Grid.ColumnSpan="2"
                                             Background="{TemplateBinding Background}"
                                             BorderBrush="{TemplateBinding BorderBrush}"
                                             BorderThickness="{TemplateBinding BorderThickness}"
                                             ClickMode="Press"
                                             CornerClipping="{TemplateBinding CornerClipping}"
                                             CornerRadius="{TemplateBinding CornerRadius}"
                                             IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                             Padding="2 0 0 0"
                                             HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                             VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                             HorizontalContentAlignment="Stretch"
                                             VerticalContentAlignment="Stretch"
                                             Template="{DynamicResource StswDropToggleButtonTemplate}">
                            <DockPanel>
                                <!-- arrow -->
                                <Grid DockPanel.Dock="Right" Visibility="{Binding Visibility, Mode=OneWay, ElementName=OPT_DropArrow}" Width="24">
                                    <se:StswDropArrow x:Name="OPT_DropArrow" IsExpanded="{TemplateBinding IsDropDownOpen}"/>
                                </Grid>
                                <!-- separator -->
                                <se:StswSeparator x:Name="OPT_Separator" DockPanel.Dock="Right"
                                                  BorderBrush="{Binding BorderBrush, ElementName=OPT_MainButton}"
                                                  BorderThickness="{TemplateBinding SeparatorThickness}"
                                                  Orientation="Vertical"
                                                  Visibility="{Binding Visibility, Mode=OneWay, ElementName=OPT_DropArrow}"/>
                                <!-- sub controls -->
                                <ItemsControl x:Name="OPT_SubControls"
                                              DockPanel.Dock="{Binding (se:StswControl.SubControlsDock), RelativeSource={RelativeSource TemplatedParent}}"
                                              IsTabStop="False"
                                              ItemsSource="{TemplateBinding SubControls}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                                <!-- error -->
                                <se:StswSubError x:Name="OPT_Error" DockPanel.Dock="Right" Errors="{TemplateBinding Errors}" HasError="{TemplateBinding HasError}"/>
                                <!-- popup -->
                                <Popup x:Name="PART_Popup" Grid.ColumnSpan="2"
                                       AllowsTransparency="True"
                                       IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                       Placement="Bottom"
                                       PlacementTarget="{Binding ElementName=OPT_MainButton}"
                                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                       StaysOpen="False">
                                    <se:StswBorder x:Name="DropDownBorder"
                                                   Background="{Binding (se:StswPopup.Background), RelativeSource={RelativeSource TemplatedParent}}"
                                                   BorderBrush="{Binding (se:StswPopup.BorderBrush), RelativeSource={RelativeSource TemplatedParent}}"
                                                   BorderThickness="{Binding (se:StswPopup.BorderThickness), RelativeSource={RelativeSource TemplatedParent}}"
                                                   CornerClipping="{Binding (se:StswPopup.CornerClipping), RelativeSource={RelativeSource TemplatedParent}}"
                                                   CornerRadius="{Binding (se:StswPopup.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                   MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                   MinWidth="{Binding ActualWidth, ElementName=OPT_TemplateRoot}"
                                                   Padding="{Binding (se:StswPopup.Padding), RelativeSource={RelativeSource TemplatedParent}}">
                                        <DockPanel>
                                            <!-- filter -->
                                            <se:StswTextBox x:Name="PART_Filter" DockPanel.Dock="Top"
                                                            se:StswControl.IsBorderless="True"
                                                            se:StswControl.SubControlsDock="Left"
                                                            Text="{Binding FilterText, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Delay=200}"
                                                            Visibility="Collapsed">
                                                <se:StswTextBox.SubControls>
                                                    <se:StswSubLabel IconData="{x:Static se:StswIcons.Magnify}" Opacity="0.6"/>
                                                </se:StswTextBox.SubControls>
                                            </se:StswTextBox>
                                            <se:StswSeparator x:Name="OPT_FilterSeparator" DockPanel.Dock="Top"
                                                              BorderBrush="{Binding BorderBrush, ElementName=OPT_MainButton}"
                                                              BorderThickness="{TemplateBinding SeparatorThickness}"
                                                              Orientation="Horizontal"
                                                              Visibility="Collapsed"/>
                                            <!-- items -->
                                            <se:StswScrollView x:Name="DropDownScrollViewer"
                                                               AutoScroll="{Binding (se:StswScrollView.AutoScroll), RelativeSource={RelativeSource TemplatedParent}}"
                                                               CanContentScroll="{Binding (se:StswScrollView.CanContentScroll), RelativeSource={RelativeSource TemplatedParent}}"
                                                               Command="{Binding (se:StswScrollView.Command), RelativeSource={RelativeSource TemplatedParent}}"
                                                               CommandParameter="{Binding (se:StswScrollView.CommandParameter), RelativeSource={RelativeSource TemplatedParent}}"
                                                               CommandTarget="{Binding (se:StswScrollView.CommandTarget), RelativeSource={RelativeSource TemplatedParent}}"
                                                               Focusable="False"
                                                               IsBusy="{Binding (se:StswScrollView.IsBusy), RelativeSource={RelativeSource TemplatedParent}}"
                                                               IsDynamic="{Binding (se:StswScrollView.IsDynamic), RelativeSource={RelativeSource TemplatedParent}}"
                                                               PanningMode="{Binding (se:StswScrollView.PanningMode), RelativeSource={RelativeSource TemplatedParent}}"
                                                               HorizontalScrollBarVisibility="{Binding (se:StswScrollView.HorizontalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}"
                                                               VerticalScrollBarVisibility="{Binding (se:StswScrollView.VerticalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}">
                                                <!--
                                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                        <Rectangle x:Name="OpaqueRect"
                                                                   Fill="{Binding Background, ElementName=DropDownBorder}"
                                                                   Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                                   Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="OPT_Items" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                                </Grid>
                                                -->
                                                <VirtualizingStackPanel x:Name="OPT_Items" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                            </se:StswScrollView>
                                        </DockPanel>
                                    </se:StswBorder>
                                </Popup>
                                <!-- content -->
                                <Grid>
                                    <se:StswText x:Name="OPT_Placeholder"
                                                 Foreground="{DynamicResource StswBox.Placeholder.Foreground}"
                                                 IsHitTestVisible="False"
                                                 Margin="{TemplateBinding Padding}"
                                                 Text="{TemplateBinding Placeholder}"
                                                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                 Visibility="Collapsed"/>
                                    <ContentPresenter x:Name="OPT_Content"
                                                      Content="{TemplateBinding SelectionBoxItem}"
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                      IsHitTestVisible="False"
                                                      Margin="{TemplateBinding Padding}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Visibility="Collapsed"/>
                                    <se:StswTextBox x:Name="PART_EditableTextBox"
                                                    se:StswControl.IsBorderless="True"
                                                    AllowDrop="True"
                                                    IsReadOnly="{TemplateBinding IsReadOnly}"
                                                    Padding="{TemplateBinding Padding}"
                                                    Placeholder="{TemplateBinding Placeholder}"
                                                    Text="{TemplateBinding Text}"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Stretch"
                                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Visibility="Collapsed"/>
                                </Grid>
                            </DockPanel>
                        </se:StswToggleButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditable" Value="False">
                            <Setter Property="Visibility" Value="Hidden" TargetName="OPT_Separator"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="OPT_Content"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Padding" Value="0" TargetName="OPT_MainButton"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox"/>
                            <Setter Property="Background" Value="{Binding Background, ElementName=PART_EditableTextBox}" TargetName="OPT_SubControls"/>
                            <Setter Property="Background" Value="{Binding Background, ElementName=PART_EditableTextBox}" TargetName="OPT_Error"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Height" Value="95" TargetName="DropDownBorder"/>
                        </Trigger>
                        <Trigger Property="IsFilterEnabled" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Filter"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="OPT_FilterSeparator"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </MultiTrigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Visible" TargetName="OPT_Placeholder"/>
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Visibility" Value="Visible" TargetName="OPT_Placeholder"/>
                        </Trigger>
                        <!--
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" TargetName="OpaqueRect"/>
                            <Setter Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" TargetName="OpaqueRect"/>
                        </Trigger>
                        -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswButton.MouseOver.Background}" TargetName="OPT_MainButton"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswButton.MouseOver.Border}" TargetName="OPT_MainButton"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource StswText.Static.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswButton.Pressed.Background}" TargetName="OPT_MainButton"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Pressed.Border}" TargetName="OPT_MainButton"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource StswButton.ReadOnly.Foreground}" TargetName="OPT_MainButton"/>
                            <Setter Property="IsEnabled" Value="False" TargetName="OPT_Items"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Transparent" TargetName="PART_EditableTextBox"/>
                            <Setter Property="Background" Value="{DynamicResource StswButton.Disabled.Background}" TargetName="OPT_MainButton"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Disabled.Border}" TargetName="OPT_MainButton"/>
                            <Setter Property="Foreground" Value="{DynamicResource StswButton.Disabled.Foreground}" TargetName="OPT_MainButton"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="OPT_Placeholder"/>
                        </Trigger>
                        <Trigger Property="HasError" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource StswBox.Error.Border}" TargetName="OPT_MainButton"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="Background" Value="{DynamicResource StswItem.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource StswItem.Static.Border}"/>

                    <Setter Property="BorderThickness" Value="{DynamicResource StswItem.Thickness.Border}"/>
                    <Setter Property="Padding" Value="4 2"/>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Border x:Name="OPT_Border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource StswItem.Checked.Static.Background}" TargetName="OPT_Border"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource StswItem.Checked.Static.Border}" TargetName="OPT_Border"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource StswItem.MouseOver.Background}" TargetName="OPT_Border"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource StswItem.MouseOver.Border}" TargetName="OPT_Border"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsSelected" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="{DynamicResource StswItem.Checked.MouseOver.Background}" TargetName="OPT_Border"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource StswItem.Checked.MouseOver.Border}" TargetName="OPT_Border"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="{DynamicResource StswItem.Disabled.Background}" TargetName="OPT_Border"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource StswItem.Disabled.Border}" TargetName="OPT_Border"/>
                                        <Setter Property="TextElement.Foreground" Value="{DynamicResource StswItem.Disabled.Foreground}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True"/>
                                            <Condition Property="IsEnabled" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="{DynamicResource StswItem.Checked.Disabled.Background}" TargetName="OPT_Border"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource StswItem.Checked.Disabled.Border}" TargetName="OPT_Border"/>
                                        <Setter Property="TextElement.Foreground" Value="{DynamicResource StswItem.Checked.Disabled.Foreground}"/>
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
    </Style>

</ResourceDictionary>