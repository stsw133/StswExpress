<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress">
    
    <Style TargetType="{x:Type se:StswComboBox}">

        <Setter Property="Background" Value="{DynamicResource StswButton.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Static.Border}"/>
        
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="PopupBorderThickness" Value="2"/>
        <Setter Property="SubBorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="3"/>

        <Setter Property="ComponentsAlignment" Value="Right"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswComboBox}">
                    <Grid x:Name="PART_TemplateRoot" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <!-- button -->
                        <se:StswToggleButton x:Name="PART_MainButton" Grid.ColumnSpan="2"
                                             Background="{TemplateBinding Background}"
                                             BorderBrush="{TemplateBinding BorderBrush}"
                                             BorderThickness="{TemplateBinding BorderThickness}"
                                             ClickMode="Press"
                                             CornerRadius="{TemplateBinding CornerRadius}"
                                             IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                             Padding="2 0 0 0"
                                             HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                             VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <se:StswToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type se:StswToggleButton}">
                                    <se:StswClippingBorder Background="{TemplateBinding Background}"
                                                           BorderBrush="{TemplateBinding BorderBrush}"
                                                           BorderThickness="{TemplateBinding BorderThickness}"
                                                           CornerRadius="{TemplateBinding CornerRadius}"
                                                           SnapsToDevicePixels="True">
                                        <Grid> <!-- Grid is just a bugfix for ClippingBorder -->
                                            <ContentPresenter Focusable="False"
                                                              Margin="{TemplateBinding Padding}"
                                                              RecognizesAccessKey="True"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                    </se:StswClippingBorder>
                                </ControlTemplate>
                            </se:StswToggleButton.Template>
                            <DockPanel>
                                <!-- arrow -->
                                <ContentControl DockPanel.Dock="{TemplateBinding ComponentsAlignment}" Focusable="False" Width="24" Visibility="{TemplateBinding ArrowVisibility}">
                                    <se:StswIcon Data="{x:Static se:StswIcons.MenuDown}" Scale="1.5"/>
                                </ContentControl>
                                <!-- components -->
                                <ItemsControl DockPanel.Dock="{TemplateBinding ComponentsAlignment}" IsTabStop="False" ItemsSource="{TemplateBinding Components}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                                <!-- subborder -->
                                <Border x:Name="PART_SubBorder"
                                        DockPanel.Dock="{TemplateBinding ComponentsAlignment}"
                                        BorderBrush="{Binding BorderBrush, ElementName=PART_MainButton}"
                                        BorderThickness="{TemplateBinding SubBorderThickness}"
                                        SnapsToDevicePixels="True"
                                        Visibility="{TemplateBinding ArrowVisibility}"/>
                                <!-- popup -->
                                <Popup Grid.ColumnSpan="2"
                                       AllowsTransparency="True"
                                       IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                       Placement="Bottom"
                                       PlacementTarget="{Binding ElementName=PART_MainButton}"
                                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                       StaysOpen="False">
                                    <se:StswClippingBorder x:Name="DropDownBorder"
                                                           Background="{DynamicResource StswPopup.Static.Background}"
                                                           BorderBrush="{DynamicResource StswPopup.Static.Border}"
                                                           BorderThickness="{TemplateBinding PopupBorderThickness}"
                                                           CornerRadius="{TemplateBinding CornerRadius}"
                                                           MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                           MinWidth="{Binding ActualWidth, ElementName=PART_TemplateRoot}">
                                        <ScrollViewer x:Name="DropDownScrollViewer" Focusable="False">
                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                    <Rectangle x:Name="OpaqueRect"
                                                               Fill="{Binding Background, ElementName=DropDownBorder}"
                                                               Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                               Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                </Canvas>
                                                <ItemsPresenter x:Name="PART_Items" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </Grid>
                                        </ScrollViewer>
                                    </se:StswClippingBorder>
                                </Popup>
                                <!-- content -->
                                <Grid>
                                    <TextBlock x:Name="PART_Placeholder"
                                               Foreground="{DynamicResource StswBox.Placeholder.Foreground}"
                                               IsHitTestVisible="False"
                                               Margin="{TemplateBinding Padding}"
                                               Text="{TemplateBinding Placeholder}"
                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                               Visibility="Collapsed"/>
                                    <ContentPresenter x:Name="PART_ContentPresenter"
                                                      Content="{TemplateBinding SelectionBoxItem}"
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                      IsHitTestVisible="False"
                                                      Margin="{TemplateBinding Padding}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Visibility="Collapsed"/>
                                    <se:StswTextBox x:Name="PART_EditableTextBox"
                                                     AllowDrop="True"
                                                     BorderThickness="0"
                                                     CornerRadius="0"
                                                     IsReadOnly="{TemplateBinding IsReadOnly}"
                                                     Padding="{TemplateBinding Padding}"
                                                     Text="{TemplateBinding Text}"
                                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                     Visibility="{TemplateBinding IsEditable, Converter={x:Static se:StswBoolConverter.Instance}}"/>
                                </Grid>
                            </DockPanel>
                        </se:StswToggleButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditable" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_SubBorder" />
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ContentPresenter" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Padding" Value="0" TargetName="PART_MainButton" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Height" Value="95" TargetName="DropDownBorder" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </MultiTrigger>
                        <Trigger Property="SelectedIndex" Value="-1">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Placeholder" />
                        </Trigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" TargetName="OpaqueRect" />
                            <Setter Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" TargetName="OpaqueRect" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswDropButton.MouseOver.Background}" TargetName="PART_MainButton" />
                            <Setter Property="BorderBrush" Value="{DynamicResource StswDropButton.MouseOver.Border}" TargetName="PART_MainButton" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswDropButton.Checked.Background}" TargetName="PART_MainButton" />
                            <Setter Property="BorderBrush" Value="{DynamicResource StswDropButton.Checked.Border}" TargetName="PART_MainButton" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="IsEnabled" Value="False" TargetName="PART_Items" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Transparent" TargetName="PART_EditableTextBox" />
                            <Setter Property="Background" Value="{DynamicResource StswDropButton.Disabled.Background}" TargetName="PART_MainButton" />
                            <Setter Property="BorderBrush" Value="{DynamicResource StswDropButton.Disabled.Border}" TargetName="PART_MainButton" />
                            <Setter Property="Foreground" Value="{DynamicResource StswDropButton.Disabled.Foreground}" TargetName="PART_MainButton" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Placeholder" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Border x:Name="PART_Border"
                                        Background="{DynamicResource StswItem.Static.Background}"
                                        BorderBrush="{DynamicResource StswItem.Static.Border}"
                                        BorderThickness="0.5"
                                        Padding="4 2">
                                    <ContentPresenter/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource StswItem.MouseOver.Background}" TargetName="PART_Border" />
                                        <Setter Property="BorderBrush" Value="{DynamicResource StswItem.MouseOver.Border}" TargetName="PART_Border" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource StswItem.Checked.Background}" TargetName="PART_Border" />
                                        <Setter Property="BorderBrush" Value="{DynamicResource StswItem.Checked.Border}" TargetName="PART_Border" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="TextElement.Foreground" Value="{DynamicResource StswItem.Disabled.Foreground}" TargetName="PART_Border" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        
    </Style>

</ResourceDictionary>