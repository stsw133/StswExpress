<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswSelectionBox}">
        <Setter Property="Background" Value="{DynamicResource StswButton.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Static.Border}"/>
        
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerClipping" Value="False"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="SeparatorThickness" Value="2"/>

        <Setter Property="Errors" Value="{Binding (Validation.Errors), RelativeSource={RelativeSource Self}}"/>
        <Setter Property="HasError" Value="{Binding (Validation.HasError), RelativeSource={RelativeSource Self}}"/>
        
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>

        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="se:StswPopup.Background" Value="{DynamicResource StswPopup.Static.Background}"/>
        <Setter Property="se:StswPopup.BorderBrush" Value="{DynamicResource StswPopup.Static.Border}"/>
        <Setter Property="se:StswScrollView.CanContentScroll" Value="False"/>
        <Setter Property="se:StswScrollView.IsDynamic" Value="True"/>
        <Setter Property="se:StswScrollView.PanningMode" Value="Both"/>
        <Setter Property="se:StswScrollView.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="se:StswScrollView.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswSelectionBox}">
                    <se:StswToggleButton x:Name="PART_MainButton"
                                         Background="{TemplateBinding Background}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         ClickMode="Press"
                                         CornerClipping="{TemplateBinding CornerClipping}"
                                         CornerRadius="{TemplateBinding CornerRadius}"
                                         IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                         Padding="2 0 0 0"
                                         HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                         VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         Template="{DynamicResource StswDropToggleButtonTemplate}">
                        <DockPanel>
                            <!-- arrow -->
                            <se:StswDropArrow DockPanel.Dock="Right" IsExpanded="{TemplateBinding IsDropDownOpen}" Width="24"/>
                            <!-- sub controls -->
                            <ItemsControl DockPanel.Dock="{Binding (se:StswControl.SubControlsDock), RelativeSource={RelativeSource TemplatedParent}}"
                                          IsTabStop="False"
                                          ItemsSource="{TemplateBinding SubControls}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                            <!-- error -->
                            <se:StswSubError x:Name="PART_Error" DockPanel.Dock="Right" Errors="{TemplateBinding Errors}" HasError="{TemplateBinding HasError}"/>
                            <!-- popup -->
                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="True"
                                   DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"
                                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Bottom"
                                   PlacementTarget="{Binding ElementName=PART_MainButton}"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                   StaysOpen="False">
                                <se:StswListBox x:Name="PART_ListBox"
                                                Background="{Binding (se:StswPopup.Background), RelativeSource={RelativeSource TemplatedParent}}"
                                                BorderBrush="{Binding (se:StswPopup.BorderBrush), RelativeSource={RelativeSource TemplatedParent}}"
                                                BorderThickness="{Binding (se:StswPopup.BorderThickness), RelativeSource={RelativeSource TemplatedParent}}"
                                                CornerClipping="{Binding (se:StswPopup.CornerClipping), RelativeSource={RelativeSource TemplatedParent}}"
                                                CornerRadius="{Binding (se:StswPopup.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                                DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                                                Focusable="False"
                                                ItemsSource="{TemplateBinding ItemsSource}"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                MinWidth="{Binding ActualWidth, ElementName=PART_MainButton}"
                                                Padding="{Binding (se:StswPopup.Padding), RelativeSource={RelativeSource TemplatedParent}}"
                                                SelectedValuePath="{TemplateBinding SelectedValuePath}"
                                                SelectionMode="Multiple"
                                                VirtualizingPanel.ScrollUnit="{Binding (VirtualizingPanel.ScrollUnit), RelativeSource={RelativeSource TemplatedParent}}"
                                                se:StswScrollView.AutoScroll="{Binding (se:StswScrollView.AutoScroll), RelativeSource={RelativeSource TemplatedParent}}"
                                                se:StswScrollView.CanContentScroll="{Binding (se:StswScrollView.CanContentScroll), RelativeSource={RelativeSource TemplatedParent}}"
                                                se:StswScrollView.Command="{Binding (se:StswScrollView.Command), RelativeSource={RelativeSource TemplatedParent}}"
                                                se:StswScrollView.CommandParameter="{Binding (se:StswScrollView.CommandParameter), RelativeSource={RelativeSource TemplatedParent}}"
                                                se:StswScrollView.CommandTarget="{Binding (se:StswScrollView.CommandTarget), RelativeSource={RelativeSource TemplatedParent}}"
                                                se:StswScrollView.IsBusy="{Binding (se:StswScrollView.IsBusy), RelativeSource={RelativeSource TemplatedParent}}"
                                                se:StswScrollView.IsDynamic="{Binding (se:StswScrollView.IsDynamic), RelativeSource={RelativeSource TemplatedParent}}"
                                                se:StswScrollView.PanningMode="{Binding (se:StswScrollView.PanningMode), RelativeSource={RelativeSource TemplatedParent}}"
                                                se:StswScrollView.HorizontalScrollBarVisibility="{Binding (se:StswScrollView.HorizontalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}"
                                                se:StswScrollView.VerticalScrollBarVisibility="{Binding (se:StswScrollView.VerticalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Popup>
                            <!-- separator -->
                            <se:StswSeparator DockPanel.Dock="Right"
                                              BorderBrush="{Binding BorderBrush, ElementName=PART_MainButton}"
                                              BorderThickness="{TemplateBinding SeparatorThickness}"
                                              Orientation="Vertical"
                                              Visibility="Hidden"/>
                            <!-- content -->
                            <Grid>
                                <se:StswText x:Name="PART_Placeholder"
                                             Foreground="{DynamicResource StswBox.Placeholder.Foreground}"
                                             IsHitTestVisible="False"
                                             Margin="{TemplateBinding Padding}"
                                             Text="{TemplateBinding Placeholder}"
                                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                             Visibility="Collapsed"/>
                                <se:StswText IsHitTestVisible="False"
                                             Margin="{TemplateBinding Padding}"
                                             Text="{TemplateBinding Text}"
                                             TextTrimming="CharacterEllipsis"
                                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </DockPanel>
                    </se:StswToggleButton>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ItemsSource.Count, RelativeSource={RelativeSource Self}, FallbackValue=0}" Value="0">
                            <Setter Property="Height" Value="95" TargetName="PART_ListBox"/>
                        </DataTrigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Placeholder"/>
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Placeholder"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding HasItems, ElementName=PART_ListBox}" Value="False">
                            <Setter Property="Height" Value="95" TargetName="PART_ListBox"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswButton.MouseOver.Background}" TargetName="PART_MainButton"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswButton.MouseOver.Border}" TargetName="PART_MainButton"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswButton.Pressed.Background}" TargetName="PART_MainButton"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Pressed.Border}" TargetName="PART_MainButton"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource StswButton.ReadOnly.Foreground}" TargetName="PART_MainButton"/>
                            <Setter Property="IsEnabled" Value="False" TargetName="PART_ListBox"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource StswButton.Disabled.Background}" TargetName="PART_MainButton"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Disabled.Border}" TargetName="PART_MainButton"/>
                            <Setter Property="Foreground" Value="{DynamicResource StswButton.Disabled.Foreground}" TargetName="PART_MainButton"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Placeholder"/>
                        </Trigger>
                        <Trigger Property="HasError" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource StswBox.Error.Border}" TargetName="PART_MainButton"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
    </Style>

</ResourceDictionary>
