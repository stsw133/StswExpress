<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <Style TargetType="{x:Type se:StswDataGrid}">
        <Setter Property="Background" Value="{DynamicResource StswDataGrid.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StswDataGrid.Static.Border}"/>
        <Setter Property="HorizontalGridLinesBrush" Value="#5777"/>
        <Setter Property="VerticalGridLinesBrush" Value="#5777"/>

        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        
        <Setter Property="AreFiltersVisible" Value="True"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="HeadersVisibility" Value="All"/> <!-- Column -->
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="SpecialColumnVisibility" Value="All"/>
        
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>

        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>

        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource StswDataGridColumnHeaderStyle}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswDataGrid}">
                    <se:StswClippingBorder Background="{TemplateBinding Background}"
                                           BorderBrush="{TemplateBinding BorderBrush}"
                                           BorderThickness="{TemplateBinding BorderThickness}"
                                           CornerRadius="{TemplateBinding CornerRadius}"
                                           Padding="{TemplateBinding Padding}"
                                           SnapsToDevicePixels="True">
                        <se:StswScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
                            <se:StswScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type se:StswScrollViewer}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <!-- Left Column Header Corner -->
                                        <Button Command="{x:Static DataGrid.SelectAllCommand}"
                                                Focusable="False"
                                                Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type se:StswDataGrid}, ResourceId=StswDataGridSelectAllButtonStyle}}"
                                                Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type se:StswDataGrid}}}"
                                                Visibility="{Binding HeadersVisibility, RelativeSource={RelativeSource AncestorType={x:Type se:StswDataGrid}}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}}" />
                                        <!-- Column Headers-->
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1"
                                                                        Visibility="{Binding HeadersVisibility, RelativeSource={RelativeSource AncestorType={x:Type se:StswDataGrid}}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}}"/>
                                        <!-- DataGrid content-->
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" />
                                        <se:StswScrollBar x:Name="PART_VerticalScrollBar" Grid.Row="1" Grid.Column="2"
                                                          IsDynamic="{TemplateBinding IsDynamic}"
                                                          Maximum="{TemplateBinding ScrollableHeight}"
                                                          Orientation="Vertical"
                                                          Value="{Binding VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                          ViewportSize="{TemplateBinding ViewportHeight}"
                                                          Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                        <Grid Grid.Row="2" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type se:StswDataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <se:StswScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1"
                                                              IsDynamic="{TemplateBinding IsDynamic}"
                                                              Maximum="{TemplateBinding ScrollableWidth}"
                                                              Orientation="Horizontal"
                                                              Value="{Binding HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                              ViewportSize="{TemplateBinding ViewportWidth}"
                                                              Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </se:StswScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </se:StswScrollViewer>
                    </se:StswClippingBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="True"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!-- data grid's button -->
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type se:StswDataGrid}, ResourceId=StswDataGridSelectAllButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Border"
                                   Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                   SnapsToDevicePixels="True"/>
                        <Polygon x:Name="Arrow"
                                 HorizontalAlignment="Right"
                                 VerticalAlignment="Bottom"
                                 Margin="8,8,3,3"
                                 Opacity="0.15"
                                 Fill="Black"
                                 Stretch="Uniform"
                                 Points="0,10 10,10 10,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Stroke" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- data grid's column headers presenter -->
    <!--
    <Style x:Key="{x:Type DataGridColumnHeadersPresenter}" TargetType="{x:Type DataGridColumnHeadersPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
                    <Grid>
                        <DataGridColumnHeader x:Name="PART_FillerColumnHeader" IsHitTestVisible="False"/>
                        <ItemsPresenter/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    -->

    <!-- data grid's column header floating-->
    <!--
    <Style x:Key="{x:Static DataGridColumnHeader.ColumnFloatingHeaderStyleKey}" TargetType="{x:Type Control}">
        <Setter Property="BorderBrush" Value="#FF688CAF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Opacity" Value="0.6"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding ="{TemplateBinding Padding}">
                        <Grid>
                            <Canvas x:Name="PART_VisualBrushCanvas" Margin="{TemplateBinding Margin}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    -->

    <!-- data grid's column header drop separator -->
    <!--
    <Style x:Key="{x:Static DataGridColumnHeader.ColumnHeaderDropSeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="#FF000080"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    -->

    <!-- data grid's row -->
    <Style x:Key="{x:Type DataGridRow}" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Margin="2,0,0,0" VerticalAlignment="Center" Foreground="Red" Text="!" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <DataGridCellsPresenter Grid.Column="1"
                                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                            <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1"
                                                      SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type se:StswDataGrid}}, Path=AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"
                                                      Visibility="{TemplateBinding DetailsVisibility}" />

                            <DataGridRowHeader Grid.RowSpan="2"
                                               SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                               Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type se:StswDataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}}"/>
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsNewItem" Value="True">
                <Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type se:StswDataGrid}}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- data grid's cell presenter -->
    <!--
    <Style x:Key="{x:Type DataGridCellsPresenter}" TargetType="{x:Type DataGridCellsPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCellsPresenter}">
                    <ItemsPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    -->

    <!-- data grid's cell -->
    <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="Bd" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- data grid's combobox column -->
    <Style x:Key="{x:Static DataGridComboBoxColumn.TextBlockComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <ContentPresenter Content="{TemplateBinding SelectionBoxItem}"
                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      IsHitTestVisible="False"
                                      Margin="1 1 1 1"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- StswColumnHeaderGripperStyle -->
    <Style x:Key="StswColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Width" Value="6"/> <!-- 8 -->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- StswDataGridColumnHeaderStyle -->
    <Style x:Key="StswDataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{DynamicResource StswDataGrid.ColumnHeader.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StswDataGrid.ColumnHeader.Static.Border}"/>
        
        <Setter Property="BorderThickness" Value="0 0 1 1"/>
        <Setter Property="Padding" Value="0"/> <!-- 5 4 5 3 -->

        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <theme:DataGridHeaderBorder Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    IsClickable="{TemplateBinding CanUserSort}"
                                                    IsHovered="{TemplateBinding IsMouseOver}"
                                                    IsPressed="{TemplateBinding IsPressed}"
                                                    Padding ="{TemplateBinding Padding}"
                                                    SeparatorBrush="{TemplateBinding SeparatorBrush}"
                                                    SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                                                    SortDirection="{TemplateBinding SortDirection}">
                            <ContentPresenter RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </theme:DataGridHeaderBorder>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{DynamicResource StswColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{DynamicResource StswColumnHeaderGripperStyle}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource StswDataGrid.ColumnHeader.MouseOver.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource StswDataGrid.ColumnHeader.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource StswDataGrid.ColumnHeader.Pressed.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource StswDataGrid.ColumnHeader.Pressed.Border}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- StswRowHeaderGripperStyle -->
    <Style x:Key="StswRowHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeNS"/>
        <Setter Property="Height" Value="6"/> <!-- 8 -->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- data grid's row header -->
    <Style x:Key="{x:Type DataGridRowHeader}" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Background" Value="{DynamicResource DataGrid.RowHeader.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DataGrid.RowHeader.Static.Border}"/>
        
        <Setter Property="BorderThickness" Value="1 0 1 1"/>
        <Setter Property="Padding" Value="2"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <theme:DataGridHeaderBorder Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    IsHovered ="{TemplateBinding IsMouseOver}"
                                                    IsPressed="{TemplateBinding IsPressed}"
                                                    IsSelected="{TemplateBinding IsRowSelected}"
                                                    Orientation="Horizontal"
                                                    Padding ="{TemplateBinding Padding}"
                                                    SeparatorBrush="{TemplateBinding SeparatorBrush}"
                                                    SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                            <StackPanel Orientation="Horizontal">
                                <ContentPresenter RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="Center"/>
                                <Control SnapsToDevicePixels="false"
                                         Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                                         Visibility="{Binding (Validation.HasError), RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Converter={x:Static se:StswBoolConverter.Instance}}"/>
                            </StackPanel>
                        </theme:DataGridHeaderBorder>
                        <Thumb x:Name="PART_TopHeaderGripper" VerticalAlignment="Top" Style="{DynamicResource StswRowHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom" Style="{DynamicResource StswRowHeaderGripperStyle}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGrid.RowHeader.MouseOver.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource DataGrid.RowHeader.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGrid.RowHeader.Pressed.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource DataGrid.RowHeader.Pressed.Border}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- StswDataGridSpecialColumn -->
    <!-- StswDataGridSpecialColumnHeaderTemplate -->
    <DataTemplate x:Key="StswDataGridSpecialColumnHeaderTemplate">
        <UniformGrid x:Name="PART_Buttons" Columns="1" Visibility="Collapsed">
            <se:StswToggleButton BorderThickness="0" CornerRadius="0" Padding="0"
                                 IsChecked="{Binding AreFiltersVisible, RelativeSource={RelativeSource AncestorType={x:Type se:StswDataGrid}}}">
                <se:StswIcon Data="{x:Static se:StswIcons.Filter}" Scale="1.25"/>
            </se:StswToggleButton>
            <se:StswButton BorderThickness="0" CornerRadius="0" Padding="0"
                           Visibility="{Binding AreFiltersVisible, RelativeSource={RelativeSource AncestorType={x:Type se:StswDataGrid}}, Converter={x:Static se:StswBoolConverter.Instance}}"
                           Command="{Binding ClearFiltersCommand, RelativeSource={RelativeSource AncestorType={x:Type se:StswDataGrid}}}">
                <se:StswIcon Data="{x:Static se:StswIcons.CloseCircle}" Scale="1.25"/>
            </se:StswButton>
        </UniformGrid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding SpecialColumnVisibility, RelativeSource={RelativeSource AncestorType={x:Type se:StswDataGrid}}}" Value="All">
                <Setter Property="Visibility" Value="Visible" TargetName="PART_Buttons"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- StswDataGridSpecialColumn -->
    <!-- StswDataGridSpecialColumnCellTemplate -->
    <DataTemplate x:Key="StswDataGridSpecialColumnCellTemplate">
        <Grid>
            <se:StswToggleButton BorderThickness="0" CornerRadius="0" Padding="0" IsChecked="{Binding ShowDetails, UpdateSourceTrigger=PropertyChanged}">
                <se:StswToggleButton.Resources>
                    <Style TargetType="{x:Type se:StswToggleButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RowDetailsVisibilityMode, RelativeSource={RelativeSource AncestorType={x:Type se:StswDataGrid}}}" Value="Collapsed">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RowDetailsTemplate, RelativeSource={RelativeSource AncestorType={x:Type se:StswDataGrid}}}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ShowDetails}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </se:StswToggleButton.Resources>
                <se:StswIcon Data="{x:Static se:StswIcons.DotsVertical}" Scale="1.25"/>
            </se:StswToggleButton>
            <se:StswIcon x:Name="PART_Icon" Data="{x:Static se:StswIcons.Circle}" Fill="Transparent" IsHitTestVisible="False" Scale="1.25"/>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ErrorMessage, Converter={x:Static se:StswNotNullConverter.Instance}}" Value="True">
                <Setter Property="Fill" Value="{DynamicResource StswDataGridSpecialColumn.Error.Fill}" TargetName="PART_Icon"/>
                <Setter Property="ToolTip" Value="{Binding ErrorMessage}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ItemState}" Value="Added">
                <Setter Property="Fill" Value="{DynamicResource StswDataGridSpecialColumn.Added.Fill}" TargetName="PART_Icon"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ItemState}" Value="Modified">
                <Setter Property="Fill" Value="{DynamicResource StswDataGridSpecialColumn.Modified.Fill}" TargetName="PART_Icon"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ItemState}" Value="Deleted">
                <Setter Property="Fill" Value="{DynamicResource StswDataGridSpecialColumn.Deleted.Fill}" TargetName="PART_Icon"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>