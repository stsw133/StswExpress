<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswMessageDialog}">
        <Setter Property="BorderThickness" Value="4"/>
        <Setter Property="CornerClipping" Value="True"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="3"/>

        <Setter Property="Focusable" Value="True"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>

        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswMessageDialog}">
                    <ControlTemplate.Resources>
                        <SolidColorBrush x:Key="StswExpander.Static.Header" Color="Transparent"/>
                    </ControlTemplate.Resources>
                    <se:StswGroupBox x:Name="PART_MainBorder"
                                     Background="{TemplateBinding Background}"
                                     BorderBrush="{TemplateBinding BorderBrush}"
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                     CornerClipping="{TemplateBinding CornerClipping}"
                                     CornerRadius="{TemplateBinding CornerRadius}"
                                     Focusable="False"
                                     MaxHeight="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}, Converter={x:Static se:StswMultiplyConverter.Instance}, ConverterParameter=0.8}"
                                     MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}, Converter={x:Static se:StswMultiplyConverter.Instance}, ConverterParameter=0.8}"
                                     MinHeight="150"
                                     MinWidth="250"
                                     Padding="0">
                        <se:StswGroupBox.Header>
                            <DockPanel>
                                <se:StswSubButton x:Name="PART_ButtonCopyToClipboard" DockPanel.Dock="Right" Margin="3">
                                    <se:StswTimedSwitch>
                                        <se:StswIcon Data="{x:Static se:StswIcons.ContentCopy}" Fill="{Binding Foreground, ElementName=PART_Header}" Scale="1.25" ToolTip="{se:Tr StswMessageDialog.CopyToClipboard}"/>
                                        <se:StswTimedSwitch.TimedContent>
                                            <se:StswIcon Data="{x:Static se:StswIcons.Check}" Fill="{Binding Foreground, ElementName=PART_Header}" Scale="1.25" ToolTip="{se:Tr StswMessageDialog.Copied}"/>
                                        </se:StswTimedSwitch.TimedContent>
                                    </se:StswTimedSwitch>
                                </se:StswSubButton>
                                <se:StswHeader x:Name="PART_Header"
                                               Content="{TemplateBinding Title}"
                                               FontSize="{se:StswDynamicResource StswWindow.Font.Size, Converter={x:Static se:StswMultiplyConverter.Instance}, ConverterParameter=1.2}"
                                               FontWeight="Medium"/>
                            </DockPanel>
                        </se:StswGroupBox.Header>
                        <DockPanel Background="{DynamicResource StswPanel.Static.Background}">
                            <!-- buttons -->
                            <UniformGrid DockPanel.Dock="Bottom"
                                         HorizontalAlignment="Center"
                                         Margin="{TemplateBinding Padding}"
                                         Rows="1">
                                <se:StswButton x:Name="PART_ButtonYes"
                                               Command="{Binding CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                               CommandParameter="True"
                                               Content="{se:Tr StswMessageDialog.Yes}"
                                               Margin="{TemplateBinding Padding}"
                                               Padding="15 5"
                                               Visibility="Collapsed"/>
                                <se:StswButton x:Name="PART_ButtonNo"
                                               Command="{Binding CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                               CommandParameter="False"
                                               Content="{se:Tr StswMessageDialog.No}"
                                               Margin="{TemplateBinding Padding}"
                                               Padding="15 5"
                                               Visibility="Collapsed"/>
                                <se:StswButton x:Name="PART_ButtonCancel"
                                               Command="{Binding CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                               CommandParameter="{x:Null}"
                                               Content="{se:Tr StswMessageDialog.Cancel}"
                                               Margin="{TemplateBinding Padding}"
                                               Padding="15 5"
                                               Visibility="Collapsed"/>
                            </UniformGrid>
                            <!-- separator -->
                            <se:StswSeparator DockPanel.Dock="Bottom"
                                              BorderBrush="{Binding BorderBrush, ElementName=PART_MainBorder}"
                                              BorderThickness="1"
                                              Orientation="Horizontal"/>
                            <!-- text -->
                            <se:StswTextBox se:StswControl.IsBorderless="True"
                                            IsReadOnly="True"
                                            Padding="{TemplateBinding Padding}"
                                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                                            Text="{TemplateBinding Content}"
                                            TextWrapping="Wrap"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </se:StswGroupBox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Buttons" Value="OK">
                            <Setter Property="Content" Value="{se:Tr StswMessageDialog.OK}" TargetName="PART_ButtonYes"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ButtonYes"/>
                        </Trigger>
                        <Trigger Property="Buttons" Value="OKCancel">
                            <Setter Property="Content" Value="{se:Tr StswMessageDialog.OK}" TargetName="PART_ButtonYes"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ButtonYes"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ButtonCancel"/>
                        </Trigger>
                        <Trigger Property="Buttons" Value="YesNo">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ButtonYes"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ButtonNo"/>
                        </Trigger>
                        <Trigger Property="Buttons" Value="YesNoCancel">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ButtonYes"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ButtonNo"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ButtonCancel"/>
                        </Trigger>
                        <Trigger Property="Image" Value="None">
                            <Setter Property="Background" Value="{DynamicResource StswDialog.None.Background}" TargetName="PART_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswDialog.None.Border}" TargetName="PART_MainBorder"/>
                            <Setter Property="Foreground" Value="{DynamicResource StswDialog.None.Foreground}" TargetName="PART_Header"/>
                        </Trigger>
                        <Trigger Property="Image" Value="Blockade">
                            <Setter Property="Background" Value="{DynamicResource StswDialog.Blockade.Background}" TargetName="PART_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswDialog.Blockade.Border}" TargetName="PART_MainBorder"/>
                            <Setter Property="Foreground" Value="{DynamicResource StswDialog.Blockade.Foreground}" TargetName="PART_Header"/>
                            <Setter Property="IconData" Value="{x:Static se:StswIcons.Cancel}" TargetName="PART_Header"/>
                        </Trigger>
                        <Trigger Property="Image" Value="Debug">
                            <Setter Property="Background" Value="{DynamicResource StswDialog.Debug.Background}" TargetName="PART_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswDialog.Debug.Border}" TargetName="PART_MainBorder"/>
                            <Setter Property="Foreground" Value="{DynamicResource StswDialog.Debug.Foreground}" TargetName="PART_Header"/>
                            <Setter Property="IconData" Value="{x:Static se:StswIcons.Bug}" TargetName="PART_Header"/>
                        </Trigger>
                        <Trigger Property="Image" Value="Error">
                            <Setter Property="Background" Value="{DynamicResource StswDialog.Error.Background}" TargetName="PART_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswDialog.Error.Border}" TargetName="PART_MainBorder"/>
                            <Setter Property="Foreground" Value="{DynamicResource StswDialog.Error.Foreground}" TargetName="PART_Header"/>
                            <Setter Property="IconData" Value="{x:Static se:StswIcons.CloseCircle}" TargetName="PART_Header"/>
                        </Trigger>
                        <Trigger Property="Image" Value="Information">
                            <Setter Property="Background" Value="{DynamicResource StswDialog.Information.Background}" TargetName="PART_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswDialog.Information.Border}" TargetName="PART_MainBorder"/>
                            <Setter Property="Foreground" Value="{DynamicResource StswDialog.Information.Foreground}" TargetName="PART_Header"/>
                            <Setter Property="IconData" Value="{x:Static se:StswIcons.Information}" TargetName="PART_Header"/>
                        </Trigger>
                        <Trigger Property="Image" Value="Question">
                            <Setter Property="Background" Value="{DynamicResource StswDialog.Question.Background}" TargetName="PART_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswDialog.Question.Border}" TargetName="PART_MainBorder"/>
                            <Setter Property="Foreground" Value="{DynamicResource StswDialog.Question.Foreground}" TargetName="PART_Header"/>
                            <Setter Property="IconData" Value="{x:Static se:StswIcons.HelpCircle}" TargetName="PART_Header"/>
                        </Trigger>
                        <Trigger Property="Image" Value="Success">
                            <Setter Property="Background" Value="{DynamicResource StswDialog.Success.Background}" TargetName="PART_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswDialog.Success.Border}" TargetName="PART_MainBorder"/>
                            <Setter Property="Foreground" Value="{DynamicResource StswDialog.Success.Foreground}" TargetName="PART_Header"/>
                            <Setter Property="IconData" Value="{x:Static se:StswIcons.CheckCircle}" TargetName="PART_Header"/>
                        </Trigger>
                        <Trigger Property="Image" Value="Warning">
                            <Setter Property="Background" Value="{DynamicResource StswDialog.Warning.Background}" TargetName="PART_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswDialog.Warning.Border}" TargetName="PART_MainBorder"/>
                            <Setter Property="Foreground" Value="{DynamicResource StswDialog.Warning.Foreground}" TargetName="PART_Header"/>
                            <Setter Property="IconData" Value="{x:Static se:StswIcons.AlertCircle}" TargetName="PART_Header"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>