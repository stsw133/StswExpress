<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress"
                    xmlns:sec="clr-namespace:StswExpress.Commons;assembly=StswExpress.Commons">

    <!-- StswDataGridStatusColumnHeaderTemplate -->
    <DataTemplate x:Key="StswDataGridStatusColumnHeaderTemplate">
        <UniformGrid x:Name="OPT_Buttons"
                     Columns="1"
                     Margin="-3"
                     Visibility="{Binding AreFiltersVisible, RelativeSource={RelativeSource AncestorType={x:Type se:StswDataGrid}}, Converter={x:Static se:StswExistenceConverter.Instance}}">

            <se:StswToggleButton IsChecked="{Binding AreFiltersVisible, RelativeSource={RelativeSource AncestorType={x:Type se:StswDataGrid}}}"
                                 Padding="0"
                                 se:StswControl.IsBorderless="True">
                <se:StswIcon Data="{x:Static se:StswIcons.Filter}" Scale="1.25"/>
            </se:StswToggleButton>

            <se:StswButton x:Name="OPT_ButtonClear"
                           Command="{Binding ClearFiltersCommand, RelativeSource={RelativeSource AncestorType={x:Type se:StswDataGrid}}}"
                           Padding="0"
                           Visibility="{Binding AreFiltersVisible, RelativeSource={RelativeSource AncestorType={x:Type se:StswDataGrid}}, Converter={x:Static se:StswBoolConverter.Instance}}"
                           se:StswControl.IsBorderless="True">
                <se:StswIcon Data="{x:Static se:StswIcons.CloseCircle}" Scale="1.25"/>
            </se:StswButton>

        </UniformGrid>
    </DataTemplate>

    <!-- StswDataGridStatusColumnCellTemplate -->
    <DataTemplate x:Key="StswDataGridStatusColumnCellTemplate">
        <Grid x:Name="OPT_MainGrid" Margin="-1">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Converter={x:Static se:StswIsTypeConverter.Instance}, ConverterParameter={x:Type sec:IStswDetailedItem}}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Converter={x:Static se:StswIsTypeConverter.Instance}, ConverterParameter={x:Type sec:IStswTrackableItem}}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <Grid.Resources>
                <DataTemplate x:Key="StswDataGridStatusColumnToggleTemplate">
                    <se:StswToggleButton x:Name="OPT_ToggleButton"
                                         IsChecked="{Binding ShowDetails, UpdateSourceTrigger=PropertyChanged}"
                                         Padding="0"
                                         Visibility="{Binding ShowDetails, Converter={x:Static se:StswExistenceConverter.Instance}}"
                                         se:StswControl.IsBorderless="True"/>
                </DataTemplate>

                <DataTemplate x:Key="StswDataGridStatusColumnStateTemplate">
                    <se:StswIcon x:Name="OPT_StateIcon"
                                 Data="{x:Static se:StswIcons.Circle}"
                                 IsHitTestVisible="False"
                                 StrokeThickness="1"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Visibility="{Binding ItemState, Converter={x:Static se:StswExistenceConverter.Instance}}">
                        <se:StswIcon.Style>
                            <Style TargetType="{x:Type se:StswIcon}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ItemState}" Value="Unchanged">
                                        <Setter Property="Fill" Value="{DynamicResource StswDataGrid.SpecialColumn.Unchanged.Fill}"/>
                                        <Setter Property="Stroke" Value="{DynamicResource StswDataGrid.SpecialColumn.Unchanged.Border}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ItemState}" Value="Added">
                                        <Setter Property="Fill" Value="{DynamicResource StswDataGrid.SpecialColumn.Added.Fill}"/>
                                        <Setter Property="Stroke" Value="{DynamicResource StswDataGrid.SpecialColumn.Added.Border}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ItemState}" Value="Modified">
                                        <Setter Property="Fill" Value="{DynamicResource StswDataGrid.SpecialColumn.Modified.Fill}"/>
                                        <Setter Property="Stroke" Value="{DynamicResource StswDataGrid.SpecialColumn.Modified.Border}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ItemState}" Value="Deleted">
                                        <Setter Property="Fill" Value="{DynamicResource StswDataGrid.SpecialColumn.Deleted.Fill}"/>
                                        <Setter Property="Stroke" Value="{DynamicResource StswDataGrid.SpecialColumn.Deleted.Border}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </se:StswIcon.Style>
                    </se:StswIcon>
                </DataTemplate>

                <DataTemplate x:Key="StswDataGridStatusColumnArrowTemplate">
                    <se:StswIcon x:Name="OPT_Arrow"
                                 Data="{x:Static se:StswIcons.ChevronDown}"
                                 IsHitTestVisible="False"
                                 IsRotated="{Binding ShowDetails, FallbackValue=False, TargetNullValue=False}"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Visibility="{Binding ShowDetails, Converter={x:Static se:StswExistenceConverter.Instance}}"/>
                </DataTemplate>
            </Grid.Resources>

            <ContentControl x:Name="OPT_ToggleHost" Content="{Binding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <ContentControl.Style>
                    <Style TargetType="ContentControl">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Setter Property="ContentTemplate" Value="{x:Null}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Converter={x:Static se:StswIsTypeConverter.Instance}, ConverterParameter={x:Type sec:IStswDetailedItem}}" Value="True">
                                <Setter Property="ContentTemplate" Value="{StaticResource StswDataGridStatusColumnToggleTemplate}"/>
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>

            <ContentControl x:Name="OPT_StateHost" Content="{Binding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <ContentControl.Style>
                    <Style TargetType="ContentControl">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Setter Property="ContentTemplate" Value="{x:Null}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Converter={x:Static se:StswIsTypeConverter.Instance}, ConverterParameter={x:Type sec:IStswTrackableItem}}" Value="True">
                                <Setter Property="ContentTemplate" Value="{StaticResource StswDataGridStatusColumnStateTemplate}"/>
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>

            <ContentControl x:Name="OPT_ArrowHost" Content="{Binding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <ContentControl.Style>
                    <Style TargetType="ContentControl">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Setter Property="ContentTemplate" Value="{x:Null}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Converter={x:Static se:StswIsTypeConverter.Instance}, ConverterParameter={x:Type sec:IStswDetailedItem}}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Setter Property="ContentTemplate" Value="{StaticResource StswDataGridStatusColumnArrowTemplate}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>
        </Grid>
    </DataTemplate>

</ResourceDictionary>