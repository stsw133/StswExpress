<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswToastItem}">
        <Setter Property="Background" Value="{DynamicResource StswButton.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Static.Border}"/>

        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerClipping" Value="False"/>
        <Setter Property="CornerRadius" Value="6"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Padding" Value="5"/>

        <Setter Property="IsClosable" Value="{Binding IsClosable, RelativeSource={RelativeSource AncestorType={x:Type se:StswToaster}}}"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="250"/>

        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswToastItem}">
                    <!-- main -->
                    <se:StswBorder x:Name="OPT_MainBorder"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   BorderThickness="{TemplateBinding BorderThickness}"
                                   CornerClipping="{TemplateBinding CornerClipping}"
                                   CornerRadius="{TemplateBinding CornerRadius}">
                        <DockPanel>
                            <!-- close button -->
                            <se:StswSubButton x:Name="PART_ButtonClose"
                                              DockPanel.Dock="Right"
                                              IconData="{x:Static se:StswIcons.Close}"
                                              IconFill="{Binding Foreground, ElementName=OPT_Icon}"
                                              Padding="3"
                                              VerticalAlignment="Top"/>
                            <!-- title -->
                            <se:StswIcon x:Name="OPT_Icon" Margin="4 2 2 2"/>
                            <!-- content -->
                            <ContentPresenter Focusable="False"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextTrimming" Value="{Binding TextTrimming, RelativeSource={RelativeSource AncestorType={x:Type se:StswToaster}}}"/>
                                        <Setter Property="TextWrapping" Value="{Binding TextWrapping, RelativeSource={RelativeSource AncestorType={x:Type se:StswToaster}}}"/>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </DockPanel>
                    </se:StswBorder>
                    <!-- triggers -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsClosable" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_ButtonClose"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="Type" Value="None">
                            <Setter Property="Background" Value="{DynamicResource StswDialog.None.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswDialog.None.Border}" TargetName="OPT_MainBorder"/>
                            <Setter Property="Data" Value="{x:Static se:StswIcons.CircleOutline}" TargetName="OPT_Icon"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswDialog.None.Foreground}"/>
                        </Trigger>
                        <Trigger Property="Type" Value="Blockade">
                            <Setter Property="Background" Value="{DynamicResource StswDialog.Blockade.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswDialog.Blockade.Border}" TargetName="OPT_MainBorder"/>
                            <Setter Property="Data" Value="{x:Static se:StswIcons.Cancel}" TargetName="OPT_Icon"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswDialog.Blockade.Foreground}"/>
                        </Trigger>
                        <Trigger Property="Type" Value="Debug">
                            <Setter Property="Background" Value="{DynamicResource StswDialog.Debug.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswDialog.Debug.Border}" TargetName="OPT_MainBorder"/>
                            <Setter Property="Data" Value="{x:Static se:StswIcons.Bug}" TargetName="OPT_Icon"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswDialog.Debug.Foreground}"/>
                        </Trigger>
                        <Trigger Property="Type" Value="Error">
                            <Setter Property="Background" Value="{DynamicResource StswDialog.Error.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswDialog.Error.Border}" TargetName="OPT_MainBorder"/>
                            <Setter Property="Data" Value="{x:Static se:StswIcons.CloseCircle}" TargetName="OPT_Icon"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswDialog.Error.Foreground}"/>
                        </Trigger>
                        <Trigger Property="Type" Value="Fatal">
                            <Setter Property="Background" Value="{DynamicResource StswDialog.Fatal.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswDialog.Fatal.Border}" TargetName="OPT_MainBorder"/>
                            <Setter Property="Data" Value="{x:Static se:StswIcons.Skull}" TargetName="OPT_Icon"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswDialog.Fatal.Foreground}"/>
                        </Trigger>
                        <Trigger Property="Type" Value="Information">
                            <Setter Property="Background" Value="{DynamicResource StswDialog.Information.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswDialog.Information.Border}" TargetName="OPT_MainBorder"/>
                            <Setter Property="Data" Value="{x:Static se:StswIcons.Information}" TargetName="OPT_Icon"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswDialog.Information.Foreground}"/>
                        </Trigger>
                        <Trigger Property="Type" Value="Question">
                            <Setter Property="Background" Value="{DynamicResource StswDialog.Question.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswDialog.Question.Border}" TargetName="OPT_MainBorder"/>
                            <Setter Property="Data" Value="{x:Static se:StswIcons.HelpCircle}" TargetName="OPT_Icon"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswDialog.Question.Foreground}"/>
                        </Trigger>
                        <Trigger Property="Type" Value="Success">
                            <Setter Property="Background" Value="{DynamicResource StswDialog.Success.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswDialog.Success.Border}" TargetName="OPT_MainBorder"/>
                            <Setter Property="Data" Value="{x:Static se:StswIcons.CheckCircle}" TargetName="OPT_Icon"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswDialog.Success.Foreground}"/>
                        </Trigger>
                        <Trigger Property="Type" Value="Warning">
                            <Setter Property="Background" Value="{DynamicResource StswDialog.Warning.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswDialog.Warning.Border}" TargetName="OPT_MainBorder"/>
                            <Setter Property="Data" Value="{x:Static se:StswIcons.AlertCircle}" TargetName="OPT_Icon"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswDialog.Warning.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>