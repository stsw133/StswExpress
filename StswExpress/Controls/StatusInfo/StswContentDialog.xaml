<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswContentDialog}">
        <Setter Property="Background" Value="{DynamicResource StswPanel.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StswPanel.Static.Border}"/>
        
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="3"/>
        
        <Setter Property="IsOpen" Value="{Binding BindingModel.IsOpen, Mode=TwoWay, RelativeSource={RelativeSource Self}}"/>
        
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswContentDialog}">
                    <Grid Background="#B000">
                        <ContentControl Focusable="False"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentControl.Style>
                                <Style TargetType="{x:Type ContentControl}">
                                    <Style.Triggers>
                                        <!-- custom dialog -->
                                        <DataTrigger Binding="{Binding HasContent, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}" Value="True">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <ContentPresenter Content="{Binding Content, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}"/>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <!-- predefined dialog -->
                                        <DataTrigger Binding="{Binding HasContent, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}" Value="False">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <se:StswGroupBox x:Name="PART_MainBorder"
                                                                         Background="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}"
                                                                         BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}"
                                                                         BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}"
                                                                         CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}"
                                                                         MaxHeight="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}, Converter={x:Static se:StswMultiplyConverter.Instance}, ConverterParameter=0.8}"
                                                                         MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}, Converter={x:Static se:StswMultiplyConverter.Instance}, ConverterParameter=0.8}"
                                                                         MinHeight="120"
                                                                         MinWidth="200"
                                                                         SnapsToDevicePixels="True">
                                                            <se:StswGroupBox.Header>
                                                                <StackPanel Height="20" Orientation="Horizontal" VerticalAlignment="Center">
                                                                    <se:StswIcon x:Name="PART_Icon"/>
                                                                    <se:StswText FontWeight="Medium"
                                                                                 Padding="3 0 0 0"
                                                                                 Text="{Binding BindingModel.Title, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}"
                                                                                 VerticalAlignment="Center"/>
                                                                </StackPanel>
                                                            </se:StswGroupBox.Header>
                                                            <DockPanel>
                                                                <UniformGrid DockPanel.Dock="Bottom" Rows="1" HorizontalAlignment="Center" Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}">
                                                                    <se:StswButton x:Name="PART_ButtonYes"
                                                                                   Command="{Binding BindingModel.OnYesCommand, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}"
                                                                                   Content="Tak"
                                                                                   Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}"
                                                                                   Padding="15 5"
                                                                                   Visibility="Collapsed"/>
                                                                    <se:StswButton x:Name="PART_ButtonNo"
                                                                                   Command="{Binding BindingModel.OnNoCommand, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}"
                                                                                   Content="Nie"
                                                                                   Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}"
                                                                                   Padding="15 5"
                                                                                   Visibility="Collapsed"/>
                                                                    <se:StswButton x:Name="PART_ButtonCancel"
                                                                                   Command="{Binding BindingModel.OnCancelCommand, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}"
                                                                                   Content="Anuluj"
                                                                                   Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}"
                                                                                   Padding="15 5"
                                                                                   Visibility="Collapsed"/>
                                                                </UniformGrid>
                                                                <se:StswTextBox BorderBrush="#5777"
                                                                                BorderThickness="1"
                                                                                IsReadOnly="True"
                                                                                Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}"
                                                                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                                                Text="{Binding BindingModel.Content, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}"
                                                                                TextWrapping="Wrap"/>
                                                            </DockPanel>
                                                        </se:StswGroupBox>
                                                        <DataTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding BindingModel.Buttons, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}" Value="OK">
                                                                <Setter Property="Content" Value="OK" TargetName="PART_ButtonYes"/>
                                                                <Setter Property="Visibility" Value="Visible" TargetName="PART_ButtonYes"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding BindingModel.Buttons, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}" Value="OKCancel">
                                                                <Setter Property="Content" Value="OK" TargetName="PART_ButtonYes"/>
                                                                <Setter Property="Visibility" Value="Visible" TargetName="PART_ButtonYes"/>
                                                                <Setter Property="Visibility" Value="Visible" TargetName="PART_ButtonCancel"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding BindingModel.Buttons, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}" Value="YesNo">
                                                                <Setter Property="Visibility" Value="Visible" TargetName="PART_ButtonYes"/>
                                                                <Setter Property="Visibility" Value="Visible" TargetName="PART_ButtonNo"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding BindingModel.Buttons, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}" Value="YesNoCancel">
                                                                <Setter Property="Visibility" Value="Visible" TargetName="PART_ButtonYes"/>
                                                                <Setter Property="Visibility" Value="Visible" TargetName="PART_ButtonNo"/>
                                                                <Setter Property="Visibility" Value="Visible" TargetName="PART_ButtonCancel"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding BindingModel.Image, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}" Value="None">
                                                                <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Icon"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding BindingModel.Image, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}" Value="Error">
                                                                <Setter Property="Data" Value="{x:Static se:StswIcons.CloseCircle}" TargetName="PART_Icon"/>
                                                                <Setter Property="Fill" Value="{DynamicResource StswDialog.Error.Foreground}" TargetName="PART_Icon"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding BindingModel.Image, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}" Value="Information">
                                                                <Setter Property="Data" Value="{x:Static se:StswIcons.Information}" TargetName="PART_Icon"/>
                                                                <Setter Property="Fill" Value="{DynamicResource StswDialog.Information.Foreground}" TargetName="PART_Icon"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding BindingModel.Image, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}" Value="Question">
                                                                <Setter Property="Data" Value="{x:Static se:StswIcons.HelpCircle}" TargetName="PART_Icon"/>
                                                                <Setter Property="Fill" Value="{DynamicResource StswDialog.Question.Foreground}" TargetName="PART_Icon"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding BindingModel.Image, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}" Value="Success">
                                                                <Setter Property="Data" Value="{x:Static se:StswIcons.CheckCircle}" TargetName="PART_Icon"/>
                                                                <Setter Property="Fill" Value="{DynamicResource StswDialog.Success.Foreground}" TargetName="PART_Icon"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding BindingModel.Image, RelativeSource={RelativeSource AncestorType={x:Type se:StswContentDialog}}}" Value="Warning">
                                                                <Setter Property="Data" Value="{x:Static se:StswIcons.AlertCircle}" TargetName="PART_Icon"/>
                                                                <Setter Property="Fill" Value="{DynamicResource StswDialog.Warning.Foreground}" TargetName="PART_Icon"/>
                                                            </DataTrigger>
                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOpen" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type se:DialogHost}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:DialogHost}">
                    <Grid x:Name="DialogHostRoot" Focusable="False">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PopupStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Closed" To="Open">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Popup" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentCoverBorder" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.56">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_PopupContentElement" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Open" To="Closed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Popup" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentCoverBorder" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.56" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_PopupContentElement" Storyboard.TargetProperty="Opacity">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.18" Value="1" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Open">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Popup"
                                                   Storyboard.TargetProperty="Visibility"
                                                   Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="ContentCoverBorder"
                                     Storyboard.TargetProperty="Opacity"
                                     To=".56"
                                     Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="PART_PopupContentElement"
                                     Storyboard.TargetProperty="Opacity"
                                     To="1"
                                     Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Closed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Popup"
                                                   Storyboard.TargetProperty="Visibility"
                                                   Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="ContentCoverBorder"
                                     Storyboard.TargetProperty="Opacity"
                                     To="0"
                                     Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ContentPresenter x:Name="ContentPresenter"
                                          Content="{TemplateBinding ContentControl.Content}"
                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                          Opacity="1" />
                        <Grid x:Name="PART_ContentCoverGrid"
                              Background="Transparent"
                              Focusable="False"
                              IsHitTestVisible="False"
                              Visibility="{Binding ElementName=ContentCoverBorder, Path=Visibility}">
                            <Grid.OpacityMask>
                                <VisualBrush Visual="{Binding ElementName=ContentCoverBorder}" />
                            </Grid.OpacityMask>
                            <Border x:Name="ContentCoverBorder"
                                    Background="{Binding OverlayBackground, RelativeSource={RelativeSource TemplatedParent}}"
                                    IsHitTestVisible="False"
                                    Opacity="0">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <Trigger Property="Opacity" Value="0">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Grid>

                        <Grid x:Name="PART_Popup"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center">
                            <ContentControl x:Name="PART_PopupContentElement"
                                            Margin="{Binding DialogMargin, RelativeSource={RelativeSource TemplatedParent}}"
                                            Content="{Binding DialogContent, RelativeSource={RelativeSource TemplatedParent}}"
                                            ContentStringFormat="{Binding DialogContentStringFormat, RelativeSource={RelativeSource TemplatedParent}}"
                                            ContentTemplate="{Binding DialogContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                            ContentTemplateSelector="{Binding DialogContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                            FocusManager.IsFocusScope="False"
                                            Focusable="True"
                                            Foreground="{TemplateBinding Foreground}"
                                            IsTabStop="False"
                                            Opacity="0"
                                            Tag="{TemplateBinding DialogBackground}"
                                            TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOpen" Value="True">
                            <Setter TargetName="PART_ContentCoverGrid" Property="IsHitTestVisible" Value="True" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>