<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswLabel}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerClipping" Value="False"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="Padding" Value="3"/>
        
        <Setter Property="IconFill" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="IconScale" Value="1.5"/>
        <Setter Property="IsContentVisible" Value="True"/>

        <Setter Property="Focusable" Value="True"/>
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border BorderBrush="{DynamicResource StswFocusVisual.Static.Border}" BorderThickness="1" CornerRadius="0"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>

        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswLabel}">
                    <!-- main -->
                    <se:StswBorder x:Name="OPT_MainBorder"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   BorderThickness="{TemplateBinding BorderThickness}"
                                   CornerClipping="{TemplateBinding CornerClipping}"
                                   CornerRadius="{TemplateBinding CornerRadius}">
                        <DockPanel Margin="{TemplateBinding Padding}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <!-- icon -->
                            <ContentControl x:Name="OPT_Icon" Focusable="False" Margin="0 -1"/>
                            <!-- content -->
                            <ContentPresenter x:Name="OPT_Content" Focusable="False">
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="TextTrimming" Value="{Binding TextTrimming, RelativeSource={RelativeSource AncestorType={x:Type se:StswLabel}}}"/>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </DockPanel>
                    </se:StswBorder>
                    <!-- triggers -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IconSource" Value="{x:Null}">
                            <Setter Property="ContentTemplate" TargetName="OPT_Icon">
                                <Setter.Value>
                                    <DataTemplate>
                                        <se:StswIcon Data="{Binding IconData, RelativeSource={RelativeSource AncestorType={x:Type se:StswLabel}}}"
                                                     Fill="{Binding IconFill, RelativeSource={RelativeSource AncestorType={x:Type se:StswLabel}}}"
                                                     Scale="{Binding IconScale, RelativeSource={RelativeSource AncestorType={x:Type se:StswLabel}}}"
                                                     Stroke="{Binding IconStroke, RelativeSource={RelativeSource AncestorType={x:Type se:StswLabel}}}"
                                                     StrokeThickness="{Binding IconStrokeThickness, RelativeSource={RelativeSource AncestorType={x:Type se:StswLabel}}}"/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IconData" Value="{x:Null}">
                            <Setter Property="ContentTemplate" TargetName="OPT_Icon">
                                <Setter.Value>
                                    <DataTemplate>
                                        <se:StswImage MenuMode="Disabled"
                                                      Scale="{Binding IconScale, RelativeSource={RelativeSource AncestorType={x:Type se:StswLabel}}}"
                                                      Source="{Binding IconSource, RelativeSource={RelativeSource AncestorType={x:Type se:StswLabel}}}"/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsBusy" Value="True">
                            <Setter Property="ContentTemplate" TargetName="OPT_Icon">
                                <Setter.Value>
                                    <DataTemplate>
                                        <se:StswSpinner Fill="{Binding IconFill, RelativeSource={RelativeSource AncestorType={x:Type se:StswLabel}}}"
                                                        Scale="{Binding IconScale, RelativeSource={RelativeSource AncestorType={x:Type se:StswLabel}}}"
                                                        Type="Crescent"/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <Binding Path="Command.State" RelativeSource="{RelativeSource Self}" Converter="{x:Static se:StswContainsConverter.Instance}">
                                    <Binding.ConverterParameter>
                                        <x:Array Type="{x:Type se:StswProgressState}">
                                            <se:StswProgressState>Running</se:StswProgressState>
                                            <se:StswProgressState>Paused</se:StswProgressState>
                                            <se:StswProgressState>Error</se:StswProgressState>
                                        </x:Array>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </DataTrigger.Binding>
                            <Setter Property="ContentTemplate" TargetName="OPT_Icon">
                                <Setter.Value>
                                    <DataTemplate>
                                        <se:StswProgressRing Fill="{Binding IconFill, RelativeSource={RelativeSource AncestorType={x:Type se:StswLabel}}}"
                                                             Minimum="{Binding Command.Minimum, RelativeSource={RelativeSource AncestorType={x:Type se:StswLabel}}}"
                                                             Maximum="{Binding Command.Maximum, RelativeSource={RelativeSource AncestorType={x:Type se:StswLabel}}}"
                                                             Padding="3"
                                                             Scale="{Binding IconScale, RelativeSource={RelativeSource AncestorType={x:Type se:StswLabel}}}"
                                                             State="{Binding Command.State, RelativeSource={RelativeSource AncestorType={x:Type se:StswLabel}}}"
                                                             Value="{Binding Command.Value, RelativeSource={RelativeSource AncestorType={x:Type se:StswLabel}}}">
                                            <se:StswProgressRing.Style>
                                                <Style TargetType="{x:Type se:StswProgressRing}">
                                                    <Style.Triggers>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="Minimum" Value="0"/>
                                                                <Condition Property="Maximum" Value="0"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="IsIndeterminate" Value="True"/>
                                                        </MultiTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </se:StswProgressRing.Style>
                                        </se:StswProgressRing>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <Trigger Property="HasContent" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="OPT_Content"/>
                        </Trigger>
                        <Trigger Property="IsContentVisible" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="OPT_Content"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="DockPanel.Dock" Value="Left" TargetName="OPT_Icon"/>
                            <Setter Property="VerticalAlignment" Value="Center" TargetName="OPT_Content"/>
                            <Setter Property="Margin" Value="5 0 0 0" TargetName="OPT_Content"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="DockPanel.Dock" Value="Top" TargetName="OPT_Icon"/>
                            <Setter Property="HorizontalAlignment" Value="Center" TargetName="OPT_Content"/>
                            <Setter Property="Margin" Value="0 2 0 0" TargetName="OPT_Content"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IconData" Value="{x:Null}"/>
                                <Condition Property="IconSource" Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="0" TargetName="OPT_Content"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="OPT_Icon"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswText.Disabled.Foreground}" TargetName="OPT_Content"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>