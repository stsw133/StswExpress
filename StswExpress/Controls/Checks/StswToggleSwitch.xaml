<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswToggleSwitch}">
        <Setter Property="Background" Value="{DynamicResource StswBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StswBox.Static.Border}"/>
        <Setter Property="GlyphBrush" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}"/>
        
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="2"/>

        <Setter Property="IconScale" Value="1.5"/>

        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswToggleSwitch}">
                    <Grid Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <!-- box -->
                        <Border x:Name="PART_MainBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                SnapsToDevicePixels="True">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <se:StswIcon x:Name="PART_CheckedPath" Grid.Column="0"
                                             Data="{TemplateBinding IconChecked}"
                                             Fill="{TemplateBinding CheckedGlyphBrush}"
                                             Scale="{TemplateBinding IconScale}"/>
                                <se:StswIcon x:Name="PART_UncheckedPath" Grid.Column="1"
                                             Data="{TemplateBinding IconUnchecked}"
                                             Fill="{TemplateBinding UncheckedGlyphBrush}"
                                             Scale="{TemplateBinding IconScale}"/>
                                <Grid x:Name="PART_SwitchGrid" Grid.ColumnSpan="2"
                                      HorizontalAlignment="Left"
                                      Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}">
                                    <Border x:Name="PART_SwitchBorder" Grid.ColumnSpan="2">
                                        <se:StswIcon x:Name="PART_Icon"
                                                     Data="{TemplateBinding Icon}"
                                                     Fill="{TemplateBinding GlyphBrush}"
                                                     Scale="{TemplateBinding IconScale}"/>
                                    </Border>
                                </Grid>
                            </Grid>
                        </Border>
                        <!-- content -->
                        <ContentPresenter x:Name="PART_Content" Grid.Column="1"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="False">
                            <Setter Property="Grid.ColumnSpan" Value="2" TargetName="PART_MainBorder"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="Margin" Value="4 0 0 0" TargetName="PART_Content"/>
                            <Setter Property="HorizontalAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainBorder"/>
                            <Setter Property="VerticalAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainBorder"/>
                            <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Converter={x:Static se:StswMultiplyConverter.Instance}, ConverterParameter=2}" TargetName="PART_MainBorder"/>
                        </Trigger>
                        <!--
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" Value="{DynamicResource StswCheck.Unchecked.Static.Background}" TargetName="PART_SwitchBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswCheck.Unchecked.Static.Border}" TargetName="PART_MainBorder"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswCheck.Checked.Static.Background}" TargetName="PART_SwitchBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswCheck.Checked.Static.Border}" TargetName="PART_MainBorder"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Background" Value="{DynamicResource StswCheck.Indeterminate.Static.Background}" TargetName="PART_SwitchBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswCheck.Indeterminate.Static.Border}" TargetName="PART_MainBorder"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource StswCheck.Unchecked.MouseOver.Background}" TargetName="PART_SwitchBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswCheck.Unchecked.MouseOver.Border}" TargetName="PART_MainBorder"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource StswCheck.Checked.MouseOver.Background}" TargetName="PART_SwitchBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswCheck.Checked.MouseOver.Border}" TargetName="PART_MainBorder"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource StswCheck.Indeterminate.MouseOver.Background}" TargetName="PART_SwitchBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswCheck.Indeterminate.MouseOver.Border}" TargetName="PART_MainBorder"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource StswCheck.Unchecked.Pressed.Background}" TargetName="PART_SwitchBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswCheck.Unchecked.Pressed.Border}" TargetName="PART_MainBorder"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource StswCheck.Checked.Pressed.Background}" TargetName="PART_SwitchBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswCheck.Checked.Pressed.Border}" TargetName="PART_MainBorder"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="IsChecked" Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource StswCheck.Indeterminate.Pressed.Background}" TargetName="PART_SwitchBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswCheck.Indeterminate.Pressed.Border}" TargetName="PART_MainBorder"/>
                        </MultiTrigger>
                        -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource StswCheck.Disabled.Background}" TargetName="PART_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswCheck.Disabled.Border}" TargetName="PART_MainBorder"/>
                            <Setter Property="Fill" Value="{DynamicResource StswCheck.Disabled.Foreground}" TargetName="PART_Icon"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswCheck.Disabled.Foreground}"/>
                        </Trigger>
                        <!--
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsEnabled" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource StswCheck.CheckedAndDisabled.Background}" TargetName="PART_SwitchBorder"/>
                        </MultiTrigger>
                        -->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>