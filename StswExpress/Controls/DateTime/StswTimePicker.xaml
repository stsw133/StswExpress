<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:glob="clr-namespace:System.Globalization;assembly=mscorlib"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswTimePicker}">
        <Setter Property="Background" Value="{DynamicResource StswBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StswBox.Static.Border}"/>
        
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerClipping" Value="True"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="SeparatorThickness" Value="2"/>

        <Setter Property="Errors" Value="{Binding (Validation.Errors), RelativeSource={RelativeSource Self}}"/>
        <Setter Property="HasError" Value="{Binding (Validation.HasError), RelativeSource={RelativeSource Self}}"/>
        
        <!-- <Setter Property="Format" Value="dd\.hh\:mm\:ss"/> -->
        <Setter Property="IncrementType" Value="Second"/>
        <Setter Property="Text" Value="{Binding SelectedTime, RelativeSource={RelativeSource Self}, UpdateSourceTrigger=LostFocus, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}"/>

        <Setter Property="Focusable" Value="True"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>

        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswTimePicker}">
                    <se:StswBorder x:Name="PART_MainBorder"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   BorderThickness="{TemplateBinding BorderThickness}"
                                   CornerClipping="{TemplateBinding CornerClipping}"
                                   CornerRadius="{TemplateBinding CornerRadius}">
                        <DockPanel>
                            <!-- buttons -->
                            <se:StswDropButton x:Name="PART_DropButton" DockPanel.Dock="Right"
                                               se:StswControl.IsArrowless="True" se:StswControl.IsBorderless="True"
                                               Focusable="False" MaxDropDownHeight="NaN" Padding="0" Width="24"
                                               IsDropDownOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                               se:StswPopup.CornerClipping="False"
                                               se:StswPopup.CornerRadius="0"
                                               se:StswPopup.Padding="0">
                                <se:StswDropButton.Header>
                                    <se:StswIcon Data="{x:Static se:StswIcons.ClockOutline}"/>
                                </se:StswDropButton.Header>
                                <Grid MaxHeight="500">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <!-- labels -->
                                    <se:StswBorder Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="0" BorderThickness="0 0 0 1">
                                        <UniformGrid Rows="1">
                                            <se:StswHeader Content="Hours:"/>
                                            <se:StswHeader Content="Minutes:"/>
                                            <se:StswHeader Content="Seconds:"/>
                                        </UniformGrid>
                                    </se:StswBorder>
                                    <!-- hours -->
                                    <se:StswSegment Grid.Column="0" Grid.Row="1"
                                                    se:StswControl.IsBorderless="True"
                                                    ItemsSource="{Binding Mode=OneTime, Converter={x:Static se:StswListFromRangeConverter.Instance}, ConverterParameter=24}"
                                                    Orientation="Vertical"
                                                    SelectedItem="{Binding SelectedTimeH, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <!-- ... -->
                                    <se:StswSeparator Grid.Column="1" Grid.Row="1" BorderThickness="1" Orientation="Vertical"/>
                                    <!-- minutes -->
                                    <se:StswSegment Grid.Column="2" Grid.Row="1"
                                                    se:StswControl.IsBorderless="True"
                                                    ItemsSource="{Binding Mode=OneTime, Converter={x:Static se:StswListFromRangeConverter.Instance}, ConverterParameter=60}"
                                                    Orientation="Vertical"
                                                    SelectedItem="{Binding SelectedTimeM, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <!-- ... -->
                                    <se:StswSeparator Grid.Column="3" Grid.Row="1" BorderThickness="1" Orientation="Vertical"/>
                                    <!-- seconds -->
                                    <se:StswSegment Grid.Column="4" Grid.Row="1"
                                                    se:StswControl.IsBorderless="True"
                                                    ItemsSource="{Binding Mode=OneTime, Converter={x:Static se:StswListFromRangeConverter.Instance}, ConverterParameter=60}"
                                                    Orientation="Vertical"
                                                    SelectedItem="{Binding SelectedTimeS, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid>
                            </se:StswDropButton>
                            <!-- separator -->
                            <se:StswSeparator DockPanel.Dock="{Binding (se:StswControl.SubControlsDock), RelativeSource={RelativeSource TemplatedParent}}"
                                              BorderBrush="{Binding BorderBrush, ElementName=PART_MainBorder}"
                                              BorderThickness="{TemplateBinding SeparatorThickness}"
                                              Orientation="Vertical"
                                              Template="{DynamicResource StswSeparatorEnabledTemplate}"/>
                            <!-- sub controls -->
                            <ItemsControl DockPanel.Dock="{Binding (se:StswControl.SubControlsDock), RelativeSource={RelativeSource TemplatedParent}}"
                                          IsTabStop="False"
                                          ItemsSource="{TemplateBinding SubControls}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                            <!-- error -->
                            <se:StswSubError x:Name="PART_Error" DockPanel.Dock="Right" Errors="{TemplateBinding Errors}" HasError="{TemplateBinding HasError}"/>
                            <!-- content -->
                            <Grid>
                                <se:StswText x:Name="PART_Placeholder"
                                             Foreground="{DynamicResource StswBox.Placeholder.Foreground}"
                                             IsHitTestVisible="False"
                                             Margin="{TemplateBinding Padding}"
                                             Padding="2 0 0 0"
                                             Text="{TemplateBinding Placeholder}"
                                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                             Visibility="Collapsed"/>
                                <se:StswScrollView x:Name="PART_ContentHost"
                                                   Focusable="False"
                                                   IsDynamic="True"
                                                   HorizontalScrollBarVisibility="Hidden"
                                                   VerticalScrollBarVisibility="Hidden"/>
                            </Grid>
                        </DockPanel>
                    </se:StswBorder>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Placeholder"/>
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Placeholder"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswBox.MouseOver.Background}" TargetName="PART_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswBox.MouseOver.Border}" TargetName="PART_MainBorder"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswBox.Focused.Background}" TargetName="PART_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswBox.Focused.Border}" TargetName="PART_MainBorder"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswBox.ReadOnly.Background}" TargetName="PART_MainBorder"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswBox.ReadOnly.Foreground}"/>
                            <Setter Property="IsEnabled" Value="False" TargetName="PART_DropButton"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource StswBox.Disabled.Background}" TargetName="PART_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswBox.Disabled.Border}" TargetName="PART_MainBorder"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswBox.Disabled.Foreground}"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Placeholder"/>
                        </Trigger>
                        <Trigger Property="HasError" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource StswBox.Error.Border}" TargetName="PART_MainBorder"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
    </Style>
    
</ResourceDictionary>