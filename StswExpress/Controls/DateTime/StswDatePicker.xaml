<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:glob="clr-namespace:System.Globalization;assembly=mscorlib"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswDatePicker}">
        <Setter Property="Background" Value="{DynamicResource StswBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StswBox.Static.Border}"/>
        
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerClipping" Value="True"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="SeparatorThickness" Value="2"/>

        <Setter Property="Errors" Value="{Binding (Validation.Errors), RelativeSource={RelativeSource Self}}"/>
        <Setter Property="HasError" Value="{Binding (Validation.HasError), RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        
        <Setter Property="Format" Value="d"/>
        <Setter Property="IncrementType" Value="Day"/>
        <Setter Property="Text" Value="{Binding SelectedDate, RelativeSource={RelativeSource Self}, TargetNullValue='', UpdateSourceTrigger=LostFocus, ConverterCulture={x:Static glob:CultureInfo.CurrentCulture}}"/>

        <Setter Property="Focusable" Value="True"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>

        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswDatePicker}">
                    <!-- main -->
                    <se:StswBorder x:Name="OPT_MainBorder"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   BorderThickness="{TemplateBinding BorderThickness}"
                                   CornerClipping="{TemplateBinding CornerClipping}"
                                   CornerRadius="{TemplateBinding CornerRadius}">
                        <DockPanel>
                            <!-- icon section -->
                            <ContentPresenter ContentSource="Icon" Focusable="False" IsHitTestVisible="False"/>
                            <!-- buttons -->
                            <se:StswDropButton x:Name="OPT_DropButton" DockPanel.Dock="Right"
                                               se:StswControl.IsArrowless="True" se:StswControl.IsBorderless="True"
                                               Focusable="False" MaxDropDownHeight="NaN" Padding="0" Width="24"
                                               IsDropDownOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                               se:StswPopup.Background="Transparent"
                                               se:StswPopup.BorderBrush="Transparent"
                                               se:StswPopup.BorderThickness="0"
                                               se:StswPopup.CornerClipping="False"
                                               se:StswPopup.CornerRadius="0"
                                               se:StswPopup.Padding="0">
                                <se:StswDropButton.Header>
                                    <se:StswIcon Data="{x:Static se:StswIcons.Calendar}"/>
                                </se:StswDropButton.Header>
                                <se:StswCalendar Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}"
                                                 SelectedDate="{Binding SelectedDate, RelativeSource={RelativeSource TemplatedParent}}"
                                                 SelectionMode="{TemplateBinding SelectionMode}"/>
                            </se:StswDropButton>
                            <!-- separator -->
                            <se:StswSeparator DockPanel.Dock="{Binding (se:StswControl.SubControlsDock), RelativeSource={RelativeSource TemplatedParent}}"
                                              BorderBrush="{Binding BorderBrush, ElementName=OPT_MainBorder}"
                                              BorderThickness="{TemplateBinding SeparatorThickness}"
                                              Orientation="Vertical"
                                              Template="{DynamicResource StswSeparatorEnabledTemplate}"/>
                            <!-- sub controls -->
                            <ItemsControl DockPanel.Dock="{Binding (se:StswControl.SubControlsDock), RelativeSource={RelativeSource TemplatedParent}}"
                                          IsTabStop="False"
                                          ItemsSource="{TemplateBinding SubControls}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                            <!-- error -->
                            <se:StswSubError x:Name="OPT_Error" DockPanel.Dock="Right" Errors="{TemplateBinding Errors}" HasError="{TemplateBinding HasError}"/>
                            <!-- content -->
                            <Grid>
                                <se:StswText x:Name="OPT_Placeholder"
                                             Foreground="{DynamicResource StswBox.Placeholder.Foreground}"
                                             IsHitTestVisible="False"
                                             Margin="{TemplateBinding Padding}"
                                             Padding="2 0 0 0"
                                             Text="{TemplateBinding Placeholder}"
                                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                             Visibility="Collapsed"/>
                                <se:StswScrollView x:Name="PART_ContentHost"
                                                   Focusable="False"
                                                   IsDynamic="True"
                                                   HorizontalScrollBarVisibility="Hidden"
                                                   VerticalScrollBarVisibility="Hidden"/>
                            </Grid>
                        </DockPanel>
                    </se:StswBorder>
                    <!-- triggers -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Visible" TargetName="OPT_Placeholder"/>
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Visibility" Value="Visible" TargetName="OPT_Placeholder"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswBox.MouseOver.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswBox.MouseOver.Border}" TargetName="OPT_MainBorder"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswBox.Focused.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswBox.Focused.Border}" TargetName="OPT_MainBorder"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswBox.ReadOnly.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswBox.ReadOnly.Foreground}"/>
                            <Setter Property="IsEnabled" Value="False" TargetName="OPT_DropButton"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource StswBox.Disabled.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswBox.Disabled.Border}" TargetName="OPT_MainBorder"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswBox.Disabled.Foreground}"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="OPT_Placeholder"/>
                        </Trigger>
                        <Trigger Property="HasError" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource StswBox.Error.Border}" TargetName="OPT_MainBorder"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>