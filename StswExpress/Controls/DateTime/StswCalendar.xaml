<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswCalendar}">
        <Setter Property="Background" Value="{DynamicResource StswCalendar.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StswCalendar.Static.Border}"/>

        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerClipping" Value="True"/>
        <Setter Property="CornerRadius" Value="6"/>
        <Setter Property="Padding" Value="3"/>
        
        <Setter Property="ItemBorderThickness" Value="1"/>
        <Setter Property="ItemCornerRadius" Value="10"/>
        <Setter Property="ItemPadding" Value="3"/>

        <Setter Property="Focusable" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>

        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswCalendar}">
                    <!-- main -->
                    <se:StswGroupBox x:Name="OPT_MainBorder"
                                     Background="{TemplateBinding Background}"
                                     BorderBrush="{TemplateBinding BorderBrush}"
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                     CornerClipping="{TemplateBinding CornerClipping}"
                                     CornerRadius="{TemplateBinding CornerRadius}"
                                     Padding="0">
                        <se:StswGroupBox.Header>
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <se:StswSubRepeater x:Name="PART_ButtonPreviousYear" Grid.Column="0" HorizontalAlignment="Stretch" Margin="{TemplateBinding ItemPadding}"/>
                                <se:StswSubRepeater x:Name="PART_ButtonPreviousMonth" Grid.Column="1" HorizontalAlignment="Stretch" Margin="{TemplateBinding ItemPadding}"/>
                                <se:StswSubButton x:Name="PART_ButtonCurrentMode" Grid.Column="2" HorizontalAlignment="Stretch" Margin="{TemplateBinding ItemPadding}"/>
                                <se:StswSubRepeater x:Name="PART_ButtonNextMonth" Grid.Column="3" HorizontalAlignment="Stretch" Margin="{TemplateBinding ItemPadding}"/>
                                <se:StswSubRepeater x:Name="PART_ButtonNextYear" Grid.Column="4" HorizontalAlignment="Stretch" Margin="{TemplateBinding ItemPadding}"/>
                            </Grid>
                        </se:StswGroupBox.Header>

                        <Grid MinHeight="200" MinWidth="250" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <!-- resources -->
                            <Grid.Resources>
                                <SolidColorBrush x:Key="StswButton.Static.Background" Color="Transparent"/>
                                <SolidColorBrush x:Key="StswButton.Static.Border" Color="Transparent"/>
                                <SolidColorBrush x:Key="StswButton.Disabled.Background" Color="Transparent"/>
                                <SolidColorBrush x:Key="StswButton.Disabled.Border" Color="Transparent"/>
                            </Grid.Resources>
                            <!-- selection mode: months -->
                            <Grid x:Name="OPT_ListMonths" Margin="{TemplateBinding Padding}" Visibility="Hidden">
                                <!-- months of year -->
                                <ItemsControl IsTabStop="False" ItemsSource="{TemplateBinding ListOfMonths}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <UniformGrid Columns="4" Rows="3"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <se:StswRadioButton Command="{Binding SelectMonthCommand, RelativeSource={RelativeSource AncestorType={x:Type se:StswCalendar}}}" Style="{DynamicResource StswCalendarButtonStyle}"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Grid>
                            <!-- selection mode: days -->
                            <Grid x:Name="OPT_ListDays" Margin="{TemplateBinding Padding}" Visibility="Hidden">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="6*"/>
                                </Grid.RowDefinitions>
                                <!-- days of week -->
                                <UniformGrid Grid.Row="0" Columns="7">
                                    <se:StswText FontWeight="Heavy" Margin="2" Padding="{TemplateBinding ItemPadding}" Text="{x:Static se:StswCalendar.DayOfWeek1}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <se:StswText FontWeight="Heavy" Margin="2" Padding="{TemplateBinding ItemPadding}" Text="{x:Static se:StswCalendar.DayOfWeek2}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <se:StswText FontWeight="Heavy" Margin="2" Padding="{TemplateBinding ItemPadding}" Text="{x:Static se:StswCalendar.DayOfWeek3}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <se:StswText FontWeight="Heavy" Margin="2" Padding="{TemplateBinding ItemPadding}" Text="{x:Static se:StswCalendar.DayOfWeek4}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <se:StswText FontWeight="Heavy" Margin="2" Padding="{TemplateBinding ItemPadding}" Text="{x:Static se:StswCalendar.DayOfWeek5}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <se:StswText FontWeight="Heavy" Margin="2" Padding="{TemplateBinding ItemPadding}" Text="{x:Static se:StswCalendar.DayOfWeek6}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <se:StswText FontWeight="Heavy" Margin="2" Padding="{TemplateBinding ItemPadding}" Text="{x:Static se:StswCalendar.DayOfWeek7}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </UniformGrid>
                                <!-- days of month -->
                                <ItemsControl Grid.Row="1" IsTabStop="False" ItemsSource="{TemplateBinding ListOfDays}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <UniformGrid Columns="7" Rows="6"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <se:StswRadioButton Command="{Binding SelectDayCommand, RelativeSource={RelativeSource AncestorType={x:Type se:StswCalendar}}}" Style="{DynamicResource StswCalendarButtonStyle}"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Grid>
                            <!-- today button -->
                            <DockPanel Grid.Row="1" Background="{DynamicResource StswExpander.Static.Header}">
                                <se:StswSeparator DockPanel.Dock="Top"/>
                                <se:StswSubButton x:Name="PART_ButtonToday"
                                                  Content="{se:Tr StswCalendar.Today}"
                                                  IconData="{x:Static se:StswIcons.CalendarToday}"
                                                  Margin="{TemplateBinding Padding}"
                                                  Padding="{TemplateBinding ItemPadding}"
                                                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                            </DockPanel>
                        </Grid>
                    </se:StswGroupBox>
                    <!-- triggers -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="CurrentMode" Value="Days">
                            <Setter Property="IconData" Value="{x:Static se:StswIcons.ChevronDoubleLeft}" TargetName="PART_ButtonPreviousYear"/>
                            <Setter Property="IconData" Value="{x:Static se:StswIcons.ChevronLeft}" TargetName="PART_ButtonPreviousMonth"/>
                            <Setter Property="IconData" Value="{x:Static se:StswIcons.ChevronRight}" TargetName="PART_ButtonNextMonth"/>
                            <Setter Property="IconData" Value="{x:Static se:StswIcons.ChevronDoubleRight}" TargetName="PART_ButtonNextYear"/>
                            <Setter Property="Visibility" Value="Hidden" TargetName="OPT_ListMonths"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="OPT_ListDays"/>
                        </Trigger>
                        <Trigger Property="CurrentMode" Value="Months">
                            <Setter Property="IconData" Value="{x:Static se:StswIcons.ChevronTripleLeft}" TargetName="PART_ButtonPreviousYear"/>
                            <Setter Property="IconData" Value="{x:Static se:StswIcons.ChevronDoubleLeft}" TargetName="PART_ButtonPreviousMonth"/>
                            <Setter Property="IconData" Value="{x:Static se:StswIcons.ChevronDoubleRight}" TargetName="PART_ButtonNextMonth"/>
                            <Setter Property="IconData" Value="{x:Static se:StswIcons.ChevronTripleRight}" TargetName="PART_ButtonNextYear"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="OPT_ListMonths"/>
                            <Setter Property="Visibility" Value="Hidden" TargetName="OPT_ListDays"/>
                        </Trigger>
                        <Trigger Property="SelectionMode" Value="Months">
                            <Setter Property="Focusable" Value="False" TargetName="PART_ButtonCurrentMode"/>
                            <Setter Property="IsHitTestVisible" Value="False" TargetName="PART_ButtonCurrentMode"/>
                            <Setter Property="IsTabStop" Value="False" TargetName="PART_ButtonCurrentMode"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- StswCalendarButtonStyle -->
    <Style x:Key="StswCalendarButtonStyle" TargetType="{x:Type se:StswRadioButton}">
        <Setter Property="BorderThickness" Value="{Binding ItemBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type se:StswCalendar}}}"/>
        <Setter Property="CommandParameter" Value="{Binding Date}"/>
        <Setter Property="Content" Value="{Binding Name}"/>
        <Setter Property="CornerClipping" Value="False"/>
        <Setter Property="CornerRadius" Value="{Binding ItemCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type se:StswCalendar}}}"/>
        <Setter Property="IsChecked" Value="{Binding IsSelected, Mode=OneWay}"/>
        
        <!-- triggers -->
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSpecialDay}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource StswCalendar.SpecialDay.Foreground}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding InCurrentMonth}" Value="False">
                <Setter Property="Opacity" Value="0.6"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding InCurrentMonth}" Value="True">
                <Setter Property="FontWeight" Value="Medium"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding InMinMaxRange}" Value="False">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSpecialDay}" Value="Sunday"/>
                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type se:StswCalendar}}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource StswButton.Disabled.Foreground}"/>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding IsCurrentDay}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource StswCalendar.IsCurrentDay.Border}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>