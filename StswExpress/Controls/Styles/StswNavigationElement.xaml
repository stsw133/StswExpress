<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswNavigationElement}">
        
        <Setter Property="Background" Value="{DynamicResource StswButton.Static.Background}"/>
        <Setter Property="BackgroundDisabled" Value="{DynamicResource StswButton.Disabled.Background}"/>
        <Setter Property="BackgroundMouseOver" Value="{DynamicResource StswButton.MouseOver.Background}"/>
        <Setter Property="BackgroundPressed" Value="{DynamicResource StswButton.Pressed.Background}"/>
        <Setter Property="BackgroundChecked" Value="{DynamicResource StswButton.Checked.Background}"/>

        <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Static.Border}"/>
        <Setter Property="BorderBrushDisabled" Value="{DynamicResource StswButton.Disabled.Border}"/>
        <Setter Property="BorderBrushMouseOver" Value="{DynamicResource StswButton.MouseOver.Background}"/>
        <Setter Property="BorderBrushPressed" Value="{DynamicResource StswButton.Pressed.Background}"/>
        <Setter Property="BorderBrushChecked" Value="{DynamicResource StswButton.Checked.Border}"/>

        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ForegroundDisabled" Value="{DynamicResource StswButton.Disabled.Foreground}"/>
        <Setter Property="ForegroundMouseOver" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ForegroundPressed" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ForegroundChecked" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>

        <Setter Property="BorderThickness" Value="0.5"/>
        <Setter Property="PopupBorderThickness" Value="2"/>
        <Setter Property="SubBorderThickness" Value="{Binding BorderThickness.Bottom, RelativeSource={RelativeSource Self}, Converter={x:Static se:StswMultiplyConverter.Instance}, ConverterParameter=0.5}"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="Padding" Value="6"/>

        <Setter Property="IconFill" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="IconScale" Value="1.5"/>
        <Setter Property="TextMargin" Value="3 1"/>

        <Setter Property="GroupName" Value="{Binding GroupName, RelativeSource={RelativeSource AncestorType={x:Type se:StswNavigation}}}"/>
        
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswNavigationElement}">
                    <se:ClippingBorder x:Name="PART_MainBorder"
                                       Background="{TemplateBinding Background}"
                                       BorderBrush="{TemplateBinding BorderBrush}"
                                       BorderThickness="{TemplateBinding BorderThickness}"
                                       CornerRadius="{TemplateBinding CornerRadius}"
                                       SnapsToDevicePixels="True">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite"
                                          DockPanel.Dock="Top"
                                          Background="{TemplateBinding Background}"
                                          BorderThickness="0"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontStyle="{TemplateBinding FontStyle}"
                                          FontStretch="{TemplateBinding FontStretch}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Margin="0" MinHeight="0" MinWidth="0"
                                          Padding="{TemplateBinding Padding}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="False">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>
                                            <se:StswHeader x:Name="PART_Header" Grid.Column="0"
                                                           Content="{Binding Text, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                                           ContentMargin="{Binding TextMargin, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                                           ContentVisibility="{Binding TextVisibility, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                                           ForegroundDisabled="{Binding ForegroundDisabled, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                                           IconData="{Binding IconData, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                                           IconFill="{Binding IconFill, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                                           IconScale="{Binding IconScale, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                                           IconSource="{Binding IconSource, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                                           IsBusy="{Binding IsBusy, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                                           Orientation="Horizontal"
                                                           Padding="{TemplateBinding Padding}"
                                                           SnapsToDevicePixels="True"
                                                           HorizontalAlignment="Left"
                                                           VerticalAlignment="Center"/>
                                            <se:StswIcon x:Name="arrow" Grid.Column="1"
                                                         Data="{x:Static se:StswIcons.MenuDown}"
                                                         Scale="{Binding IconScale, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                                         Margin="{TemplateBinding Padding}"
                                                         SnapsToDevicePixels="False"
                                                         HorizontalAlignment="Center"
                                                         VerticalAlignment="Center"
                                                         Visibility="{Binding TextVisibility, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding HasContent, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}" Value="False">
                                                <Setter Property="Focusable" Value="False" />
                                                <Setter Property="IsHitTestVisible" Value="False" />
                                                <Setter Property="Visibility" Value="Collapsed" TargetName="arrow" />
                                            </DataTrigger>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Data" Value="{x:Static se:StswIcons.MenuUp}" TargetName="arrow" />
                                            </Trigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsCompact, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}" Value="True"/>
                                                    <Condition Binding="{Binding InExpander, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="ContentVisibility" Value="Visible" TargetName="PART_Header" />
                                            </MultiDataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <Border x:Name="PART_SubBorder"
                                    DockPanel.Dock="Top"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding SubBorderThickness}"
                                    CornerRadius="0"
                                    Visibility="Collapsed"/>
                            <ContentControl x:Name="ExpandSite" Content="{Binding}">
                                <ContentControl.Style>
                                    <Style TargetType="{x:Type ContentControl}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsCompact, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}" Value="False">
                                                <Setter Property="ContentTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <ContentPresenter DockPanel.Dock="Bottom"
                                                                              Content="{Binding Content, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                                                              ContentTemplate="{Binding ContentTemplate, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                                                              ContentTemplateSelector="{Binding ContentTemplateSelector, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                                                              Focusable="False"
                                                                              Margin="0"
                                                                              HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                                                              VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                                                              Visibility="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}, Converter={x:Static se:StswBoolConverter.Instance}}"/>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsCompact, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}" Value="True">
                                                <Setter Property="ContentTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <se:StswPopup CloseOnClick="True"
                                                                          IsOpen="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                                                          Placement="Relative"
                                                                          StaysOpen="False">
                                                                <se:ClippingBorder BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                                                                   BorderThickness="{Binding PopupBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}">
                                                                    <ContentControl DockPanel.Dock="Bottom"
                                                                                    Content="{Binding Content, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                                                                    ContentTemplate="{Binding ContentTemplate, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                                                                    ContentTemplateSelector="{Binding ContentTemplateSelector, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                                                                    Focusable="False"
                                                                                    Margin="0"
                                                                                    HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                                                                    VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                                                                    Visibility="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}, Converter={x:Static se:StswBoolConverter.Instance}}"/>
                                                                </se:ClippingBorder>
                                                            </se:StswPopup>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentControl.Style>
                            </ContentControl>

                        </DockPanel>
                    </se:ClippingBorder>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="Focusable" Value="False" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_SubBorder" />
                            <Setter Property="Visibility" Value="Visible" TargetName="ExpandSite" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{Binding BackgroundMouseOver, RelativeSource={RelativeSource TemplatedParent}}" TargetName="HeaderSite" />
                            <Setter Property="BorderBrush" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainBorder" />
                            <Setter Property="TextElement.Foreground" Value="{Binding ForegroundMouseOver, RelativeSource={RelativeSource TemplatedParent}}" TargetName="HeaderSite" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{Binding BackgroundPressed, RelativeSource={RelativeSource TemplatedParent}}" TargetName="HeaderSite" />
                            <Setter Property="BorderBrush" Value="{Binding BorderBrushPressed, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainBorder" />
                            <Setter Property="TextElement.Foreground" Value="{Binding ForegroundPressed, RelativeSource={RelativeSource TemplatedParent}}" TargetName="HeaderSite" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{Binding BackgroundChecked, RelativeSource={RelativeSource TemplatedParent}}" TargetName="HeaderSite" />
                            <Setter Property="BorderBrush" Value="{Binding BorderBrushChecked, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainBorder" />
                            <Setter Property="TextElement.Foreground" Value="{Binding ForegroundChecked, RelativeSource={RelativeSource TemplatedParent}}" TargetName="HeaderSite" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{Binding BackgroundDisabled, RelativeSource={RelativeSource TemplatedParent}}" TargetName="HeaderSite" />
                            <Setter Property="BorderBrush" Value="{Binding BorderBrushDisabled, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainBorder" />
                            <Setter Property="TextElement.Foreground" Value="{Binding ForegroundDisabled, RelativeSource={RelativeSource TemplatedParent}}" TargetName="HeaderSite" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>