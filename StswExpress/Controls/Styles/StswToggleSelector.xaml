<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswToggleSelector}">

        <Setter Property="Background" Value="{DynamicResource StswButton.Static.Background}"/>
        <Setter Property="BackgroundDisabled" Value="{DynamicResource StswButton.Disabled.Background}"/>
        <Setter Property="BackgroundMouseOver" Value="{DynamicResource StswButton.MouseOver.Background}"/>
        <Setter Property="BackgroundPressed" Value="{DynamicResource StswButton.Pressed.Background}"/>
        <Setter Property="BackgroundReadOnly" Value="{DynamicResource StswButton.Disabled.Background}"/>

        <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Static.Border}"/>
        <Setter Property="BorderBrushDisabled" Value="{DynamicResource StswButton.Disabled.Border}"/>
        <Setter Property="BorderBrushMouseOver" Value="{DynamicResource StswButton.MouseOver.Background}"/>
        <Setter Property="BorderBrushPressed" Value="{DynamicResource StswButton.Pressed.Background}"/>

        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ForegroundDisabled" Value="{DynamicResource StswButton.Disabled.Foreground}"/>
        <Setter Property="ForegroundMouseOver" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ForegroundPressed" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ForegroundPlaceholder" Value="{DynamicResource StswBox.Placeholder.Foreground}"/>

        <Setter Property="BorderThickness" Value="{Binding iSize, Source={x:Static se:StswSettings.Default}, Converter={x:Static se:StswMultiplyConverter.Instance}, ConverterParameter=0.15}"/>
        <Setter Property="PopupBorderThickness" Value="{Binding iSize, Source={x:Static se:StswSettings.Default}, Converter={x:Static se:StswMultiplyConverter.Instance}, ConverterParameter=0.15}"/>
        <Setter Property="SubBorderThickness" Value="{Binding BorderThickness.Left, Mode=OneWay, RelativeSource={RelativeSource Self}, Converter={x:Static se:StswMultiplyConverter.Instance}, ConverterParameter=0.5}"/>
        <Setter Property="CornerRadius" Value="{Binding iSize, Source={x:Static se:StswSettings.Default}, Converter={x:Static se:StswMultiplyConverter.Instance}, ConverterParameter=0.75}"/>
        <Setter Property="Padding" Value="{Binding iSize, Source={x:Static se:StswSettings.Default}, Converter={x:Static se:StswMultiplyConverter.Instance}, ConverterParameter=0.25}"/>

        <Setter Property="ButtonsAlignment" Value="Right"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <se:StswToggleButton Background="Transparent"
                                                     BackgroundChecked="{DynamicResource StswItem.Checked.Background}"
                                                     BorderThickness="0"
                                                     CornerRadius="0"
                                                     HorizontalContentAlignment="Left"
                                                     Padding="{TemplateBinding Padding}"
                                                     Command="{Binding ComboBoxItemClickCommand, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}"
                                                     CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                                    <se:StswToggleButton.Style>
                                        <Style TargetType="{x:Type se:StswToggleButton}">
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="FontWeight" Value="Bold"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </se:StswToggleButton.Style>
                                    <ContentPresenter MinHeight="{Binding iSize, Source={x:Static se:StswSettings.Default}, Converter={x:Static se:StswAddConverter.Instance}, ConverterParameter=2}"/>
                                </se:StswToggleButton>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswToggleSelector}">
                    <Grid x:Name="PART_TemplateRoot" SnapsToDevicePixels="True">
                        <!-- button -->
                        <ToggleButton x:Name="PART_Button"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      ClickMode="Press"
                                      Focusable="False"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      IsTabStop="False"
                                      OverridesDefaultStyle="True"
                                      Padding="{TemplateBinding Padding}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <se:ClippingBorder x:Name="PART_MainBorder"
                                                       Background="{TemplateBinding Background}"
                                                       BorderBrush="{TemplateBinding BorderBrush}"
                                                       BorderThickness="{TemplateBinding BorderThickness}"
                                                       CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}"
                                                       SnapsToDevicePixels="True">
                                        <DockPanel>
                                            <!-- buttons -->
                                            <ContentControl x:Name="PART_FunctionButton"
                                                            DockPanel.Dock="{Binding ButtonsAlignment, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}"
                                                            Width="{Binding iSize, Source={x:Static se:StswSettings.Default}, Converter={x:Static se:StswMultiplyConverter.Instance}, ConverterParameter=2}">
                                                <se:StswIcon Data="{x:Static se:StswIcons.MenuDown}" Scale="1.5"/>
                                            </ContentControl>
                                            <!-- subborder -->
                                            <Border x:Name="PART_SubBorder"
                                                    DockPanel.Dock="{Binding ButtonsAlignment, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}"
                                                    BorderBrush="{Binding BorderBrush, ElementName=PART_MainBorder}"
                                                    BorderThickness="{Binding SubBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}"
                                                    SnapsToDevicePixels="True"/>
                                            <!-- custom buttons -->
                                            <ItemsControl x:Name="PART_Buttons"
                                                          DockPanel.Dock="{Binding ButtonsAlignment, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}"
                                                          ItemsSource="{Binding Buttons, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel Orientation="Horizontal"/>
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ItemsControl>
                                            <!-- content -->
                                            <Grid>
                                                <TextBlock x:Name="PART_Placeholder"
                                                           Foreground="{Binding ForegroundPlaceholder, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}"
                                                           IsHitTestVisible="False"
                                                           Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}"
                                                           Text="{Binding Placeholder, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}"
                                                           HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}"
                                                           VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}"
                                                           Visibility="Collapsed"/>
                                                <ContentPresenter x:Name="PART_ContentPresenter"
                                                                  Content="{Binding SelectionBoxItem, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}"
                                                                  ContentTemplate="{Binding SelectionBoxItemTemplate, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}"
                                                                  ContentTemplateSelector="{Binding ItemTemplateSelector, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}"
                                                                  ContentStringFormat="{Binding SelectionBoxItemStringFormat, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}"
                                                                  IsHitTestVisible="False"
                                                                  Margin="{TemplateBinding Padding}"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                  HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}"
                                                                  VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}"/>
                                            </Grid>
                                        </DockPanel>
                                    </se:ClippingBorder>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding SelectedItems.Count, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}" Value="0">
                                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Placeholder" />
                                        </DataTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{Binding BackgroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}" TargetName="PART_MainBorder" />
                                            <Setter Property="BorderBrush" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}" TargetName="PART_MainBorder" />
                                            <Setter Property="TextElement.Foreground" Value="{Binding ForegroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" Value="{Binding BackgroundPressed, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}" TargetName="PART_MainBorder" />
                                            <Setter Property="BorderBrush" Value="{Binding BorderBrushPressed, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}" TargetName="PART_MainBorder" />
                                            <Setter Property="TextElement.Foreground" Value="{Binding ForegroundPressed, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}" />
                                        </Trigger>
                                        <Trigger Property="IsHitTestVisible" Value="False">
                                            <Setter Property="Background" Value="{Binding BackgroundReadOnly, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}" TargetName="PART_MainBorder" />
                                            <Setter Property="IsEnabled" Value="False" TargetName="PART_FunctionButton" />
                                            <Setter Property="IsEnabled" Value="False" TargetName="PART_Buttons" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" Value="{Binding BackgroundDisabled, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}" TargetName="PART_MainBorder" />
                                            <Setter Property="BorderBrush" Value="{Binding BorderBrushDisabled, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}" TargetName="PART_MainBorder" />
                                            <Setter Property="TextElement.Foreground" Value="{Binding ForegroundDisabled, RelativeSource={RelativeSource AncestorType={x:Type se:StswToggleSelector}}}" />
                                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Placeholder" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <!-- popup -->
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <se:ClippingBorder x:Name="DropDownBorder"
                                               Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                               BorderBrush="{TemplateBinding BorderBrush}"
                                               BorderThickness="{TemplateBinding PopupBorderThickness}"
                                               CornerRadius="{TemplateBinding CornerRadius}"
                                               MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                               MinWidth="{Binding ActualWidth, ElementName=PART_TemplateRoot}">
                                <se:StswScrollViewer x:Name="DropDownScrollViewer" VerticalScrollBarVisibility="Auto">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                            <Rectangle x:Name="OpaqueRect"
                                                       Fill="{Binding Background, ElementName=DropDownBorder}"
                                                       Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                       Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>
                                </se:StswScrollViewer>
                            </se:ClippingBorder>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Height" Value="95" TargetName="DropDownBorder" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" TargetName="OpaqueRect" />
                            <Setter Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" TargetName="OpaqueRect" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="IsHitTestVisible" Value="False" TargetName="PART_Button" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>