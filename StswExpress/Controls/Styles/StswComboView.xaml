<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswComboView}">

        <Setter Property="Background" Value="{DynamicResource StswButton.Static.Background}"/>
        <Setter Property="BackgroundDisabled" Value="{DynamicResource StswButton.Disabled.Background}"/>
        <Setter Property="BackgroundMouseOver" Value="{DynamicResource StswButton.MouseOver.Background}"/>
        <Setter Property="BackgroundPressed" Value="{DynamicResource StswButton.Pressed.Background}"/>
        <Setter Property="BackgroundReadOnly" Value="{DynamicResource StswButton.Disabled.Background}"/>

        <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Static.Border}"/>
        <Setter Property="BorderBrushDisabled" Value="{DynamicResource StswButton.Disabled.Border}"/>
        <Setter Property="BorderBrushMouseOver" Value="{DynamicResource StswButton.MouseOver.Border}"/>
        <Setter Property="BorderBrushPressed" Value="{DynamicResource StswButton.Pressed.Border}"/>

        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ForegroundDisabled" Value="{DynamicResource StswButton.Disabled.Foreground}"/>
        <Setter Property="ForegroundMouseOver" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ForegroundPressed" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="ForegroundPlaceholder" Value="{DynamicResource StswBox.Placeholder.Foreground}"/>

        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="PopupBorderThickness" Value="2"/>
        <Setter Property="SubBorderThickness" Value="{Binding BorderThickness.Left, Mode=OneWay, RelativeSource={RelativeSource Self}, Converter={x:Static se:StswMultiplyConverter.Instance}, ConverterParameter=0.5}"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="3"/>
        
        <Setter Property="SelectionMode" Value="Multiple"/>

        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>

        <Setter Property="ComponentsAlignment" Value="Right"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border x:Name="PART_Border"
                                        Background="{DynamicResource StswComboItem.Static.Background}"
                                        BorderBrush="{DynamicResource StswComboItem.Static.Border}"
                                        BorderThickness="0.5"
                                        Padding="4 2">
                                    <ContentPresenter/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource StswComboItem.MouseOver.Background}" TargetName="PART_Border" />
                                        <Setter Property="BorderBrush" Value="{DynamicResource StswComboItem.MouseOver.Border}" TargetName="PART_Border" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource StswComboItem.Checked.Background}" TargetName="PART_Border" />
                                        <Setter Property="BorderBrush" Value="{DynamicResource StswComboItem.Checked.Border}" TargetName="PART_Border" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswComboView}">
                    <Grid x:Name="PART_TemplateRoot" SnapsToDevicePixels="True">
                        <!-- button -->
                        <se:StswToggleButton x:Name="PART_MainButton"
                                             Background="{TemplateBinding Background}"
                                             BackgroundChecked="{TemplateBinding BackgroundPressed}"
                                             BorderBrush="{TemplateBinding BorderBrush}"
                                             BorderBrushChecked="{TemplateBinding BorderBrushPressed}"
                                             BorderThickness="{TemplateBinding BorderThickness}"
                                             ClickMode="Press"
                                             CornerRadius="{TemplateBinding CornerRadius}"
                                             ForegroundChecked="{TemplateBinding ForegroundPressed}"
                                             Padding="2 0"
                                             HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                             VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <DockPanel>
                                <!-- function button -->
                                <ContentControl x:Name="PART_FunctionButton"
                                                DockPanel.Dock="{TemplateBinding ComponentsAlignment}"
                                                Width="24">
                                    <se:StswIcon Data="{x:Static se:StswIcons.MenuDown}" Scale="1.5"/>
                                </ContentControl>
                                <!-- subborder -->
                                <Border x:Name="PART_SubBorder"
                                        DockPanel.Dock="{TemplateBinding ComponentsAlignment}"
                                        BorderBrush="{Binding BorderBrush, ElementName=PART_MainButton}"
                                        BorderThickness="{TemplateBinding SubBorderThickness}"
                                        SnapsToDevicePixels="True"/>
                                <!-- components -->
                                <ItemsControl x:Name="PART_Components" DockPanel.Dock="{TemplateBinding ComponentsAlignment}" ItemsSource="{TemplateBinding Components}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                                <!-- popup: items -->
                                <Popup x:Name="PART_Popup"
                                       AllowsTransparency="True"
                                       IsOpen="{Binding IsChecked, ElementName=PART_MainButton}"
                                       Placement="Bottom"
                                       PlacementTarget="{Binding ElementName=PART_MainButton}"
                                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                       StaysOpen="False">
                                    <se:ClippingBorder x:Name="Bd"
                                                       Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                                       BorderBrush="{TemplateBinding BorderBrush}"
                                                       BorderThickness="{TemplateBinding PopupBorderThickness}"
                                                       CornerRadius="{TemplateBinding CornerRadius}"
                                                       MaxHeight="200"
                                                       MinWidth="{Binding ActualWidth, ElementName=PART_TemplateRoot}">
                                        <ScrollViewer Focusable="False">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </ScrollViewer>
                                    </se:ClippingBorder>
                                </Popup>
                                <!-- content -->
                                <Grid>
                                    <TextBlock x:Name="PART_Placeholder"
                                               Foreground="{TemplateBinding ForegroundPlaceholder}"
                                               IsHitTestVisible="False"
                                               Margin="{TemplateBinding Padding}"
                                               Text="{TemplateBinding Placeholder}"
                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                               Visibility="Collapsed"/>
                                    <TextBlock x:Name="PART_ContentPresenter"
                                               IsHitTestVisible="False"
                                               Margin="{TemplateBinding Padding}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                               Text="{TemplateBinding Text}"
                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </DockPanel>
                        </se:StswToggleButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Height" Value="95" TargetName="Bd" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </MultiTrigger>
                        <DataTrigger Binding="{Binding SelectedItems.Count, RelativeSource={RelativeSource TemplatedParent}}" Value="0">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Placeholder" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{Binding BackgroundMouseOver, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainButton" />
                            <Setter Property="BorderBrush" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainButton" />
                            <Setter Property="TextElement.Foreground" Value="{Binding ForegroundMouseOver, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter Property="Background" Value="{Binding BackgroundPressed, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainButton" />
                            <Setter Property="BorderBrush" Value="{Binding BorderBrushPressed, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainButton" />
                            <Setter Property="TextElement.Foreground" Value="{Binding ForegroundPressed, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <!-- <Setter Property="Background" Value="{Binding BackgroundReadOnly, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainButton" /> -->
                            <Setter Property="Foreground" Value="{Binding ForegroundDisabled, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_FunctionButton" />
                            <Setter Property="IsHitTestVisible" Value="False" TargetName="PART_MainButton" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="IsHitTestVisible" Value="False" TargetName="PART_MainButton" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{Binding BackgroundDisabled, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainButton" />
                            <Setter Property="BorderBrush" Value="{Binding BorderBrushDisabled, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainButton" />
                            <Setter Property="TextElement.Foreground" Value="{Binding ForegroundDisabled, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Placeholder" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>