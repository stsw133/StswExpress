<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswWindow}">

        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{x:Static SystemParameters.WindowGlassBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="FontSize" Value="{Binding iSize, Source={x:Static se:Settings.Default}}"/>
        <Setter Property="WindowStyle" Value="None"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswWindow}">
                    <!-- window border -->
                    <se:ClippingBorder>
                        <se:ClippingBorder.Resources>
                            <Style TargetType="{x:Type se:ClippingBorder}">
                                <Setter Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                                        <Setter Property="BorderBrush" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static se:conv_ColorBrightness.Instance}, ConverterParameter=?10%}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource TemplatedParent}}" Value="Maximized">
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="CornerRadius" Value="0"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </se:ClippingBorder.Resources>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <!-- title bar -->
                            <Grid x:Name="PART_TitleBar" Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <!-- icon & title -->
                                <se:StswHeader x:Name="PART_MoveRectangle"
                                               Grid.ColumnSpan="2"
                                               BorderBrush="{DynamicResource TextBox.Static.Border}"
                                               BorderThickness="0 0 0 0.5"
                                               IconSource="{TemplateBinding Icon}"
                                               IconScale="{x:Null}">
                                    <StackPanel>
                                        <TextBlock Text="{TemplateBinding Title}"/>
                                        <TextBlock Text="{TemplateBinding SubTitle}"
                                                   Opacity="0.6"
                                                   FontSize="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter=0.8}">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding SubTitle, RelativeSource={RelativeSource TemplatedParent}}" Value="{x:Null}">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ShowSubTitle, Source={x:Static se:Settings.Default}}" Value="False">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding SubTitle, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static se:conv_NotNull.Instance}}" Value="True"/>
                                                                <Condition Binding="{Binding ShowSubTitle, Source={x:Static se:Settings.Default}}" Value="True"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </StackPanel>
                                    <se:StswHeader.Style>
                                        <Style TargetType="{x:Type se:StswHeader}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                                                    <Setter Property="Foreground" Value="#B777"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </se:StswHeader.Style>
                                </se:StswHeader>
                                <!-- buttons panel -->
                                <StackPanel x:Name="PART_ButtonsPanel" Grid.Column="1" Orientation="Horizontal">
                                    <StackPanel.Resources>
                                        <!-- buttons style -->
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                        <Border Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                SnapsToDevicePixels="True">
                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                              Content="{TemplateBinding Content}"
										                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
										                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										                                      Margin="{TemplateBinding Padding}"
										                                      RecognizesAccessKey="True"
										                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="FontSize" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter=1.25}"/>
                                            <Setter Property="Padding" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter=0.25}"/>
                                            <Setter Property="Width" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter=3.75}"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#7777"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                        <Condition Property="Name" Value="PART_ButtonClose"/>
                                                    </MultiTrigger.Conditions>
                                                    <MultiTrigger.Setters>
                                                        <Setter Property="Background" Value="Red"/>
                                                    </MultiTrigger.Setters>
                                                </MultiTrigger>
                                            </Style.Triggers>
                                        </Style>
                                        <Style TargetType="{x:Type se:OutlinedTextBlock}">
                                            <Setter Property="Fill" Value="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}, Converter={x:Static se:conv_IfElse.Instance}, ConverterParameter=True~White~#B777}"/>
                                            <Setter Property="FontFamily" Value="Arial"/>
                                            <Setter Property="Stroke" Value="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}, Converter={x:Static se:conv_IfElse.Instance}, ConverterParameter=True~Black~Transparent}"/>
                                            <Setter Property="StrokeThickness" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter=0.15}"/>
                                        </Style>
                                    </StackPanel.Resources>
                                    <!-- buttons -->
                                    <ItemsControl ItemsSource="{TemplateBinding Buttons}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal"/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                    <Button x:Name="PART_ButtonMinimize"
                                            ToolTip="Minimalizuj"
                                            Visibility="{TemplateBinding ResizeMode, Converter={x:Static se:conv_Compare.Instance}, ConverterParameter=!NoResize}">
                                        <se:OutlinedTextBlock Text="🗕"/>
                                    </Button>
                                    <Button x:Name="PART_ButtonRestore"
                                            ToolTip="{TemplateBinding WindowState, Converter={x:Static se:conv_IfElse.Instance}, ConverterParameter='Maximized~Przywróć w dół~Maksymalizuj'}"
                                            Visibility="{TemplateBinding ResizeMode, Converter={x:Static se:conv_Contains.Instance}, ConverterParameter=CanResize}">
                                        <se:OutlinedTextBlock Text="{TemplateBinding WindowState, Converter={x:Static se:conv_IfElse.Instance}, ConverterParameter=Maximized~🗗~🗖}"/>
                                    </Button>
                                    <Button x:Name="PART_ButtonClose"
                                            ToolTip="Zamknij">
                                        <se:OutlinedTextBlock Text="🗙"/>
                                    </Button>
                                </StackPanel>
                                <!-- context menu -->
                                <Grid.ContextMenu>
                                    <ContextMenu Placement="MousePoint">
                                        <MenuItem Header="Dodatkowe opcje">
                                            <MenuItem x:Name="PART_MenuScaling" Header="Rozmiar">
                                                <MenuItem.Icon>
                                                    <TextBlock Text="{Binding iSize, Source={x:Static se:Settings.Default}, StringFormat={}{0:N0}}" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </MenuItem.Icon>
                                                <Slider Width="220" Value="{Binding iSize, Source={x:Static se:Settings.Default}, UpdateSourceTrigger=PropertyChanged}" Minimum="6" Maximum="60" TickFrequency="1" IsSnapToTickEnabled="True"/>
                                            </MenuItem>
                                            <MenuItem x:Name="PART_MenuTheme" Header="Motyw">
                                                <MenuItem.Icon>
                                                    <TextBlock Text="🎨" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </MenuItem.Icon>
                                                <MenuItem Header="Automatyczny" IsChecked="{Binding Theme, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Compare.Instance}, ConverterParameter=-1}">
                                                    <MenuItem.Icon>
                                                        <TextBlock Text=" " FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                                <MenuItem Header="Jasny" IsChecked="{Binding Theme, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Compare.Instance}, ConverterParameter=0}">
                                                    <MenuItem.Icon>
                                                        <TextBlock Text="☼" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                                <MenuItem Header="Ciemny" IsChecked="{Binding Theme, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Compare.Instance}, ConverterParameter=1}">
                                                    <MenuItem.Icon>
                                                        <TextBlock Text="☽" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                            </MenuItem>
                                            <MenuItem x:Name="PART_MenuSubtitle" Header="Podtytuł okna" IsCheckable="True" IsChecked="{Binding ShowSubTitle, Mode=TwoWay, Source={x:Static se:Settings.Default}}">
                                                <MenuItem.Icon>
                                                    <TextBlock Text="⚎" FontWeight="Heavy" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem x:Name="PART_MenuFullscreen" Header="Pełny ekran" IsCheckable="True" IsChecked="{TemplateBinding Fullscreen}" InputGestureText="F11" Visibility="{TemplateBinding ResizeMode, Converter={se:conv_Contains}, ConverterParameter=CanResize}">
                                                <MenuItem.Icon>
                                                    <TextBlock Text="⛶" FontWeight="Heavy" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </MenuItem>
                                        <Separator/>
                                        <MenuItem x:Name="PART_MenuCenter" Header="Wyśrodkuj na ekranie">
                                            <MenuItem.Icon>
                                                <TextBlock Text="⊡" FontWeight="Heavy" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem x:Name="PART_MenuDefault" Header="Domyślny rozmiar" Visibility="{TemplateBinding ResizeMode, Converter={x:Static se:conv_Contains.Instance}, ConverterParameter=CanResize}">
                                            <MenuItem.Icon>
                                                <TextBlock Text="↕" FontWeight="Heavy" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem x:Name="PART_MenuMinimize" Header="Minimalizuj" Visibility="{TemplateBinding ResizeMode, Converter={x:Static se:conv_Compare.Instance}, ConverterParameter=!NoResize}">
                                            <MenuItem.Icon>
                                                <TextBlock Text="🗕" FontWeight="Heavy" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem x:Name="PART_MenuRestore" Header="{TemplateBinding WindowState, Converter={x:Static se:conv_IfElse.Instance}, ConverterParameter='Maximized~Przywróć w dół~Maksymalizuj'}" Visibility="{TemplateBinding ResizeMode, Converter={se:conv_Contains}, ConverterParameter=CanResize}">
                                            <MenuItem.Icon>
                                                <TextBlock Text="{TemplateBinding WindowState, Converter={x:Static se:conv_IfElse.Instance}, ConverterParameter=Maximized~🗗~🗖}" FontWeight="Heavy" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <Separator/>
                                        <MenuItem x:Name="PART_MenuClose" Header="Zamknij">
                                            <MenuItem.Icon>
                                                <TextBlock Text="🗙" FontWeight="Heavy" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </MenuItem.Icon>
                                            <MenuItem.InputGestureText>Alt + F4</MenuItem.InputGestureText>
                                        </MenuItem>
                                    </ContextMenu>
                                </Grid.ContextMenu>
                            </Grid>
                            <!-- content grid -->
                            <Grid Background="{TemplateBinding Background}" Grid.Row="1">
                                <AdornerDecorator>
                                    <ContentPresenter/>
                                </AdornerDecorator>

                                <!-- fullscreen button panel -->
                                <StackPanel x:Name="PART_FullscreenPanel" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Visibility="Collapsed">
                                    <StackPanel.Resources>
                                        <!-- buttons style -->
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                        <Border Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                SnapsToDevicePixels="True">
                                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                              Content="{TemplateBinding Content}"
										                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
										                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										                                      Margin="{TemplateBinding Padding}"
										                                      RecognizesAccessKey="True"
										                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="FontSize" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter=1.25}"/>
                                            <Setter Property="Padding" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter=0.25}"/>
                                            <Setter Property="Width" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter=3.75}"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#7777"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                        <Condition Property="Name" Value="PART_FsButtonClose"/>
                                                    </MultiTrigger.Conditions>
                                                    <MultiTrigger.Setters>
                                                        <Setter Property="Background" Value="Red"/>
                                                    </MultiTrigger.Setters>
                                                </MultiTrigger>
                                            </Style.Triggers>
                                        </Style>
                                        <Style TargetType="{x:Type se:OutlinedTextBlock}">
                                            <Setter Property="Fill" Value="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}, Converter={x:Static se:conv_IfElse.Instance}, ConverterParameter=True~White~#B777}"/>
                                            <Setter Property="FontFamily" Value="Arial"/>
                                            <Setter Property="Stroke" Value="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}, Converter={x:Static se:conv_IfElse.Instance}, ConverterParameter=True~Black~Transparent}"/>
                                            <Setter Property="StrokeThickness" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={x:Static se:conv_Multiply.Instance}, ConverterParameter=0.15}"/>
                                        </Style>
                                    </StackPanel.Resources>
                                    <!-- buttons -->
                                    <Button x:Name="PART_FsButtonMinimize"
                                            ToolTip="Minimalizuj"
                                            Visibility="{TemplateBinding ResizeMode, Converter={x:Static se:conv_Compare.Instance}, ConverterParameter=!NoResize}">
                                        <se:OutlinedTextBlock Text="🗕"/>
                                    </Button>
                                    <Button x:Name="PART_FsButtonRestore"
                                            ToolTip="Wyłącz pełny ekran">
                                        <se:OutlinedTextBlock Text="⛶"/>
                                    </Button>
                                    <Button x:Name="PART_FsButtonClose"
                                            ToolTip="Zamknij">
                                        <se:OutlinedTextBlock Text="🗙"/>
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </se:ClippingBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>