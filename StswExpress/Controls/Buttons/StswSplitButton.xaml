<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswSplitButton}">
        <Setter Property="Background" Value="{DynamicResource StswButton.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Static.Border}"/>

        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerClipping" Value="True"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="SeparatorThickness" Value="2"/>

        <Setter Property="Popup">
            <Setter.Value>
                <se:StswPopupModel Background="{DynamicResource StswPopup.Static.Background}" BorderBrush="{DynamicResource StswPopup.Static.Border}"/>
            </Setter.Value>
        </Setter>

        <Setter Property="Focusable" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>
        
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswSplitButton}">
                    <se:StswBorder x:Name="PART_MainBorder"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   BorderThickness="{TemplateBinding BorderThickness}"
                                   CornerClipping="{TemplateBinding CornerClipping}"
                                   CornerRadius="{TemplateBinding CornerRadius}">
                        <DockPanel>
                            <!-- drop button -->
                            <se:StswToggleButton x:Name="PART_MainButton" DockPanel.Dock="Right"
                                                 se:StswBorder.IsBorderless="True"
                                                 Background="{TemplateBinding Background}"
                                                 BorderBrush="{TemplateBinding BorderBrush}"
                                                 ClickMode="Press"
                                                 IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                 Padding="0"
                                                 HorizontalContentAlignment="Stretch"
                                                 VerticalContentAlignment="Stretch"
                                                 Template="{DynamicResource StswDropToggleButtonTemplate}">
                                <se:StswDropArrow Focusable="False" IsDropDownOpen="{TemplateBinding IsDropDownOpen}" Width="24"/>
                            </se:StswToggleButton>
                            <!-- separator -->
                            <se:StswSeparator DockPanel.Dock="Right"
                                              BorderBrush="{Binding BorderBrush, ElementName=PART_MainBorder}"
                                              BorderThickness="{TemplateBinding SeparatorThickness}"
                                              Orientation="Vertical"/>
                            <!-- popup -->
                            <se:StswPopup x:Name="PART_Popup"
                                          Background="{Binding Popup.Background, RelativeSource={RelativeSource TemplatedParent}}"
                                          BorderBrush="{Binding Popup.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                                          BorderThickness="{Binding Popup.BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                                          CornerClipping="{Binding Popup.CornerClipping, RelativeSource={RelativeSource TemplatedParent}}"
                                          CornerRadius="{Binding Popup.CornerRadius, RelativeSource={RelativeSource TemplatedParent}}"
                                          IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                          MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                          Padding="{Binding Popup.Padding, RelativeSource={RelativeSource TemplatedParent}}"
                                          Placement="Bottom"
                                          PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                          PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                          StaysOpen="False">
                                <ItemsPresenter x:Name="PART_Items" Focusable="False"/>
                            </se:StswPopup>
                            <!-- content -->
                            <se:StswButton x:Name="PART_HeaderButton"
                                           se:StswBorder.IsBorderless="True"
                                           Command="{TemplateBinding Command}"
                                           CommandParameter="{TemplateBinding CommandParameter}"
                                           CommandTarget="{TemplateBinding CommandTarget}"
                                           Content="{TemplateBinding Header}"
                                           ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                           ContentTemplate="{TemplateBinding HeaderTemplate}"
                                           ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                           Padding="{TemplateBinding Padding}"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch"
                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </se:StswBorder>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswButton.MouseOver.Background}" TargetName="PART_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswButton.MouseOver.Border}" TargetName="PART_MainBorder"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswButton.Pressed.Background}" TargetName="PART_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Pressed.Border}" TargetName="PART_MainBorder"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswButton.ReadOnly.Foreground}" TargetName="PART_MainBorder"/>
                            <Setter Property="IsEnabled" Value="False" TargetName="PART_HeaderButton"/>
                            <Setter Property="IsEnabled" Value="False" TargetName="PART_Items"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource StswButton.Disabled.Background}" TargetName="PART_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Disabled.Border}" TargetName="PART_MainBorder"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswButton.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>