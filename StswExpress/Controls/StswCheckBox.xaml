<CheckBox x:Class="StswExpress.StswCheckBox"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
          xmlns:se="clr-namespace:StswExpress"
          mc:Ignorable="d" d:DesignWidth="100"
          VerticalContentAlignment="Center"
          Template="{DynamicResource CheckBoxTemplate1}">
    <CheckBox.Resources>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14 0 0 0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="True" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="CheckBoxTemplate1" TargetType="{x:Type CheckBox}">
            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="checkBoxBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                    <Grid x:Name="markGrid">
                        <TextBlock x:Name="checkedMark" Text="✔" Opacity="0" FontSize="{Binding iSize, Mode=OneWay, Source={x:Static se:Settings.Default}, Converter={se:conv_Multiply}, ConverterParameter=0.8}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock x:Name="uncheckedMark" Text=" " Opacity="0" FontSize="{Binding iSize, Mode=OneWay, Source={x:Static se:Settings.Default}, Converter={se:conv_Multiply}, ConverterParameter=0.8}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock x:Name="indeterminateMark" Text="?" Opacity="0" FontSize="{Binding iSize, Mode=OneWay, Source={x:Static se:Settings.Default}, Converter={se:conv_Multiply}, ConverterParameter=0.8}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="BorderThickness" Value="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={se:conv_Multiply}, ConverterParameter=0.15}"/>
                        </Style>
                    </Border.Style>
                </Border>
                <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasContent" Value="True">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                    <Setter Property="Padding" Value="4 -1 0 0"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#1777"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#59F"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#3777"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#BBB"/>
                    <Setter Property="Foreground" TargetName="checkedMark" Value="#7777"/>
                    <Setter Property="Foreground" TargetName="uncheckedMark" Value="#7777"/>
                    <Setter Property="Foreground" TargetName="indeterminateMark" Value="#7777"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#1777"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#37D"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Opacity" TargetName="checkedMark" Value="1"/>
                    <Setter Property="Opacity" TargetName="uncheckedMark" Value="0"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Opacity" TargetName="checkedMark" Value="0"/>
                    <Setter Property="Opacity" TargetName="uncheckedMark" Value="1"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Setter Property="Opacity" TargetName="checkedMark" Value="0"/>
                    <Setter Property="Opacity" TargetName="uncheckedMark" Value="0"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </CheckBox.Resources>
    <CheckBox.Style>
        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}"/>
    </CheckBox.Style>
</CheckBox>