<CheckBox x:Class="StswExpress.StswCheckBox"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
          xmlns:se="clr-namespace:StswExpress"
          mc:Ignorable="d">

    <CheckBox.Template>
        <ControlTemplate TargetType="{x:Type CheckBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="checkBoxBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}"
                        Padding="{TemplateBinding Padding}">
                    <Grid>
                        <TextBlock/>
                        <TextBlock x:Name="textmark" Foreground="{Binding GlyphBrush, RelativeSource={RelativeSource TemplatedParent}}"
                                   HorizontalAlignment="Center" VerticalAlignment="Center"
                                   FontSize="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}, Converter={se:conv_Multiply}, ConverterParameter=0.9}"/>
                    </Grid>
                </Border>
                <ContentPresenter x:Name="contentPresenter" Grid.Column="1"
                                  Focusable="False"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasContent" Value="False">
                    <Setter Property="Grid.ColumnSpan" Value="2" TargetName="checkBoxBorder"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch" TargetName="checkBoxBorder"/>
                    <Setter Property="VerticalAlignment" Value="Stretch" TargetName="checkBoxBorder"/>
                    <Setter Property="Visibility" Value="Collapsed" TargetName="contentPresenter"/>
                </Trigger>
                <Trigger Property="HasContent" Value="True">
                    <Setter Property="HorizontalAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" TargetName="checkBoxBorder"/>
                    <Setter Property="VerticalAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" TargetName="checkBoxBorder"/>
                    <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" TargetName="checkBoxBorder"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{Binding BackgroundMouseOver, RelativeSource={RelativeSource TemplatedParent}}" TargetName="checkBoxBorder" />
                    <Setter Property="BorderBrush" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource TemplatedParent}}" TargetName="checkBoxBorder" />
                    <Setter Property="Foreground" Value="{Binding GlyphBrushMouseOver, RelativeSource={RelativeSource TemplatedParent}}" TargetName="textmark" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{Binding BackgroundPressed, RelativeSource={RelativeSource TemplatedParent}}" TargetName="checkBoxBorder" />
                    <Setter Property="BorderBrush" Value="{Binding BorderBrushPressed, RelativeSource={RelativeSource TemplatedParent}}" TargetName="checkBoxBorder" />
                    <Setter Property="Foreground" Value="{Binding GlyphBrushPressed, RelativeSource={RelativeSource TemplatedParent}}" TargetName="textmark" />
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Background" Value="{Binding BackgroundUnchecked, RelativeSource={RelativeSource TemplatedParent}}" TargetName="checkBoxBorder" />
                    <Setter Property="Text" Value="{Binding SymbolUnchecked, RelativeSource={RelativeSource TemplatedParent}}" TargetName="textmark" />
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="{Binding BackgroundChecked, RelativeSource={RelativeSource TemplatedParent}}" TargetName="checkBoxBorder" />
                    <Setter Property="Text" Value="{Binding SymbolChecked, RelativeSource={RelativeSource TemplatedParent}}" TargetName="textmark" />
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Setter Property="Background" Value="{Binding BackgroundIndeterminate, RelativeSource={RelativeSource TemplatedParent}}" TargetName="checkBoxBorder" />
                    <Setter Property="Text" Value="{Binding SymbolIndeterminate, RelativeSource={RelativeSource TemplatedParent}}" TargetName="textmark" />
                </Trigger>
                <Trigger Property="IsHitTestVisible" Value="False">
                    <Setter Property="Foreground" Value="{Binding GlyphBrushDisabled, RelativeSource={RelativeSource TemplatedParent}}" TargetName="textmark" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{Binding BackgroundDisabled, RelativeSource={RelativeSource TemplatedParent}}" TargetName="checkBoxBorder" />
                    <Setter Property="BorderBrush" Value="{Binding BorderBrushDisabled, RelativeSource={RelativeSource TemplatedParent}}" TargetName="checkBoxBorder" />
                    <Setter Property="Foreground" Value="{Binding GlyphBrushDisabled, RelativeSource={RelativeSource TemplatedParent}}" TargetName="textmark" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </CheckBox.Template>
</CheckBox>