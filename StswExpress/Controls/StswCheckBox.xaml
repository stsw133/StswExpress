<se:StswCheckBoxBase x:Class="StswExpress.StswCheckBox"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                     xmlns:se="clr-namespace:StswExpress"
                     mc:Ignorable="d">

    <se:StswCheckBoxBase.Template>
        <ControlTemplate TargetType="{x:Type se:StswCheckBoxBase}">
            <DockPanel x:Name="templateRoot" SnapsToDevicePixels="True">
                <Border x:Name="checkBoxBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource AncestorType=CheckBox}}"
                        Padding="{TemplateBinding Padding}">
                    <!--
                        HorizontalAlignment="Center" VerticalAlignment="Center"
                        Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                    -->
                    <Grid>
                        <TextBlock/>
                        <TextBlock x:Name="textmark" Foreground="{Binding StyleColorGlyph, RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                   HorizontalAlignment="Center" VerticalAlignment="Center"
                                   FontSize="{Binding iSize, Source={x:Static se:Settings.Default}, Converter={se:conv_Multiply}, ConverterParameter=0.9}"/>
                    </Grid>
                </Border>
                <!--
                <ContentPresenter x:Name="contentPresenter"
                                  Focusable="False" RecognizesAccessKey="True"
                                  Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                -->
            </DockPanel>
            <ControlTemplate.Triggers>
                <!--
                <Trigger Property="HasContent" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" TargetName="contentPresenter"/>
                </Trigger>
                -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{Binding StyleColorMouseOverBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="checkBoxBorder" />
                    <Setter Property="BorderBrush" Value="{Binding StyleColorMouseOverBorder, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="checkBoxBorder" />
                    <Setter Property="Foreground" Value="{Binding StyleColorMouseOverGlyph, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="textmark" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{Binding StyleColorPressedBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="checkBoxBorder" />
                    <Setter Property="BorderBrush" Value="{Binding StyleColorPressedBorder, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="checkBoxBorder" />
                    <Setter Property="Foreground" Value="{Binding StyleColorPressedGlyph, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="textmark" />
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Background" Value="{Binding StyleColorUncheckedBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="checkBoxBorder" />
                    <Setter Property="Text" Value="{Binding StyleCharUnchecked, RelativeSource={RelativeSource TemplatedParent}}" TargetName="textmark" />
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="{Binding StyleColorCheckedBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="checkBoxBorder" />
                    <Setter Property="Text" Value="{Binding StyleCharChecked, RelativeSource={RelativeSource TemplatedParent}}" TargetName="textmark" />
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Setter Property="Background" Value="{Binding StyleColorIndeterminateBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="checkBoxBorder" />
                    <Setter Property="Text" Value="{Binding StyleCharIndeterminate, RelativeSource={RelativeSource TemplatedParent}}" TargetName="textmark" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{Binding StyleColorDisabledBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="checkBoxBorder" />
                    <Setter Property="BorderBrush" Value="{Binding StyleColorDisabledBorder, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="checkBoxBorder" />
                    <Setter Property="Foreground" Value="{Binding StyleColorDisabledGlyph, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="textmark" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </se:StswCheckBoxBase.Template>
</se:StswCheckBoxBase>