<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswNavigationElement}">
        <Setter Property="Background" Value="{DynamicResource StswNavigationElement.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StswNavigationElement.Static.Border}"/>
        
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerClipping" Value="False"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="SeparatorThickness" Value="2"/>
        
        <Setter Property="IconFill" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="IconScale" Value="1.5"/>
        <Setter Property="TabStripMode" Value="{Binding TabStripMode, RelativeSource={RelativeSource AncestorType={x:Type se:StswNavigation}}}"/>
        <Setter Property="ItemsIndentation" Value="23"/>

        <Setter Property="Focusable" Value="True"/>
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border BorderBrush="{DynamicResource StswFocusVisual.Static.Border}" BorderThickness="1" CornerRadius="0"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>
        
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswNavigationElement}">
                    <!-- main -->
                    <se:StswBorder x:Name="OPT_MainBorder"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   BorderThickness="{TemplateBinding BorderThickness}"
                                   CornerClipping="{TemplateBinding CornerClipping}"
                                   CornerRadius="{TemplateBinding CornerRadius}"
                                   SnapsToDevicePixels="True">
                        <DockPanel>
                            <!-- button -->
                            <se:StswToggleButton x:Name="OPT_MainButton" DockPanel.Dock="Top"
                                                 se:StswControl.EnableAnimations="False"
                                                 se:StswControl.IsBorderless="True"
                                                 Background="Transparent"
                                                 FocusVisualStyle="{DynamicResource ExpanderHeaderFocusVisual}"
                                                 FontFamily="{TemplateBinding FontFamily}"
                                                 FontSize="{TemplateBinding FontSize}"
                                                 FontStretch="{TemplateBinding FontStretch}"
                                                 FontStyle="{TemplateBinding FontStyle}"
                                                 FontWeight="{TemplateBinding FontWeight}"
                                                 Foreground="{TemplateBinding Foreground}"
                                                 IsChecked="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                 Template="{DynamicResource StswNavigationToggleButtonTemplate}">
                                <DockPanel>
                                    <DockPanel DockPanel.Dock="Right" Visibility="{Binding Visibility, Mode=OneWay, ElementName=OPT_DropArrow}" Width="24">
                                        <se:StswIcon x:Name="OPT_DropArrow" Data="{x:Static se:StswIcons.ChevronDown}" IsRotated="{TemplateBinding IsChecked}"/>
                                    </DockPanel>
                                    <se:StswLabel x:Name="OPT_Header"
                                                  Content="{TemplateBinding Header}"
                                                  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                  IconData="{TemplateBinding IconData}"
                                                  IconFill="{TemplateBinding IconFill}"
                                                  IconScale="{TemplateBinding IconScale}"
                                                  IconSource="{TemplateBinding IconSource}"
                                                  IconStroke="{TemplateBinding IconStroke}"
                                                  IconStrokeThickness="{TemplateBinding IconStrokeThickness}"
                                                  IsBusy="{TemplateBinding IsBusy}"
                                                  SnapsToDevicePixels="True"/>
                                </DockPanel>
                            </se:StswToggleButton>
                            <!-- separator -->
                            <se:StswSeparator x:Name="OPT_Separator"
                                              DockPanel.Dock="Top"
                                              BorderBrush="{Binding BorderBrush, ElementName=OPT_MainBorder}"
                                              BorderThickness="{TemplateBinding SeparatorThickness}"
                                              Orientation="Horizontal"
                                              Visibility="Collapsed"/>
                            <!-- items -->
                            <ItemsPresenter x:Name="OPT_Items"
                                            Focusable="False"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Visibility="Collapsed"/>
                        </DockPanel>
                    </se:StswBorder>
                    <!-- triggers -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasHeader" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource StswNavigationElement.Pressed.Border}" TargetName="OPT_MainBorder"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="OPT_MainButton"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="OPT_Separator"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="OPT_DropArrow"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasItems" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="TabStripMode" Value="Full"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="OPT_Items"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsInCompactPanel" Value="False"/>
                                <Condition Property="TabStripMode" Value="Compact"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="IsContentVisible" Value="False" TargetName="OPT_Header"/>
                            <Setter Property="ToolTip" Value="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}" TargetName="OPT_MainBorder"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center" TargetName="OPT_Header"/>
                            <Setter Property="VerticalContentAlignment" Value="Center" TargetName="OPT_Header"/>
                        </MultiTrigger>
                        <Trigger Property="TabStripMode" Value="Compact">
                            <Setter Property="Padding" Value="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}" TargetName="OPT_MainButton"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="OPT_DropArrow"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="OPT_Items"/>
                        </Trigger>
                        <Trigger Property="TabStripMode" Value="Full">
                            <Setter Property="Padding" Value="{Binding ItemsMargin, RelativeSource={RelativeSource TemplatedParent}}" TargetName="OPT_MainButton"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type se:StswNavigation}}}" Value="Bottom">
                            <Setter Property="DockPanel.Dock" Value="Left" TargetName="OPT_Separator"/>
                            <Setter Property="Orientation" Value="Vertical" TargetName="OPT_Separator"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type se:StswNavigation}}}" Value="Top">
                            <Setter Property="DockPanel.Dock" Value="Left" TargetName="OPT_Separator"/>
                            <Setter Property="Orientation" Value="Vertical" TargetName="OPT_Separator"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>