<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswTreeView}">
        <Setter Property="Background" Value="{DynamicResource StswPanel.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StswPanel.Static.Border}"/>

        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerClipping" Value="False"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="Padding" Value="0"/>

        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>

        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>

        <Setter Property="se:StswScrollView.CanContentScroll" Value="True"/>
        <Setter Property="se:StswScrollView.IsDynamic" Value="True"/>
        <Setter Property="se:StswScrollView.PanningMode" Value="Both"/>
        <Setter Property="se:StswScrollView.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="se:StswScrollView.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswTreeView}">
                    <!-- main -->
                    <se:StswBorder x:Name="OPT_MainBorder"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   BorderThickness="{TemplateBinding BorderThickness}"
                                   CornerClipping="{TemplateBinding CornerClipping}"
                                   CornerRadius="{TemplateBinding CornerRadius}">
                        <se:StswScrollView x:Name="OPT_ScrollView"
                                           AutoScroll="{Binding (se:StswScrollView.AutoScroll), RelativeSource={RelativeSource TemplatedParent}}"
                                           CanContentScroll="{Binding (se:StswScrollView.CanContentScroll), RelativeSource={RelativeSource TemplatedParent}}"
                                           Command="{Binding (se:StswScrollView.Command), RelativeSource={RelativeSource TemplatedParent}}"
                                           CommandParameter="{Binding (se:StswScrollView.CommandParameter), RelativeSource={RelativeSource TemplatedParent}}"
                                           CommandTarget="{Binding (se:StswScrollView.CommandTarget), RelativeSource={RelativeSource TemplatedParent}}"
                                           Focusable="False"
                                           IsBusy="{Binding (se:StswScrollView.IsBusy), RelativeSource={RelativeSource TemplatedParent}}"
                                           IsDynamic="{Binding (se:StswScrollView.IsDynamic), RelativeSource={RelativeSource TemplatedParent}}"
                                           Padding="{TemplateBinding Padding}"
                                           PanningMode="{Binding (se:StswScrollView.PanningMode), RelativeSource={RelativeSource TemplatedParent}}"
                                           HorizontalScrollBarVisibility="{Binding (se:StswScrollView.HorizontalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}"
                                           VerticalScrollBarVisibility="{Binding (se:StswScrollView.VerticalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}">
                            <ItemsPresenter x:Name="OPT_Items"/>
                        </se:StswScrollView>
                    </se:StswBorder>
                    <!-- triggers -->
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </MultiTrigger>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                            <Setter Property="CanContentScroll" Value="True" TargetName="OPT_ScrollView"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Focusable" Value="False" TargetName="OPT_Items"/>
                            <Setter Property="IsHitTestVisible" Value="True" TargetName="OPT_Items"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource StswPanel.Disabled.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswPanel.Disabled.Border}" TargetName="OPT_MainBorder"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type se:StswTreeViewItem}">
        <Setter Property="Background" Value="{DynamicResource StswItem.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StswItem.Static.Border}"/>

        <Setter Property="BorderThickness" Value="{DynamicResource StswItem.Thickness.Border}"/>
        <Setter Property="Padding" Value="4 2"/>

        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswTreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <!-- expander -->
                        <se:StswSubCheck x:Name="OPT_Expander"
                                         Background="{TemplateBinding Background}"
                                         ClickMode="Press"
                                         IconChecked="{x:Static se:StswIcons.MenuDown}"
                                         IconUnchecked="{x:Static se:StswIcons.MenuRight}"
                                         IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                         Padding="3"
                                         HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        <!-- header -->
                        <se:StswBorder x:Name="OPT_MainBorder" Grid.Column="1"
                                       Background="{TemplateBinding Background}"
                                       BorderBrush="{TemplateBinding BorderBrush}"
                                       BorderThickness="{TemplateBinding BorderThickness}"
                                       CornerClipping="{TemplateBinding CornerClipping}"
                                       CornerRadius="{TemplateBinding CornerRadius}">
                            <ContentPresenter ContentSource="Header"
                                              Focusable="False"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </se:StswBorder>
                        <!-- items -->
                        <ItemsPresenter x:Name="OPT_Items" Grid.Column="1" Grid.Row="1"/>
                    </Grid>
                    <!-- triggers -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Visibility" TargetName="OPT_Expander" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter Property="Visibility" TargetName="OPT_Items" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswItem.Checked.Static.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswItem.Checked.Static.Border}" TargetName="OPT_MainBorder"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="OPT_Expander">
                            <Setter Property="Background" Value="{DynamicResource StswItem.MouseOver.Background}" TargetName="OPT_Expander"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="OPT_MainBorder">
                            <Setter Property="Background" Value="{DynamicResource StswItem.MouseOver.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswItem.MouseOver.Border}" TargetName="OPT_MainBorder"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource StswItem.Checked.MouseOver.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswItem.Checked.MouseOver.Border}" TargetName="OPT_MainBorder"/>
                        </MultiTrigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="IsHitTestVisible" Value="True"/>
                            <Setter Property="Background" Value="{DynamicResource StswItem.ReadOnly.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswItem.ReadOnly.Foreground}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsReadOnly" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource StswItem.Checked.ReadOnly.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswItem.Checked.ReadOnly.Foreground}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource StswItem.Disabled.Background}" TargetName="OPT_Expander"/>
                            <Setter Property="Background" Value="{DynamicResource StswItem.Disabled.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswItem.Disabled.Border}" TargetName="OPT_MainBorder"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswItem.Disabled.Foreground}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsEnabled" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource StswItem.Checked.Disabled.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswItem.Checked.Disabled.Border}" TargetName="OPT_MainBorder"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswItem.Checked.Disabled.Foreground}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- triggers -->
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>