<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswScrollBar}">
        <Setter Property="Background" Value="{DynamicResource StswScroll.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StswScroll.Static.Border}"/>

        <Setter Property="BorderThickness" Value="1 0"/>

        <Setter Property="CollapsedWidth" Value="6"/>
        <Setter Property="ExpandedWidth" Value="15"/>
        <Setter Property="IsDynamic" Value="False"/>
        
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="PART_Border" Grid.Row="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"/>
                        <RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" Style="{DynamicResource StswScrollBarButtonStyle}">
                            <se:StswIcon x:Name="ArrowTop" Data="{x:Static se:StswIcons.MenuUp}" Fill="{DynamicResource StswScroll.Static.Glyph}" Scale="1.25"/>
                        </RepeatButton>
                        <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{DynamicResource StswRepeatButtonTransparentStyle}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{DynamicResource StswRepeatButtonTransparentStyle}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource StswScrollBarThumbVerticalStyle}"/>
                            </Track.Thumb>
                        </Track>
                        <RepeatButton x:Name="PART_LineDownButton" Grid.Row="2" Command="{x:Static ScrollBar.LineDownCommand}" Style="{DynamicResource StswScrollBarButtonStyle}">
                            <se:StswIcon x:Name="ArrowBottom" Data="{x:Static se:StswIcons.MenuDown}" Fill="{DynamicResource StswScroll.Static.Glyph}" Scale="1.25"/>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="True"/>
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" Value="{DynamicResource StswScroll.Pressed.Glyph}" TargetName="ArrowBottom"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="True"/>
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" Value="{DynamicResource StswScroll.Pressed.Glyph}" TargetName="ArrowTop"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="True"/>
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" Value="{DynamicResource StswScroll.MouseOver.Glyph}" TargetName="ArrowBottom"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="True"/>
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" Value="{DynamicResource StswScroll.MouseOver.Glyph}" TargetName="ArrowTop"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" Value="{DynamicResource StswScroll.Disabled.Glyph}" TargetName="ArrowTop"/>
                            <Setter Property="Fill" Value="{DynamicResource StswScroll.Disabled.Glyph}" TargetName="ArrowBottom"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="BorderThickness" Value="0 1"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Width" Value="auto"/>
                
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type se:StswScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                </Grid.ColumnDefinitions>
                                <Border x:Name="PART_Border" Grid.Column="1"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"/>
                                <RepeatButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" Style="{DynamicResource StswScrollBarButtonStyle}">
                                    <se:StswIcon x:Name="ArrowLeft" Data="{x:Static se:StswIcons.MenuLeft}" Fill="{DynamicResource StswScroll.Static.Glyph}" Scale="1.25"/>
                                </RepeatButton>
                                <Track x:Name="PART_Track" Grid.Column="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{DynamicResource StswRepeatButtonTransparentStyle}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{DynamicResource StswRepeatButtonTransparentStyle}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{DynamicResource ScrollBarThumbHorizontalStyle}"/>
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" Style="{DynamicResource StswScrollBarButtonStyle}">
                                    <se:StswIcon x:Name="ArrowRight" Data="{x:Static se:StswIcons.MenuRight}" Fill="{DynamicResource StswScroll.Static.Glyph}" Scale="1.25"/>
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="True"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" Value="{DynamicResource StswScroll.Pressed.Glyph}" TargetName="ArrowRight"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="True"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" Value="{DynamicResource StswScroll.Pressed.Glyph}" TargetName="ArrowLeft"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="True"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" Value="{DynamicResource StswScroll.MouseOver.Glyph}" TargetName="ArrowRight"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="True"/>
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" Value="{DynamicResource StswScroll.MouseOver.Glyph}" TargetName="ArrowLeft"/>
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Fill" Value="{DynamicResource StswScroll.Disabled.Glyph}" TargetName="ArrowLeft"/>
                                    <Setter Property="Fill" Value="{DynamicResource StswScroll.Disabled.Glyph}" TargetName="ArrowRight"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- FocusVisual -->
    <Style x:Key="StswScrollBarFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2"
                               SnapsToDevicePixels="True"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeDashArray="1 2"
                               StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- RepeatButton -->
    <Style x:Key="StswRepeatButtonTransparentStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ScrollBarButton -->
    <Style x:Key="StswScrollBarButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource StswScrollBarFocusVisualStyle}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Padding" Value="1"/>
        
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="border"
                            Background="{DynamicResource StswScroll.Static.Background}"
                            BorderBrush="{DynamicResource StswScroll.Static.Border}"
                            BorderThickness="0"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswScroll.MouseOver.Background}" TargetName="border"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswScroll.MouseOver.Border}" TargetName="border"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswScroll.Pressed.Background}" TargetName="border"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswScroll.Pressed.Border}" TargetName="border"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource StswScroll.Disabled.Background}" TargetName="border"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswScroll.Disabled.Border}" TargetName="border"/>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ThumbVertical -->
    <Style x:Key="StswScrollBarThumbVerticalStyle" TargetType="{x:Type Thumb}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="PART_Border"
                            Background="{DynamicResource StswScroll.Static.Thumb}"
                            CornerRadius="{Binding ActualWidth, RelativeSource={RelativeSource Self}, Converter={x:Static se:StswMultiplyConverter.Instance}, ConverterParameter=0.5}"
                            SnapsToDevicePixels="True"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswScroll.MouseOver.Thumb}" TargetName="PART_Border"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswScroll.Pressed.Thumb}" TargetName="PART_Border"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource StswScroll.Disabled.Thumb}" TargetName="PART_Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ThumbHorizontal-->
    <Style x:Key="ScrollBarThumbHorizontalStyle" TargetType="{x:Type Thumb}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="PART_Border"
                            Background="{DynamicResource StswScroll.Static.Thumb}"
                            CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Converter={x:Static se:StswMultiplyConverter.Instance}, ConverterParameter=0.5}"
                            SnapsToDevicePixels="True"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswScroll.MouseOver.Thumb}" TargetName="PART_Border"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswScroll.Pressed.Thumb}" TargetName="PART_Border"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource StswScroll.Disabled.Thumb}" TargetName="PART_Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>