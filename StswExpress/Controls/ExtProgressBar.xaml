<ProgressBar x:Class="StswExpress.ExtProgressBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:se="clr-namespace:StswExpress"
             mc:Ignorable="d" d:DesignHeight="20" d:DesignWidth="200"
             Style="{DynamicResource PgsBarStyle_DarkMode}">
    <ProgressBar.Resources>
        <Style x:Key="PgsBarStyle_DarkMode" TargetType="ProgressBar">
            <Style.Triggers>
                <!-- light theme -->
                <DataTrigger Binding="{Binding Theme, Source={x:Static se:Themes.Default}}" Value="0">
                    <Setter Property="Foreground" Value="#36D04A"/>
                    <Setter Property="Background" Value="#E6E6E6"/>
                    <Setter Property="BorderBrush" Value="#666"/>
                </DataTrigger>
                <!-- dark theme -->
                <DataTrigger Binding="{Binding Theme, Source={x:Static se:Themes.Default}}" Value="1">
                    <Setter Property="Foreground" Value="#06B025"/>
                    <Setter Property="Background" Value="#191919"/>
                    <Setter Property="BorderBrush" Value="#999"/>
                </DataTrigger>
            </Style.Triggers>
            <!-- for all themes -->
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressBar">
                        <Grid x:Name="TemplateRoot">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5 0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5 0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5 0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                            <Rectangle x:Name="PART_Track"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                                <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5 0.5">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                            <Label Padding="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock Visibility="{Binding TextVisibility, RelativeSource={RelativeSource AncestorType=ProgressBar}}">
                                    <Run Text="{Binding Value, RelativeSource={RelativeSource AncestorType=ProgressBar}}" FontWeight="Bold"/>
                                    <Run Text="%"/>
                                </TextBlock>
                            </Label>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="True">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </ProgressBar.Resources>
</ProgressBar>
