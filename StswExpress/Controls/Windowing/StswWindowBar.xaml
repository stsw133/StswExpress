<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswWindowBar}">
        <Setter Property="Background" Value="{DynamicResource StswBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StswBox.Static.Border}"/>

        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerClipping" Value="False"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="Padding" Value="0"/>

        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>

        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswWindowBar}">
                    <!-- main -->
                    <se:StswBorder x:Name="OPT_MainBorder"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   BorderThickness="{TemplateBinding BorderThickness}"
                                   CornerClipping="{TemplateBinding CornerClipping}"
                                   CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid Height="30">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <!-- icon & title -->
                            <se:StswLabel x:Name="OPT_Header"
                                          Content="{Binding Title, RelativeSource={RelativeSource AncestorType={x:Type se:StswWindow}}}"
                                          IconScale="*"
                                          IconSource="{Binding Icon, RelativeSource={RelativeSource AncestorType={x:Type se:StswWindow}}}"
                                          IsHitTestVisible="False"/>
                            <!-- buttons panel -->
                            <DockPanel Grid.Column="1">
                                <DockPanel.Resources>
                                    <SolidColorBrush x:Key="StswButton.Disabled.Background" Color="Transparent"/>
                                    <Style TargetType="{x:Type se:StswOutlinedText}">
                                        <Setter Property="Fill" Value="White"/>
                                        <Setter Property="Stroke" Value="Black"/>
                                        <Setter Property="StrokeThickness" Value="2"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type se:StswWindow}}}" Value="False">
                                                <Setter Property="Fill" Value="{DynamicResource StswWindow.Inactive.Foreground}"/>
                                                <Setter Property="Stroke" Value="Transparent"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DockPanel.Resources>
                                
                                <!-- close -->
                                <se:StswButton x:Name="PART_ButtonClose" DockPanel.Dock="Right" Style="{DynamicResource StswWindowButtonStyle}" ToolTip="{se:StswTranslate StswWindow.Close}">
                                    <se:StswOutlinedText Text="🗙"/>
                                    <se:StswButton.Resources>
                                        <SolidColorBrush x:Key="StswButton.MouseOver.Background" Color="Red"/>
                                        <SolidColorBrush x:Key="StswButton.Pressed.Background" Color="Red"/>
                                    </se:StswButton.Resources>
                                </se:StswButton>
                                <!-- restore -->
                                <se:StswButton x:Name="PART_ButtonRestate" DockPanel.Dock="Right" Style="{DynamicResource StswWindowButtonStyle}" ToolTip="{se:StswTranslate StswWindow.Maximize}">
                                    <se:StswOutlinedText x:Name="OPT_ButtonRestateText" Text="🗖"/>
                                </se:StswButton>
                                <!-- minimize -->
                                <se:StswButton x:Name="PART_ButtonMinimize" DockPanel.Dock="Right" Style="{DynamicResource StswWindowButtonStyle}" ToolTip="{se:StswTranslate StswWindow.Minimize}">
                                    <se:StswOutlinedText Text="🗕"/>
                                </se:StswButton>
                                <!-- custom components -->
                                <ItemsControl IsTabStop="False" ItemsSource="{TemplateBinding Components}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <DockPanel/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </DockPanel>
                        </Grid>
                    </se:StswBorder>
                    <!-- triggers -->
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Icon, RelativeSource={RelativeSource AncestorType={x:Type se:StswWindow}}}" Value="{x:Null}">
                            <Setter Property="Padding" Value="5 0 0 0" TargetName="OPT_Header"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type se:StswWindow}}}" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource StswWindow.Inactive.Border}" TargetName="OPT_MainBorder"/>
                            <Setter Property="Foreground" Value="{DynamicResource StswWindow.Inactive.Foreground}" TargetName="OPT_Header"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource AncestorType={x:Type se:StswWindow}}}" Value="NoResize">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_ButtonMinimize"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_ButtonRestate"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource AncestorType={x:Type se:StswWindow}}}" Value="CanMinimize">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_ButtonRestate"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type se:StswWindow}}}" Value="Maximized">
                            <Setter Property="Text" Value="🗗" TargetName="OPT_ButtonRestateText"/>
                            <Setter Property="ToolTip" Value="{se:StswTranslate StswWindow.Restore}" TargetName="PART_ButtonRestate"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Fullscreen, RelativeSource={RelativeSource AncestorType={x:Type se:StswWindow}}}" Value="True">
                            <Setter Property="Text" Value="⛶" TargetName="OPT_ButtonRestateText"/>
                            <Setter Property="ToolTip" Value="{se:StswTranslate StswWindow.DisableFullscreen}" TargetName="PART_ButtonRestate"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContextMenu">
            <Setter.Value>
                <se:StswContextMenu Placement="MousePoint">
                    <!-- config -->
                    <se:StswMenuItem x:Name="PART_iConfig"
                                     Header="{se:StswTranslate StswWindow.Config}"
                                     IconData="{x:Static se:StswIcons.Cog}"/>
                    <se:StswSeparator x:Name="PART_MenuConfigSeparator"/>
                    <!-- default -->
                    <se:StswMenuItem x:Name="PART_MenuDefault"
                                     Header="{se:StswTranslate StswWindow.DefaultSize}"
                                     IconData="{x:Static se:StswIcons.Resize}"/>
                    <!-- minimize -->
                    <se:StswMenuItem x:Name="PART_MenuMinimize"
                                     Header="{se:StswTranslate StswWindow.Minimize}"
                                     IconData="{x:Static se:StswIcons.WindowMinimize}"/>
                    <!-- maximize -->
                    <se:StswMenuItem x:Name="PART_MenuMaximize"
                                     Header="{se:StswTranslate StswWindow.Maximize}"
                                     IconData="{x:Static se:StswIcons.WindowMaximize}"/>
                    <!-- restore -->
                    <se:StswMenuItem x:Name="PART_MenuRestore"
                                     Header="{se:StswTranslate StswWindow.Restore}"
                                     IconData="{x:Static se:StswIcons.WindowRestore}"/>
                    <!-- fullscreen -->
                    <se:StswMenuItem x:Name="PART_MenuFullscreen"
                                     Header="{se:StswTranslate StswWindow.Fullscreen}"
                                     IconData="{x:Static se:StswIcons.Fullscreen}"
                                     InputGestureText="F11"/>
                    <!-- fullscreen exit -->
                    <se:StswMenuItem x:Name="PART_MenuFullscreenExit"
                                     Header="{se:StswTranslate StswWindow.FullscreenExit}"
                                     IconData="{x:Static se:StswIcons.FullscreenExit}"
                                     InputGestureText="F11"/>
                    <!-- close -->
                    <se:StswSeparator x:Name="PART_MenuCloseSeparator"/>
                    <se:StswMenuItem x:Name="PART_MenuClose"
                                     Header="{se:StswTranslate StswWindow.Close}"
                                     IconData="{x:Static se:StswIcons.WindowClose}"
                                     IconFill="{DynamicResource StswColor.Negative}"
                                     InputGestureText="Alt + F4"/>
                </se:StswContextMenu>
            </Setter.Value>
        </Setter>
    </Style>

    
    
    <!-- StswWindowButton -->
    <Style x:Key="StswWindowButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="se:StswControl.IsBorderless" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Width" Value="45"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
    </Style>
    
</ResourceDictionary>