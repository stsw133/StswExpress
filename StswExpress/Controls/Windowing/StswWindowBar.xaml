<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswWindowBar}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>

        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerClipping" Value="False"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="Padding" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswWindowBar}">
                    <!-- main -->
                    <se:StswBorder x:Name="OPT_MainBorder"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   BorderThickness="{TemplateBinding BorderThickness}"
                                   CornerClipping="{TemplateBinding CornerClipping}"
                                   CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid Height="30">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <!-- icon & title -->
                            <se:StswLabel x:Name="OPT_Header"
                                          Grid.ColumnSpan="2"
                                          Content="{Binding Title, RelativeSource={RelativeSource AncestorType={x:Type se:StswWindow}}}"
                                          IconScale="*"
                                          IconSource="{Binding Icon, RelativeSource={RelativeSource AncestorType={x:Type se:StswWindow}}}"/>
                            <!-- buttons panel -->
                            <StackPanel Grid.Column="1" Orientation="Horizontal">
                                <ItemsControl IsTabStop="False" ItemsSource="{TemplateBinding Components}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                                <se:StswButton x:Name="PART_ButtonMinimize" Style="{DynamicResource StswWindowButtonStyle}" ToolTip="{se:Tr StswWindow.Minimize}">
                                    <se:StswOutlinedText Text="🗕"/>
                                </se:StswButton>
                                <se:StswButton x:Name="PART_ButtonRestore" Style="{DynamicResource StswWindowButtonStyle}" ToolTip="{se:Tr StswWindow.Maximize}">
                                    <se:StswOutlinedText x:Name="OPT_ButtonRestoreText" Text="🗖"/>
                                </se:StswButton>
                                <se:StswButton x:Name="PART_ButtonClose" Style="{DynamicResource StswWindowButtonStyle}" ToolTip="{se:Tr StswWindow.Close}">
                                    <se:StswOutlinedText Text="🗙"/>
                                    <se:StswButton.Resources>
                                        <SolidColorBrush x:Key="StswButton.MouseOver.Background" Color="Red"/>
                                        <SolidColorBrush x:Key="StswButton.Pressed.Background" Color="Red"/>
                                    </se:StswButton.Resources>
                                </se:StswButton>

                                <StackPanel.Resources>
                                    <SolidColorBrush x:Key="StswButton.Disabled.Background" Color="Transparent"/>
                                    
                                    <Style TargetType="{x:Type se:StswOutlinedText}">
                                        <Setter Property="Fill" Value="White"/>
                                        <Setter Property="Stroke" Value="Black"/>
                                        <Setter Property="StrokeThickness" Value="2"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type se:StswWindow}}}" Value="False">
                                                <Setter Property="Fill" Value="{DynamicResource StswWindow.Inactive.Foreground}"/>
                                                <Setter Property="Stroke" Value="Transparent"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Resources>
                            </StackPanel>
                        </Grid>
                    </se:StswBorder>
                    <!-- triggers -->
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Icon, RelativeSource={RelativeSource AncestorType={x:Type se:StswWindow}}}" Value="{x:Null}">
                            <Setter Property="Padding" Value="5 0 0 0" TargetName="OPT_Header"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type se:StswWindow}}}" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource StswWindow.Inactive.Border}" TargetName="OPT_MainBorder"/>
                            <Setter Property="Foreground" Value="{DynamicResource StswWindow.Inactive.Foreground}" TargetName="OPT_Header"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource AncestorType={x:Type se:StswWindow}}}" Value="NoResize">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_ButtonMinimize"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_ButtonRestore"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ResizeMode, RelativeSource={RelativeSource AncestorType={x:Type se:StswWindow}}}" Value="CanMinimize">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_ButtonRestore"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type se:StswWindow}}}" Value="Maximized">
                            <Setter Property="Text" Value="🗗" TargetName="OPT_ButtonRestoreText"/>
                            <Setter Property="ToolTip" Value="{se:Tr StswWindow.Restore}" TargetName="PART_ButtonRestore"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Fullscreen, RelativeSource={RelativeSource AncestorType={x:Type se:StswWindow}}}" Value="True">
                            <Setter Property="Text" Value="⛶" TargetName="OPT_ButtonRestoreText"/>
                            <Setter Property="ToolTip" Value="{se:Tr StswWindow.DisableFullscreen}" TargetName="PART_ButtonRestore"/>
                            <!-- <Setter Property="Visibility" Value="Collapsed" TargetName="OPT_Header"/> -->
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    
    <!-- StswWindowButton -->
    <Style x:Key="StswWindowButtonStyle" TargetType="{x:Type se:StswButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Width" Value="45"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
    </Style>

</ResourceDictionary>