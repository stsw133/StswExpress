<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswDropButton}">

        <Setter Property="Background" Value="{DynamicResource StswButton.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Static.Border}"/>

        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="PopupBorderThickness" Value="2"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="3"/>

        <Setter Property="ComponentsAlignment" Value="Right"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswDropButton}">
                    <se:StswToggleButton x:Name="PART_MainButton"
                                         Background="{TemplateBinding Background}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         ClickMode="Press"
                                         CornerRadius="{TemplateBinding CornerRadius}"
                                         IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                         Padding="0"
                                         HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                         VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                        <DockPanel>
                            <!-- arrow -->
                            <ContentControl DockPanel.Dock="{TemplateBinding ComponentsAlignment}" Focusable="False" Width="24" Visibility="{TemplateBinding ArrowVisibility}">
                                <se:StswIcon Data="{x:Static se:StswIcons.MenuDown}" Scale="1.5"/>
                            </ContentControl>
                            <!-- components -->
                            <ItemsControl DockPanel.Dock="{TemplateBinding ComponentsAlignment}" IsTabStop="False" ItemsSource="{TemplateBinding Components}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                            <!-- popup -->
                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="True"
                                   DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"
                                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Bottom"
                                   PlacementTarget="{Binding ElementName=PART_MainButton}"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                   StaysOpen="False">
                                <se:ClippingBorder Background="{DynamicResource StswPopup.Static.Background}"
                                                   BorderBrush="{DynamicResource StswPopup.Static.Border}"
                                                   BorderThickness="{TemplateBinding PopupBorderThickness}"
                                                   CornerRadius="{TemplateBinding CornerRadius}"
                                                   MinWidth="{Binding ActualWidth, ElementName=PART_MainButton}">
                                    <ScrollViewer Focusable="False" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                                        <ItemsControl x:Name="PART_Items" Focusable="False" ItemsSource="{TemplateBinding Items}"/>
                                    </ScrollViewer>
                                </se:ClippingBorder>
                            </Popup>
                            <!-- content -->
                            <ContentPresenter Content="{TemplateBinding Header}"
                                              Focusable="False"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </se:StswToggleButton>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswButton.MouseOver.Background}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource StswButton.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswButton.Checked.Background}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Checked.Border}" />
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswButton.Checked.Background}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Checked.Border}" />
                        </Trigger>
                        <Trigger Property="Button.IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Defaulted.Border}" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource StswButton.Disabled.Foreground}" />
                            <Setter Property="IsEnabled" Value="False" TargetName="PART_Items" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource StswButton.Disabled.Background}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Disabled.Border}" />
                            <Setter Property="Foreground" Value="{DynamicResource StswButton.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>