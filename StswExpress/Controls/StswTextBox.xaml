<se:StswTextBoxBase x:Class="StswExpress.StswTextBox"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:se="clr-namespace:StswExpress"
                    mc:Ignorable="d">

    <se:StswTextBoxBase.Template>
        <ControlTemplate TargetType="{x:Type se:StswTextBoxBase}">
            <Border x:Name="PART_MainBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding CornerRadius}"
                    SnapsToDevicePixels="True">
                <Grid>
                    <TextBlock IsHitTestVisible="False"
                               Foreground="{TemplateBinding ForegroundPlaceholder}"
                               Margin="{TemplateBinding Padding}"
                               Text="{TemplateBinding Placeholder}"
                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                               Visibility="{Binding Text, RelativeSource={RelativeSource AncestorType={x:Type se:StswTextBoxBase}}, Converter={se:conv_Compare}, ConverterParameter={x:Null}, UpdateSourceTrigger=PropertyChanged}" />
                    <ScrollViewer x:Name="PART_ContentHost" 
                                  Focusable="False" 
                                  HorizontalScrollBarVisibility="Hidden" 
                                  VerticalScrollBarVisibility="Hidden"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{Binding BackgroundMouseOver, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainBorder" />
                    <Setter Property="BorderBrush" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainBorder" />
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="Background" Value="{Binding BackgroundFocused, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainBorder" />
                    <Setter Property="BorderBrush" Value="{Binding BorderBrushFocused, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainBorder" />
                </Trigger>
                <Trigger Property="IsReadOnly" Value="True">
                    <Setter Property="Background" Value="{Binding BackgroundReadOnly, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainBorder" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{Binding BackgroundDisabled, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainBorder" />
                    <Setter Property="BorderBrush" Value="{Binding BorderBrushDisabled, RelativeSource={RelativeSource TemplatedParent}}" TargetName="PART_MainBorder" />
                    <Setter Property="Foreground" Value="{Binding ForegroundDisabled, RelativeSource={RelativeSource Self}}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </se:StswTextBoxBase.Template>
    <!--
    <Validation.ErrorTemplate>
        <ControlTemplate>
            <DockPanel>
                <Border x:Name="border"
                        Background="Transparent"
                        BorderBrush="Red"
                        BorderThickness="1"
                        CornerRadius="0"
                        SnapsToDevicePixels="True"
                        IsHitTestVisible="False">
                    <AdornedElementPlaceholder x:Name="ErrorAdorner"/>
                </Border>
            </DockPanel>
        </ControlTemplate>
    </Validation.ErrorTemplate>
    -->
</se:StswTextBoxBase>