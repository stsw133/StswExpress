<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswFilter}">
        <Setter Property="Background" Value="{DynamicResource StswButton.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Static.Border}"/>
        
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="SeparatorThickness" Value="2"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Padding" Value="3"/>
        
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswFilter}">
                    <DockPanel>

                        <!-- filter -->
                        <se:StswClippingBorder x:Name="PART_MainBorder" DockPanel.Dock="Bottom"
                                               BorderBrush="{TemplateBinding BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               CornerRadius="{TemplateBinding CornerRadius}"
                                               Margin="0 3 0 0"
                                               SnapsToDevicePixels="True"
                                               Visibility="{TemplateBinding FilterVisibility}">
                            <DockPanel>
                                <!-- filter mode -->
                                <se:StswToggleButton x:Name="PART_FilterMode"
                                                     BorderThickness="0" CornerRadius="0" FontSize="15" Padding="0" Width="24"
                                                     IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                     Visibility="{TemplateBinding FilterModeVisibility}">
                                    <se:StswOutlinedText Stroke="Black" StrokeThickness="2"/>
                                    <se:StswToggleButton.ContextMenu>
                                        <ContextMenu DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}"
                                                     IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">

                                            <MenuItem x:Name="PART_ModeEqual" Header="Jest równe" Visibility="Collapsed"
                                                      Command="{Binding SelectModeCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static se:StswFilterMode.Equal}">
                                                <MenuItem.Icon>
                                                    <se:StswOutlinedText Text="=" Fill="White" Stroke="Black" StrokeThickness="2"/>
                                                </MenuItem.Icon>
                                            </MenuItem>

                                            <MenuItem x:Name="PART_ModeNotEqual" Header="Nie jest równe" Visibility="Collapsed"
                                                      Command="{Binding SelectModeCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static se:StswFilterMode.NotEqual}">
                                                <MenuItem.Icon>
                                                    <se:StswOutlinedText Text="≠" Fill="White" Stroke="Black" StrokeThickness="2"/>
                                                </MenuItem.Icon>
                                            </MenuItem>

                                            <MenuItem x:Name="PART_ModeGreater" Header="Jest większe niż" Visibility="Collapsed"
                                                      Command="{Binding SelectModeCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static se:StswFilterMode.Greater}">
                                                <MenuItem.Icon>
                                                    <se:StswOutlinedText Text="&#62;" Fill="White" Stroke="Black" StrokeThickness="2"/>
                                                </MenuItem.Icon>
                                            </MenuItem>

                                            <MenuItem x:Name="PART_ModeGreaterEqual" Header="Jest większe lub równe" Visibility="Collapsed"
                                                      Command="{Binding SelectModeCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static se:StswFilterMode.GreaterEqual}">
                                                <MenuItem.Icon>
                                                    <se:StswOutlinedText Text="≥" Fill="White" Stroke="Black" StrokeThickness="2"/>
                                                </MenuItem.Icon>
                                            </MenuItem>

                                            <MenuItem x:Name="PART_ModeLess" Header="Jest mniejsze niż" Visibility="Collapsed"
                                                      Command="{Binding SelectModeCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static se:StswFilterMode.Less}">
                                                <MenuItem.Icon>
                                                    <se:StswOutlinedText Text="&#60;" Fill="White" Stroke="Black" StrokeThickness="2"/>
                                                </MenuItem.Icon>
                                            </MenuItem>

                                            <MenuItem x:Name="PART_ModeLessEqual" Header="Jest mniejsze lub równe" Visibility="Collapsed"
                                                      Command="{Binding SelectModeCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static se:StswFilterMode.LessEqual}">
                                                <MenuItem.Icon>
                                                    <se:StswOutlinedText Text="≤" Fill="White" Stroke="Black" StrokeThickness="2"/>
                                                </MenuItem.Icon>
                                            </MenuItem>

                                            <MenuItem x:Name="PART_ModeBetween" Header="Pomiędzy" Visibility="Collapsed"
                                                      Command="{Binding SelectModeCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static se:StswFilterMode.Between}">
                                                <MenuItem.Icon>
                                                    <se:StswOutlinedText Text="≷" Fill="White" Stroke="Black" StrokeThickness="2"/>
                                                </MenuItem.Icon>
                                            </MenuItem>

                                            <MenuItem x:Name="PART_ModeContains" Header="Zawiera" Visibility="Collapsed"
                                                      Command="{Binding SelectModeCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static se:StswFilterMode.Contains}">
                                                <MenuItem.Icon>
                                                    <se:StswOutlinedText Text="⊇" Fill="#4D4" Stroke="Black" StrokeThickness="2"/>
                                                </MenuItem.Icon>
                                            </MenuItem>

                                            <MenuItem x:Name="PART_ModeNotContains" Header="Nie zawiera" Visibility="Collapsed"
                                                      Command="{Binding SelectModeCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static se:StswFilterMode.NotContains}">
                                                <MenuItem.Icon>
                                                    <se:StswOutlinedText Text="⊉" Fill="#D54" Stroke="Black" StrokeThickness="2"/>
                                                </MenuItem.Icon>
                                            </MenuItem>

                                            <MenuItem x:Name="PART_ModeLike" Header="Podobne do" Visibility="Collapsed"
                                                      Command="{Binding SelectModeCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static se:StswFilterMode.Like}">
                                                <MenuItem.Icon>
                                                    <se:StswOutlinedText Text="%" Fill="#4D4" Stroke="Black" StrokeThickness="2"/>
                                                </MenuItem.Icon>
                                            </MenuItem>

                                            <MenuItem x:Name="PART_ModeNotLike" Header="Nie jest podobne do" Visibility="Collapsed"
                                                      Command="{Binding SelectModeCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static se:StswFilterMode.NotLike}">
                                                <MenuItem.Icon>
                                                    <se:StswOutlinedText Text="%" Fill="#D54" Stroke="Black" StrokeThickness="2"/>
                                                </MenuItem.Icon>
                                            </MenuItem>

                                            <MenuItem x:Name="PART_ModeStartsWith" Header="Rozpoczyna się od" Visibility="Collapsed"
                                                      Command="{Binding SelectModeCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static se:StswFilterMode.StartsWith}">
                                                <MenuItem.Icon>
                                                    <se:StswOutlinedText Text="⟝" Fill="#48D" Stroke="Black" StrokeThickness="2"/>
                                                </MenuItem.Icon>
                                            </MenuItem>

                                            <MenuItem x:Name="PART_ModeEndsWith" Header="Kończy się na" Visibility="Collapsed"
                                                      Command="{Binding SelectModeCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static se:StswFilterMode.EndsWith}">
                                                <MenuItem.Icon>
                                                    <se:StswOutlinedText Text="⟞" Fill="#48D" Stroke="Black" StrokeThickness="2"/>
                                                </MenuItem.Icon>
                                            </MenuItem>

                                            <MenuItem x:Name="PART_ModeIn" Header="Zawiera listę" Visibility="Collapsed"
                                                      Command="{Binding SelectModeCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static se:StswFilterMode.In}">
                                                <MenuItem.Icon>
                                                    <se:StswOutlinedText Text="◐" Fill="#4D4" Stroke="Black" StrokeThickness="2"/>
                                                </MenuItem.Icon>
                                            </MenuItem>

                                            <MenuItem x:Name="PART_ModeNotIn" Header="Nie zawiera listy" Visibility="Collapsed"
                                                      Command="{Binding SelectModeCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static se:StswFilterMode.NotIn}">
                                                <MenuItem.Icon>
                                                    <se:StswOutlinedText Text="◐" Fill="#D54" Stroke="Black" StrokeThickness="2"/>
                                                </MenuItem.Icon>
                                            </MenuItem>

                                            <MenuItem x:Name="PART_ModeNull" Header="Puste" Visibility="Collapsed"
                                                      Command="{Binding SelectModeCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static se:StswFilterMode.Null}">
                                                <MenuItem.Icon>
                                                    <se:StswOutlinedText Text="○" Fill="White" Stroke="Black" StrokeThickness="2"/>
                                                </MenuItem.Icon>
                                            </MenuItem>

                                            <MenuItem x:Name="PART_ModeNotNull" Header="Niepuste" Visibility="Collapsed"
                                                      Command="{Binding SelectModeCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static se:StswFilterMode.NotNull}">
                                                <MenuItem.Icon>
                                                    <se:StswOutlinedText Text="⬤" Fill="#48D" Stroke="Black" StrokeThickness="2"/>
                                                </MenuItem.Icon>
                                            </MenuItem>

                                        </ContextMenu>
                                    </se:StswToggleButton.ContextMenu>
                                </se:StswToggleButton>
                                <!-- separator -->
                                <se:StswSeparator x:Name="PART_Separator"
                                                  BorderBrush="{Binding BorderBrush, ElementName=PART_MainBorder}"
                                                  BorderThickness="{TemplateBinding SeparatorThickness}"
                                                  Orientation="Vertical"
                                                  Visibility="{TemplateBinding FilterModeVisibility}"/>
                                <!-- controls -->
                                <UniformGrid x:Name="PART_Controls" Columns="1" Background="{DynamicResource StswBox.Static.Background}">
                                    <!-- first control -->
                                    <ContentControl x:Name="PART_FirstControl">
                                        <ContentControl.Style>
                                            <Style TargetType="{x:Type ContentControl}">
                                                <Style.Triggers>
                                                    <!-- StswCheckBox -->
                                                    <DataTrigger Binding="{Binding FilterType, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}" Value="Check">
                                                        <Setter Property="ContentTemplate">
                                                            <Setter.Value>
                                                                <DataTemplate>
                                                                    <se:StswCheckBox BorderBrush="{Binding BorderBrush, ElementName=PART_MainBorder}"
                                                                                     BorderThickness="0" CornerRadius="0" Padding="{Binding Padding, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}"
                                                                                     IconIndeterminate="{x:Static se:StswIcons.DotsHorizontal}"
                                                                                     IsChecked="{Binding Value1, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}"
                                                                                     IsThreeState="True">
                                                                        <se:StswCheckBox.Style>
                                                                            <Style TargetType="{x:Type se:StswCheckBox}">
                                                                                <Style.Triggers>
                                                                                    <Trigger Property="IsChecked" Value="{x:Null}">
                                                                                        <Setter Property="GlyphBrush" Value="{DynamicResource StswBox.Placeholder.Foreground}"/>
                                                                                    </Trigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </se:StswCheckBox.Style>
                                                                    </se:StswCheckBox>
                                                                </DataTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <!-- StswDatePicker -->
                                                    <DataTrigger Binding="{Binding FilterType, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}" Value="Date">
                                                        <Setter Property="ContentTemplate">
                                                            <Setter.Value>
                                                                <DataTemplate>
                                                                    <se:StswDatePicker BorderBrush="{Binding BorderBrush, ElementName=PART_MainBorder}"
                                                                                       BorderThickness="0" CornerRadius="0" Padding="{Binding Padding, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}"
                                                                                       Placeholder=" . . . "
                                                                                       SelectedDate="{Binding Value1, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}"/>
                                                                </DataTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <!-- StswSelectionBox -->
                                                    <DataTrigger Binding="{Binding FilterType, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}" Value="List">
                                                        <Setter Property="ContentTemplate">
                                                            <Setter.Value>
                                                                <DataTemplate>
                                                                    <se:StswSelectionBox BorderBrush="{Binding BorderBrush, ElementName=PART_MainBorder}"
                                                                                         BorderThickness="0" CornerRadius="0" Padding="{Binding Padding, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}"
                                                                                         Placeholder=" . . . "
                                                                                         ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}"
                                                                                         DisplayMemberPath="{Binding DisplayMemberPath, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}"
                                                                                         SelectedValuePath="{Binding SelectedValuePath, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}"
                                                                                         Text="{Binding Value1, Mode=OneWayToSource, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}"/>
                                                                </DataTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <!-- StswNumericBox -->
                                                    <DataTrigger Binding="{Binding FilterType, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}" Value="Number">
                                                        <Setter Property="ContentTemplate">
                                                            <Setter.Value>
                                                                <DataTemplate>
                                                                    <se:StswNumericBox BorderBrush="{Binding BorderBrush, ElementName=PART_MainBorder}"
                                                                                       BorderThickness="0" CornerRadius="0" Padding="{Binding Padding, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}"
                                                                                       Placeholder=" . . . "
                                                                                       Value="{Binding Value1, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}"/>
                                                                </DataTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <!-- StswTextBox -->
                                                    <DataTrigger Binding="{Binding FilterType, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}" Value="Text">
                                                        <Setter Property="ContentTemplate">
                                                            <Setter.Value>
                                                                <DataTemplate>
                                                                    <se:StswTextBox BorderBrush="{Binding BorderBrush, ElementName=PART_MainBorder}"
                                                                                    BorderThickness="0" CornerRadius="0" Padding="{Binding Padding, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}"
                                                                                    Placeholder=" . . . "
                                                                                    Text="{Binding Value1, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}"/>
                                                                </DataTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                    <!-- second control -->
                                    <ContentControl x:Name="PART_SecondControl" Visibility="Collapsed">
                                        <ContentControl.Style>
                                            <Style TargetType="{x:Type ContentControl}">
                                                <Style.Triggers>
                                                    <!-- StswDatePicker -->
                                                    <DataTrigger Binding="{Binding FilterType, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}" Value="Date">
                                                        <Setter Property="ContentTemplate">
                                                            <Setter.Value>
                                                                <DataTemplate>
                                                                    <se:StswDatePicker BorderBrush="{Binding BorderBrush, ElementName=PART_MainBorder}"
                                                                                       BorderThickness="0" CornerRadius="0" Padding="{Binding Padding, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}"
                                                                                       Placeholder=" . . . "
                                                                                       SelectedDate="{Binding Value2, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}"/>
                                                                </DataTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <!-- StswNumericBox -->
                                                    <DataTrigger Binding="{Binding FilterType, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}" Value="Number">
                                                        <Setter Property="ContentTemplate">
                                                            <Setter.Value>
                                                                <DataTemplate>
                                                                    <se:StswNumericBox BorderBrush="{Binding BorderBrush, ElementName=PART_MainBorder}"
                                                                                       BorderThickness="0" CornerRadius="0" Padding="{Binding Padding, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}"
                                                                                       Placeholder=" . . . "
                                                                                       Value="{Binding Value2, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}"/>
                                                                </DataTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <!-- StswTextBox -->
                                                    <DataTrigger Binding="{Binding FilterType, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}" Value="Text">
                                                        <Setter Property="ContentTemplate">
                                                            <Setter.Value>
                                                                <DataTemplate>
                                                                    <se:StswTextBox BorderBrush="{Binding BorderBrush, ElementName=PART_MainBorder}"
                                                                                    BorderThickness="0" CornerRadius="0" Padding="{Binding Padding, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}"
                                                                                    Placeholder=" . . . "
                                                                                    Text="{Binding Value2, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type se:StswFilter}}}"/>
                                                                </DataTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                </UniformGrid>
                            </DockPanel>
                        </se:StswClippingBorder>
                        <!-- header -->
                        <ContentPresenter Content="{TemplateBinding Header}" Focusable="False"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="FilterType" Value="Check">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeEqual"/>
                        </Trigger>
                        <Trigger Property="FilterType" Value="Date">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeEqual"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeNotEqual"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeGreater"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeGreaterEqual"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeLess"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeLessEqual"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeBetween"/>
                        </Trigger>
                        <Trigger Property="FilterType" Value="List">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeIn"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeNotIn"/>
                        </Trigger>
                        <Trigger Property="FilterType" Value="Number">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeEqual"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeNotEqual"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeGreater"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeGreaterEqual"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeLess"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeLessEqual"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeBetween"/>
                        </Trigger>
                        <Trigger Property="FilterType" Value="Text">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeEqual"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeNotEqual"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeBetween"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeContains"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeNotContains"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeLike"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeNotLike"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeStartsWith"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeEndsWith"/>
                        </Trigger>
                        <Trigger Property="IsFilterNullSensitive" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeNull"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ModeNotNull"/>
                        </Trigger>
                        <Trigger Property="FilterMode" Value="Between">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_SecondControl"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsInDataGrid, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding AreFiltersVisible, RelativeSource={RelativeSource AncestorType={x:Type se:StswDataGrid}}}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_MainBorder"/>
                        </MultiDataTrigger>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter Property="Margin" Value="0" TargetName="PART_MainBorder"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswButton.MouseOver.Background}" TargetName="PART_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswButton.MouseOver.Border}" TargetName="PART_MainBorder"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswButton.Pressed.Background}" TargetName="PART_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Pressed.Border}" TargetName="PART_MainBorder"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswButton.Pressed.Background}" TargetName="PART_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Pressed.Border}" TargetName="PART_MainBorder"/>
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswButton.Pressed.Background}" TargetName="PART_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Pressed.Border}" TargetName="PART_MainBorder"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource StswButton.Disabled.Background}" TargetName="PART_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswButton.Disabled.Border}" TargetName="PART_MainBorder"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>