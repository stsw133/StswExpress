<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswPathPicker}">
        <Setter Property="IsShiftingEnabled" Value="False"/>
        <Setter Property="SelectionUnit" Value="OpenFile"/>
        <Setter Property="Text" Value="{Binding SelectedPath, RelativeSource={RelativeSource Self}, TargetNullValue='', UpdateSourceTrigger=LostFocus}"/>

        <Setter Property="Background" Value="{DynamicResource StswBox.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StswBox.Static.Border}"/>
        
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerClipping" Value="True"/>
        <Setter Property="CornerRadius" Value="6"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="SeparatorThickness" Value="2"/>

        <Setter Property="Errors" Value="{Binding (Validation.Errors), RelativeSource={RelativeSource Self}}"/>
        <Setter Property="HasError" Value="{Binding (Validation.HasError), RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>

        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        
        <Setter Property="se:StswFocusVisual.Assign" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswPathPicker}">
                    <!-- main -->
                    <se:StswBorder x:Name="OPT_MainBorder"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   BorderThickness="{TemplateBinding BorderThickness}"
                                   CornerClipping="{TemplateBinding CornerClipping}"
                                   CornerRadius="{TemplateBinding CornerRadius}">
                        <DockPanel>
                            <!-- icon section -->
                            <ContentPresenter ContentSource="Icon" Focusable="False" IsHitTestVisible="False"/>
                            <!-- buttons -->
                            <se:StswButton x:Name="PART_DialogButton" DockPanel.Dock="Right"
                                           Focusable="True" Padding="0" Width="24"
                                           se:StswControl.IsBorderless="True">
                                <se:StswIcon Data="{x:Static se:StswIcons.FolderOpen}"/>
                            </se:StswButton>
                            <!-- separator -->
                            <se:StswSeparator DockPanel.Dock="Right"
                                              BorderBrush="{Binding BorderBrush, ElementName=OPT_MainBorder}"
                                              BorderThickness="{TemplateBinding SeparatorThickness}"
                                              Orientation="Vertical"
                                              Template="{DynamicResource StswSeparatorEnabledTemplate}"/>
                            <!-- sub controls -->
                            <ItemsControl x:Name="OPT_SubControls" DockPanel.Dock="Right"
                                          IsTabStop="False"
                                          ItemsSource="{TemplateBinding SubControls}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                            <!-- error -->
                            <se:StswSubError x:Name="OPT_Error" DockPanel.Dock="Right" Errors="{TemplateBinding Errors}" HasError="{TemplateBinding HasError}"/>
                            <!-- content -->
                            <DockPanel>
                                <se:StswImage x:Name="OPT_Icon"
                                              Margin="{TemplateBinding Padding, Converter={x:Static se:StswCalculateConverter.Instance}, ConverterParameter='*1 1 0 1'}"
                                              MenuMode="Disabled"
                                              Source="{Binding SelectedPath, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static se:StswPathToIconConverter.Instance}}"
                                              Height="16" Width="16"/>
                                <se:StswLabel x:Name="OPT_FileSize"
                                              Content="{TemplateBinding FileSize}"
                                              FontWeight="Bold"
                                              Opacity="0.6"
                                              Padding="{TemplateBinding Padding, Converter={x:Static se:StswCalculateConverter.Instance}, ConverterParameter='*1 1 0 1'}"
                                              HorizontalContentAlignment="Center"
                                              VerticalContentAlignment="Center"
                                              Width="48">
                                    <se:StswLabel.LayoutTransform>
                                        <ScaleTransform ScaleX="0.75" ScaleY="0.75"/>
                                    </se:StswLabel.LayoutTransform>
                                </se:StswLabel>
                                <se:StswSeparator x:Name="OPT_IconSeparator"
                                                  BorderBrush="{Binding BorderBrush, ElementName=OPT_MainBorder}"
                                                  BorderThickness="{TemplateBinding SeparatorThickness}"
                                                  Margin="{TemplateBinding Padding, Converter={x:Static se:StswCalculateConverter.Instance}, ConverterParameter='*1 1 0 1'}"
                                                  Orientation="Vertical"
                                                  Template="{DynamicResource StswSeparatorEnabledTemplate}"/>
                                <Grid>
                                    <se:StswText x:Name="OPT_Placeholder"
                                                 Foreground="{DynamicResource StswBox.Placeholder.Foreground}"
                                                 IsHitTestVisible="False"
                                                 Margin="{TemplateBinding Padding}"
                                                 Padding="2 0 0 0"
                                                 Text="{TemplateBinding Placeholder}"
                                                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                 Visibility="Collapsed"/>
                                    <se:StswScrollView x:Name="PART_ContentHost"
                                                       DynamicMode="Partial"
                                                       Focusable="False"
                                                       HorizontalScrollBarVisibility="Hidden"
                                                       VerticalScrollBarVisibility="Hidden"/>
                                    <se:StswDropButton x:Name="OPT_Items"
                                                       ItemsSource="{Binding SelectedPaths, RelativeSource={RelativeSource TemplatedParent}}"
                                                       Visibility="Collapsed"
                                                       se:StswControl.IsBorderless="True">
                                        <se:StswDropButton.Header>
                                            <se:StswText>
                                                <Run Text="{Binding SelectedPaths.Length, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type se:StswPathPicker}}}" FontWeight="Medium"/>
                                                <Run Text="{se:StswTranslate StswPathPicker.SelectedPaths}"/>
                                            </se:StswText>
                                        </se:StswDropButton.Header>
                                        <se:StswDropButton.ItemTemplate>
                                            <DataTemplate>
                                                <se:StswLabel IconSource="{Binding Converter={x:Static se:StswPathToIconConverter.Instance}}">
                                                    <se:StswText Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType={x:Type se:StswPathPicker}}}"
                                                                 Text="{Binding}"
                                                                 TextTrimming="CharacterEllipsis"/>
                                                </se:StswLabel>
                                            </DataTemplate>
                                        </se:StswDropButton.ItemTemplate>
                                    </se:StswDropButton>
                                </Grid>
                            </DockPanel>
                        </DockPanel>
                    </se:StswBorder>
                    <!-- triggers -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="FileSize" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="OPT_FileSize"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="OPT_IconSeparator"/>
                        </Trigger>
                        <Trigger Property="Source" Value="{x:Null}" SourceName="OPT_Icon">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="OPT_Icon"/>
                        </Trigger>
                        <Trigger Property="IsFileSizeVisible" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="OPT_FileSize"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="OPT_IconSeparator"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Visible" TargetName="OPT_Placeholder"/>
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Visibility" Value="Visible" TargetName="OPT_Placeholder"/>
                        </Trigger>
                        <Trigger Property="Multiselect" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="OPT_Icon"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="OPT_FileSize"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="OPT_IconSeparator"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="OPT_Items"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswBox.MouseOver.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswBox.MouseOver.Border}" TargetName="OPT_MainBorder"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswBox.Focused.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswBox.Focused.Border}" TargetName="OPT_MainBorder"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Background" Value="{DynamicResource StswBox.ReadOnly.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswBox.ReadOnly.Foreground}"/>
                            <Setter Property="IsEnabled" Value="False" TargetName="PART_DialogButton"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource StswBox.Disabled.Background}" TargetName="OPT_MainBorder"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StswBox.Disabled.Border}" TargetName="OPT_MainBorder"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource StswBox.Disabled.Foreground}"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="OPT_Placeholder"/>
                        </Trigger>
                        <Trigger Property="HasError" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource StswBox.Error.Border}" TargetName="OPT_MainBorder"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>