<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:se="clr-namespace:StswExpress">

    <Style TargetType="{x:Type se:StswSubSelector}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource StswBorder.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource StswText.Static.Foreground}"/>

        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerClipping" Value="False"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="Padding" Value="1"/>

        <Setter Property="IconFill" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="IconScale" Value="1.5"/>
        <Setter Property="IsContentVisible" Value="True"/>

        <Setter Property="Focusable" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>

        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="se:StswPopup.Background" Value="{DynamicResource StswPopup.Static.Background}"/>
        <Setter Property="se:StswPopup.BorderBrush" Value="{DynamicResource StswPopup.Static.Border}"/>
        <Setter Property="se:StswPopup.CornerClipping" Value="False"/>
        <Setter Property="se:StswPopup.CornerRadius" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type se:StswSubSelector}">
                    <!-- main -->
                    <DockPanel>
                        <!-- popup -->
                        <se:StswPopup x:Name="PART_Popup"
                                      Background="{Binding (se:StswPopup.Background), RelativeSource={RelativeSource TemplatedParent}}"
                                      BorderBrush="{Binding (se:StswPopup.BorderBrush), RelativeSource={RelativeSource TemplatedParent}}"
                                      BorderThickness="{Binding (se:StswPopup.BorderThickness), RelativeSource={RelativeSource TemplatedParent}}"
                                      CornerClipping="{Binding (se:StswPopup.CornerClipping), RelativeSource={RelativeSource TemplatedParent}}"
                                      CornerRadius="{Binding (se:StswPopup.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                      IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                      Padding="{Binding (se:StswPopup.Padding), RelativeSource={RelativeSource TemplatedParent}}"
                                      Placement="Center"
                                      PlacementTarget="{Binding ElementName=OPT_MainBorder}"
                                      ScrollType="DirectionView"
                                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                      StaysOpen="False">
                            <ItemsControl Focusable="False" ItemsSource="{TemplateBinding Items}" Margin="{TemplateBinding Padding}"/>
                        </se:StswPopup>
                        <!-- button -->
                        <se:StswLabel x:Name="OPT_MainBorder"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Content="{TemplateBinding Content}"
                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                      CornerClipping="{TemplateBinding CornerClipping}"
                                      CornerRadius="{TemplateBinding CornerRadius}"
                                      IconData="{TemplateBinding IconData}"
                                      IconFill="{TemplateBinding IconFill}"
                                      IconScale="{TemplateBinding IconScale}"
                                      IconStroke="{TemplateBinding IconStroke}"
                                      IconStrokeThickness="{TemplateBinding IconStrokeThickness}"
                                      IsBusy="{TemplateBinding IsBusy}"
                                      IsContentVisible="{TemplateBinding IsContentVisible}"
                                      Orientation="{TemplateBinding Orientation}"
                                      Padding="{TemplateBinding Padding}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </DockPanel>
                    <!-- triggers -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Background" Value="Transparent" TargetName="OPT_MainBorder"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>